[
  {
    "id": "BUG-67675",
    "summary": "Tomcat and/or Java do not read encrypted private keys with DES-EDE3-CBC generated by openssl-req(1)",
    "description": "Generate a cert/key pair with OpenSSL:\nopenssl req -x509 -newkey rsa:4096 -keyout key.crt -out cert.crt -sha256 -days 5 -passout file:key-password\n\nThis key will have DES-EDE3-CBC as encryption algorithm by default (1.2.840.113549.3.7).\n\nLoad this:\n    <Connector port=\"20001\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n               maxThreads=\"150\" SSLEnabled=\"true\"\n               maxParameterCount=\"1000\"\n               sslImplementationName=\"org.apache.tomcat.util.net.jsse.JSSEImplementation\">\n        <SSLHostConfig>\n            <Certificate certificateKeyFile=\"conf/certs-localhost/key.crt\"\n                         certificateKeyPassword=\"...\"\n                         certificateFile=\"conf/certs-localhost/cert.crt\"\n                         certificateChainFile=\"conf/cacerts.crt\"\n                         type=\"RSA\" />\n        </SSLHostConfig>\n    </Connector>\nTomcat will say:\n10-Oct-2023 21:02:12.966 SCHWERWIEGEND [Catalina-utility-1] org.apache.catalina.security.TLSCertificateReloadListener.checkCertificatesForRenewal [Connector[\"https-jsse-nio-20001\"]], TLS virtual host [_default_] reload of TLS configuration failed\n        java.lang.IllegalArgumentException: PBE parameter parsing error: expecting the object identifier for AES cipher\n                at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:107)\n                at org.apache.tomcat.util.net.AbstractEndpoint.addSslHostConfig(AbstractEndpoint.java:280)\n                at org.apache.coyote.http11.AbstractHttp11Protocol.addSslHostConfig(AbstractHttp11Protocol.java:798)\n                at org.apache.catalina.security.TLSCertificateReloadListener.checkCertificatesForRenewal(TLSCertificateReloadListener.java:152)\n                at org.apache.catalina.security.TLSCertificateReloadListener.lifecycleEvent(TLSCertificateReloadListener.java:116)\n                at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)\n                at org.apache.catalina.core.StandardServer.lambda$startPeriodicLifecycleEvent$0(StandardServer.java:943)\n                at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n                at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\n                at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\n                at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\n                at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n                at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n                at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n                at java.lang.Thread.run(Thread.java:750)\n        Caused by: java.io.IOException: PBE parameter parsing error: expecting the object identifier for AES cipher\n                at com.sun.crypto.provider.PBES2Parameters.parseES(PBES2Parameters.java:381)\n                at com.sun.crypto.provider.PBES2Parameters.engineInit(PBES2Parameters.java:284)\n                at java.security.AlgorithmParameters.init(AlgorithmParameters.java:293)\n                at sun.security.x509.AlgorithmId.decodeParams(AlgorithmId.java:151)\n                at sun.security.x509.AlgorithmId.<init>(AlgorithmId.java:133)\n                at sun.security.x509.AlgorithmId.parse(AlgorithmId.java:413)\n                at javax.crypto.EncryptedPrivateKeyInfo.<init>(EncryptedPrivateKeyInfo.java:98)\n                at org.apache.tomcat.util.net.jsse.PEMFile$Part.toPrivateKey(PEMFile.java:245)\n                at org.apache.tomcat.util.net.jsse.PEMFile.<init>(PEMFile.java:178)\n                at org.apache.tomcat.util.net.jsse.PEMFile.<init>(PEMFile.java:107)\n                at org.apache.tomcat.util.net.SSLUtilBase.getKeyManagers(SSLUtilBase.java:355)\n                at org.apache.tomcat.util.net.SSLUtilBase.createSSLContext(SSLUtilBase.java:268)\n                at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:105)\n                ... 14 more\n\nThe reason is that Java does not support non-AES encrypted keys at least in this class. I won't argue why OpenSSL does use this as default or whether 3DES is secure or not. Just stating facts.\n\nopenssl-req(1) does not provide the option to pass the algorithm, one must generate the key separately then invoke another command to create the pair.\n\nA few references on the topic:\n* https://bugs.openjdk.org/browse/JDK-8221936\n* https://commandlinefanatic.com/cgi-bin/showarticle.cgi?article=art050\n* https://stackoverflow.com/a/60020403/696632\n* https://security.stackexchange.com/q/92593/298430\n* https://github.com/openssl/openssl/issues/7313\n* https://github.com/openssl/openssl/issues/5258\n\nI think we have two options:\n(a) Maybe we can put more effort into our code to read such keys and pass on to JSSE\n(b) Document that this combination is not supported for technical reasons and how the user can solve this himself\n\nIn any case, there should be no surprise since this key is perfectly accepted by OpenSSL.",
    "created": "2023-10-11 07:16 UTC",
    "fixes": [
      "40ac19f"
    ]
  },
  {
    "id": "BUG-66665",
    "summary": "Provide option to supply role mapping from a properties file",
    "description": "Note: This applies to all Tomcat versions\n\nIn enterprises you often use a centralized identity store where you do not have control over the group/roles names, but in your application you want to use friendly role names, e.g., 'admin', 'user', 'clerk', etc. Luckily realms utilize  Context.findRoleMapping(String) indirectly, so we only need to populate those mappings.\n\nI have written such a mapping listener and would like to integrate it into upstream: https://mo-tomcat-ext.sourceforge.net/apidocs/net/sf/michaelo/tomcat/extras/listeners/PropertiesRoleMappingListener.html if there is a general interest, I guess there is. There code is straight forward: https://sourceforge.net/p/mo-tomcat-ext/code/HEAD/tree/trunk/src/main/java/net/sf/michaelo/tomcat/extras/listeners/PropertiesRoleMappingListener.java",
    "created": "2023-06-22 07:43 UTC",
    "fixes": [
      "c8adc4c"
    ]
  },
  {
    "id": "BUG-66618",
    "summary": "add longDate attribute to XML in directory listing",
    "description": "In my application I need to list directory unsing descending date. Sorting can easily be done using xslt, but date attribute in XML is a string which is a fll representation of Java Date that starts from Day of the week. If XSLT sorting is applied the files sort order does not make any sense. \n\nTo solve this problem I suggest to introduce a new attribute - longDate - which will be a long value of the Date, i.e. a number whichi will be perfect for sorting using XSLT.",
    "created": "2023-05-28 08:04 UTC",
    "fixes": [
      "b3d60da"
    ]
  },
  {
    "id": "BUG-66543",
    "summary": "Misleading error log in fireRequestDestroyEvent",
    "description": "In the method fireRequestDestroyEvent of the StandardContext class, there is an error log of key \"standardContext.requestListener.requestInit\", in case of exception.\n\nLogging about a request initialized event instead of a request destroyed event is a bit misleading.\n\nAn appropriate log key and an appropriate log message in LocalStrings*.properties would be better.",
    "created": "2023-03-24 21:57 UTC",
    "fixes": [
      "0ac3383"
    ]
  },
  {
    "id": "BUG-62897",
    "summary": "Provide a property to disable WebappClassLoaderBase.checkThreadLocalsForLeaks()",
    "description": "When running on Java 11 with clearReferencesObjectStreamClassCaches and clearReferencesRmiTargets both set to false, a number of reflective access warnings are still generated when the web app class loader is stopped:\n\nWARNING: Illegal reflective access by org.apache.catalina.loader.WebappClassLoaderBase (file:/Users/awilkinson/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.12/tomcat-embed-core-9.0.12.jar) to field java.lang.Thread.threadLocals\nWARNING: Illegal reflective access by org.apache.catalina.loader.WebappClassLoaderBase (file:/Users/awilkinson/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.12/tomcat-embed-core-9.0.12.jar) to field java.lang.Thread.inheritableThreadLocals\nWARNING: Illegal reflective access by org.apache.catalina.loader.WebappClassLoaderBase (file:/Users/awilkinson/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.12/tomcat-embed-core-9.0.12.jar) to field java.lang.ThreadLocal$ThreadLocalMap.table\nWARNING: Illegal reflective access by org.apache.catalina.loader.WebappClassLoaderBase (file:/Users/awilkinson/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.12/tomcat-embed-core-9.0.12.jar) to method java.lang.ThreadLocal$ThreadLocalMap.expungeStaleEntries()\nWARNING: Illegal reflective access by org.apache.catalina.loader.WebappClassLoaderBase (file:/Users/awilkinson/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.12/tomcat-embed-core-9.0.12.jar) to field java.lang.ThreadLocal$ThreadLocalMap$Entry.value\n\nI believe these all originate from code that's called by WebappClassLoaderBase.checkThreadLocalsForLeaks(). It would be useful to have a property that allows these checks to be disabled in the same way as the others.",
    "created": "2018-11-09 09:39 UTC",
    "fixes": [
      "e4ea23e"
    ]
  },
  {
    "id": "BUG-66184",
    "summary": "Null root logger level on Java 8",
    "description": "The constructor `java.util.logging.LogManager$RootLogger` in OpenJDK 8 no longer sets the log level. This causes the following test to fail:\n\n    Logger current = ...;\n    while (current.getLevel() == null && current.getParent() != null) {\n        current = current.getParent();\n    }\n    assertNotNull(current.getLevel());\n\nAs far as I understand the `java.util.logging.Logger` contract forbids both `getLevel()` and `getParent()` to return a null value.\n\nSteps to reproduce:\n\n * create an application with a `logging.properties` file without a `.level` property.",
    "created": "2022-07-28 15:31 UTC",
    "fixes": [
      "d54295e"
    ]
  },
  {
    "id": "BUG-66084",
    "summary": "bytesWritten in writeBytes() miscalculation for OutputBuffer",
    "description": "Created attachment 38301 [details]\nleft is source code, right is test code\n\n\u5728org.apache.catalina.connector.OutputBuffer\u7c7b\u7684private void writeBytes(ByteBuffer from) \u65b9\u6cd5\u4e2d\uff0c\u4e0d\u80fd\u6b63\u786e\u7684\u5c06\u53ef\u5199\u5165\u5b57\u8282\u957f\u5ea6\u8ba1\u5165\u5199\u5165\u5b57\u8282\u6570\u636e\u603b\u91cf\u4e2d\u3002\n\nIn org. Apache. Catalina. Connector. OutputBuffer class private void writeBytes (ByteBuffer from) method, is unable to correctly write bytes will be recorded in writing bytes of data amount. -By translation software",
    "created": "2022-05-24 01:51 UTC",
    "fixes": [
      "9c5da5d"
    ]
  },
  {
    "id": "BUG-65131",
    "summary": "OpenSSLEngine errors on a connection affect other connections",
    "description": "This issue was previously reported in https://bz.apache.org/bugzilla/show_bug.cgi?id=62054 but was discarded because it was not reproducible. However, I have been able to reproduce it.\n\nThe setup is:\ntomcat 9.0.34\nHTTPNIO connector, with OpenSSLEngine implementation\nopenssl 1.0.2u\n\nTo reproduce, configure a secure connector with a self-signed certificate.\n\nThen, in a loop, access the secure connector using curl, but ignore the self-signed certificate errors (-k), like this:\nfor i in {1..1000} ; do curl -q -k https://hostname >/dev/null 2>&1; echo $?; done\n\nThe exit code should always be zero if the connection is successful.\n\nWhile the test is running, access the same interface, but let curl fail the connection by letting it verify the certificate:\ncurl https://hostname\ncurl: (60) Peer's certificate issuer has been marked as not trusted by the user.\n\nThe test will start reporting connection errors (exit code 52). Run both in a tight loop to get many errors.\n\nThe following stack trace is visible in tomcat logs:\n\nFINE: OpenSSL error: [336462231] message: [error:140E0197:SSL routines:SSL_shutdown:shutdown while in init]\nFeb 08, 2021 11:41:19 AM org.apache.coyote.http11.Http11Processor service\nFINE: Error parsing HTTP request header\njavax.net.ssl.SSLException: error:140E0197:SSL routines:SSL_shutdown:shutdown while in init\n        at org.apache.tomcat.util.net.openssl.OpenSSLEngine.checkLastError(OpenSSLEngine.java:946)\n        at org.apache.tomcat.util.net.openssl.OpenSSLEngine.pendingReadableBytesInSSL(OpenSSLEngine.java:631)\n        at org.apache.tomcat.util.net.openssl.OpenSSLEngine.unwrap(OpenSSLEngine.java:558)\n        at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:629)\n        at org.apache.tomcat.util.net.SecureNioChannel.read(SecureNioChannel.java:617)\n        at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.fillReadBuffer(NioEndpoint.java:1229)\n        at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.read(NioEndpoint.java:1141)\n        at org.apache.coyote.http11.Http11InputBuffer.fill(Http11InputBuffer.java:761)\n        at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:356)\n        at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:260)\n        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\n        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)\n        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n        at com.broadsoft.xsp.platform.InstrumentedExecutor$Tracker.run(InstrumentedExecutor.java:413)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n        at java.lang.Thread.run(Thread.java:748)\n\n\nMy feeling is that this is related to the same problem that led to this fix: https://github.com/apache/tomcat/commit/ebab25a3576a315ca676db7ce2366e53f9dcf311\nIt looks like, in this case, there are multiple errors waiting in the openssl error queue, and just reading one error is not sufficient to clear the queue.\nTherefore, SSL errors on a connection are permitted to propagate to other connections as long as they are processed on the same thread.\n\n\nAs an aside, I also noticed the following NPE stacktrace in the logs, but I'm not sure if it's related. It may be a different scenario that caused it. I think it's related to SecureNioChannel.processSNI returning/throwing before creating the SSLEngine.\n\nFeb 08, 2021 11:48:00 AM org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper doClose\nSEVERE: Failed to close channel\njava.lang.NullPointerException\n        at org.apache.tomcat.util.net.SecureNioChannel.close(SecureNioChannel.java:534)\n        at org.apache.tomcat.util.net.SecureNioChannel.close(SecureNioChannel.java:560)\n        at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doClose(NioEndpoint.java:1172)\n        at org.apache.tomcat.util.net.SocketWrapperBase.close(SocketWrapperBase.java:396)\n        at org.apache.tomcat.util.net.NioEndpoint$Poller.cancelledKey(NioEndpoint.java:684)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\n        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n        at com.broadsoft.xsp.platform.InstrumentedExecutor$Tracker.run(InstrumentedExecutor.java:413)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n        at java.lang.Thread.run(Thread.java:748)",
    "created": "2021-02-08 17:29 UTC",
    "fixes": [
      "85f214b"
    ]
  },
  {
    "id": "BUG-65106",
    "summary": "ConfigFileLoader cannot properly handle file url running with SecurityManager on openjdk 1.8",
    "description": "Created attachment 37718 [details]\nzip file with screens\n\nspring-boot 1.5.22 creates instance of Http11NioProtocol with certificate keystore file defined with file url. Images set-url.png, set-url2.png.\n\nWhen it reaches ConfigFileLoader, location is not absolute so it puts catalina_base before file url creating \"c:/tmp/catalina/file:/c:/tmp/my.jks\". Check if it is file throws AccessControlException (access denied (\"java.io.FilePermission\" \"C:\\tmp\\120\\a\\catalina\\file:\\C:\\tmp\\120\\key.jks\" \"read\")\n). And it is impossible to create such a policy for SecurityManager.\n- ConfigFileLoader.png\n- ConfigFileLoader.png\n- exception.png\n\ngetInputStream method can handle file url but when using SecurityManager under zulu, correto.\n\nOracle java 1.8 works correctly. SecurityManager has no complains about such weird path. Just openjdks have problem.\n\nFails on\n- zulu openjdk newer - zulu8.42.0.23-ca-jdk8.0.232-win_x64\n- correto 1.8.0_282\n\n\n```\n   public static InputStream getInputStream(String location) throws IOException {\n        File f = new File(location);\n        if (!f.isAbsolute()) {\n            f = new File(CATALINA_BASE_FILE, location);\n        }\n\n        if (f.isFile()) {\n            return new FileInputStream(f);\n        } else {\n            URI uri = getURI(location);\n\n            try {\n                URL url = uri.toURL();\n                return url.openConnection().getInputStream();\n            } catch (IllegalArgumentException var4) {\n                throw new IOException(sm.getString(\"configFileLoader.cannotObtainURL\", new Object[]{location}), var4);\n            }\n        }\n    }\n```",
    "created": "2021-01-26 12:56 UTC",
    "fixes": [
      "dd6094b"
    ]
  },
  {
    "id": "BUG-65001",
    "summary": "HTTPNIO non-blocking IO servlet 3.1 API may fail to alert webapp that a request is complete",
    "description": "Created attachment 37624 [details]\nTest servlet\n\nUnder certain IO error conditions, tomcat will fail to alert that an asynchronous request is completed and destroyed.\nBoth the AsyncListener's onComplete method and ServletRequestListener's requestDestroyed method are not called.\nThis may cause a webapp to believe that a request is still valid while tomcat has already recycled the objects.\n\nI was able to reproduce this issue using a WriteListener (non-blocking IO servlet API 3.1) with the httpnio connector on the latest tomcat release (9.0.41).\nThis appears to be caused when an IOException is raised while attempting to write to the ServletOutputChannel during the WriteListener's onWritePossible callback.\n\nIt also seems possible to trigger this issue by manually throwing an exception in the onWritePossible callback.\n\nThe following exception can also be seen in the logs:\njava.lang.IllegalStateException: Calling [asyncPostProcess()] is not valid for a request with Async state [ERROR]\n\nI've attached a test servlet that demonstrates this issue.\nTo simulate IO errors, an http request is aborted before the full response body is read. The servlet then records various async callbacks it receives and it can be seen that some callbacks are not always called, i.e. the AsyncListener's onComplete callback and ServletRequestListener's requestDestroyed callback.\nThe servlet compares synchronous requests, asynchronous requests, and asynchronous requests with non-blocking IO.",
    "created": "2020-12-17 15:38 UTC",
    "fixes": [
      "829bfd7"
    ]
  },
  {
    "id": "BUG-64931",
    "summary": "Implement validation of changelog.xml file at build time",
    "description": "I have a fix for this that I will commit shortly. I am filing an issue to better document the problem and design decisions.\n\n\nThe file \"webapps/docs/changelog.xml\" sometimes has structural errors. Those errors are hard to spot. Thus it would be better to have an automated solution to catch and report them at build time.\n\nFor example, in Apache Tomcat 10.0.0-M10 the file has two such errors: at lines 182 and 1550.\n\nhttps://github.com/apache/tomcat/blob/10.0.0-M10/webapps/docs/changelog.xml#L181\n\n\nThere are the following possibilities to implement the check:\n\n(1) With XSLT, in the tomcat-docs.xsl stylesheet.\n\nIt is possible, but it would be an odd choice.\n\n- Reporting an error can be done in XSLT 1.0 with\n\n  <xsl:message terminate = \"yes\">...</xsl:message>\n\nMore recent versions of XSLT specification support validation against an XML Schema.\n\n- Custom behaviour could be triggered by file name. The tomcat-docs.xsl stylesheet declared a `<xsl:param name=\"filename\"` parameter.\n\n\n(2) With an XML Schema.\n\nI tried this way, but failed.\n\n- Validation against an XML Schema is triggered with Apache Ant Task schemavalidate.\n\n- Running a check against the changelog file with a simple schema fails shortly with an error:\n\n  Element type \"document\" must be declared.\n\n- My investigation (running with `ant -verbose` and searching through source code) found that this message is generated when performing a validation against a DTD.\n\n(MSG_ELEMENT_NOT_DECLARED, org.apache.xerces.impl.dtd.XMLDTDValidator, in Apache Xerces 2.12.0)\n\n- I tried running with `<schemavalidate disableDTD=\"true\"`, but it does not help, as it fails at a `<!DOCTYPE document` declaration at the top of changelog.xml file.\n\n- I did not found any other setting, any parser feature that could selectively turn off validation against a DTD.\n\n\n(3) With a DTD.\n\nI went with this way, and it worked successfully.\n\nValidation against a DTD can be performed with Apache Ant Task xmlvalidate.\n\n- Notes:\n\n1. I defined the DTD inline in the changelog.xml file itself.\n\nIt could be moved to an external file, but there is no actual need as I am not going to validate other files.\n\n2. Any XML element used in changelog.xml and project.xml files must be declared in the DTD. Any its attributes must be declared as well.\n\n(The project.xml file is included into the changelog as an external entity.)\n\nThus far the only HTML markup elements that are actually used in Tomcat 10 changelog are <code> and <a>, but we may want to add others in the future.\n\nA useful Tutorial on DTDs:\nhttps://www.w3schools.com/xml/xml_dtd_intro.asp\n\nA simple generic way to declare an element is\n\n <!ELEMENT elementname ANY>\n\nA simple generic way to declare an attribute of an element is\n\n <!ATTLIST elementname attributename CDATA #IMPLIED>",
    "created": "2020-11-18 19:05 UTC",
    "fixes": [
      "3f3150f",
      "b3806e4",
      "07607ca",
      "d0d773e"
    ]
  },
  {
    "id": "BUG-64334",
    "summary": "Netbeans cannot debug test classes with uninitialised jvmarg",
    "description": "Created attachment 37163 [details]\ndiff for TOMCAT_8_5_54/tomcat/res/ide-support/netbeans/nb-tomcat.xml\n\nI do not understand the use intended by this jvmarg, which is undefined. I can compile and run a single unit test class, but the debug action crashes.\n\ndebug-selected-file-in-test:\ndebugging test: org.apache.catalina.realm.TestJNDIRealm\nError: Could not find or load main class ${test.jvmarg.egd}\nTestsuite: org.apache.catalina.realm.TestJNDIRealm\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0 sec\n\nSimply commenting-out the offending line in:-\n\nTOMCAT_8_5_54/tomcat/res/ide-support/netbeans/nb-tomcat.xml\n\n... allows the unit test to be debugged successfully.",
    "created": "2020-04-10 06:38 UTC",
    "fixes": [
      "7b50c35"
    ]
  },
  {
    "id": "BUG-63859",
    "summary": "AJP cping/cpong mode failing on Tomcat 9.x",
    "description": "Hello,\n\nWe have a common infratructure for all our Tomcat instances (7,8&9) based on httpd + mod_jk / ajp.\n\nWe implemented a while ago cping/pong om httpd with mode A, and it works perfectly with Tomcat 7&8.\n\n[info] ajp_handle_cping_cpong::jk_ajp_common.c (976): (tomcat9) timeout in reply cpong after 10000 ms. Socket = 31 (event=110)\n[info] ajp_maintain::jk_ajp_common.c (3464): (tomcat9) failed sending request, socket -1 keepalive cping/cpong failure (errno=110)\nLeading progressively to\n[info] ajp_service::jk_ajp_common.c (2775): (tomcat9) sending request to tomcat failed (recoverable), because of error during request sending (attempt=2)\n[error] ajp_service::jk_ajp_common.c (2796): (tomcat9) connecting to tomcat failed (rc=-3, errors=1, client_errors=0).\n[info] service::jk_lb_worker.c (1601): service failed, worker tomcat9 is in error state\n\nWe use the latest mod_jk (mod_jk/1.2.46)\n\nI tried using Tomcat native protocol (which we never used so far), same error.\n\nI tried to look into tomcat 9 logs, nothing shows, and Tomcat is still up and running (Inspecction via JMX shows everything ok, Probe console and manager console shows no limit...).\nI even tried to run a massload using Jmeter on AJP port while the error was showing in httpd logs : no error, all the GET ends in success. But httpd still sees a cping/cpong error.\n\nIn the end I may have fixed the issue by changing the mod_jk parameter and disabling the \"cping cpong\" mode :\nworker.tomcat9.ping_mode=C\ninstead of previously worker.tomcat9.ping_mode=A\n(which does the cping/cpong on a regular basis)\n\n=> Since I changed this I don't have any errors in httpd.\n\nSo I suspect a regression in Tomcat 9 somewhere with AJP protocol, even though I couldn't find any error in Tomcat logs ...\n\nNot sure if I can help more, just wanted to highlight this issue but if you need more detail or debug log don't hesitate.\n\nThe settings of my connectors (7 8 & 9 ) are the same :\n<Connector port=\"xxxx\" protocol=\"AJP/1.3\" maxThreads=\"400\" connectionTimeout=\"600000\"/>",
    "created": "2019-10-17 11:59 UTC",
    "fixes": [
      "203057c"
    ]
  },
  {
    "id": "BUG-63909",
    "summary": "ExpiresFilter not account for 304 when content-type is null",
    "description": "Firstly, I apologize as I am quite new to contributing so I hope I am pursuing the correct path.  I have struggled mightily recently trying to track down why our caching configuration was not really working with tomcat 8.5.x and we finally found the nugget in the ExpiresFilter.  Here is our ExpiresFilter configuration snippet.\n\n<filter>\n  <filter-name>ExpiresFilter</filter-name>\n  <filter-class>org.apache.catalina.filters.ExpiresFilter</filter-class>\n  <init-param>\n    <param-name>ExpiresByType image/gif</param-name>\n    <param-value>access plus 6 hours</param-value>\n  </init-param>\n  <init-param>\n    <param-name>ExpiresByType text/css</param-name>\n    <param-value>access plus 6 hours</param-value>\n  </init-param>\n  <init-param>\n    <param-name>ExpiresByType application/javascript</param-name>\n    <param-value>access plus 6 hours</param-value>\n  </init-param>\n  <init-param>\n    <param-name>ExpiresExcludedResponseStatusCodes</param-name>\n    <param-value>302, 500, 503</param-value>\n  </init-param>\n</filter>\n\n<filter-mapping>\n  <filter-name>CustomExpiresFilter</filter-name>\n  <url-pattern>/*</url-pattern>\n  <dispatcher>REQUEST</dispatcher>\n</filter-mapping>\n\nThe ExpiresFilter according to the documentation can be configured to expire content by type or with a default or with both.  However, there is a hole in the current logic of the getExpirationDate(XHttpServletResponse response) method if the filter is not configured with a default.  When the response status is 304 (which in our case not excluded - see config above) the content-type is null in the first lines of the getExpirationDate method. The ExpiresFilter is unable to set the appropriate cache-control and expires headers because the content-type is not present.\n\nThe net effect is that once the content has expired with the ExpiresFilter configuration settings above, the cache-control and expires headers cannot be set by the ExpiresFilter and a slew of incoming browser requests for the same static content are met with repeated 304s.  Essentially, using only ExpiresByType in ExpiresFilter results in successful caching, but only until the content expires, at which point, the wave of 304s begin.  I don't think this was the intended effect.\n\nOne could argue that, even when a 304 is returned, one can still set the cache-control and expires headers appropriately and extend the cache lifetime thus reducing load as intended.  One way to do this is to add logic to the ExpiresFilter to use the request URI and request file metadata to determine what the content type would have been in this scenario - another might be an in memory collection of URIs to content type for lookup.  I am sure there are others but not knowing the source code surrounding this in depth, I cannot say what would be best.\n\nIn our research several people have solved this issue by changing or entirely removing other headers like the ETag header and the Last-Modified and that does not seem correct.  I think it is perfectly valid to have ETag with a 304 and cache-control and expires headers and maybe even more elegant and appropriate?",
    "created": "2019-11-08 22:12 UTC",
    "fixes": [
      "c5a962e"
    ]
  },
  {
    "id": "BUG-63816",
    "summary": "java.lang.IllegalStateException: Calling [asyncMustError()] is not valid for a request with Async state [STARTING]",
    "description": "After starting async processing request.startAsync() for the request a background thread invokes the response write functions. Sometimes when IO errors happen I get the exception below.\n\n\njava.lang.IllegalStateException: Calling [asyncMustError()] is not valid for a request with Async state [STARTING]\njava.lang.IllegalStateException: Calling [asyncMustError()] is not valid for a request with Async state [STARTING]\n\tat org.apache.coyote.AsyncStateMachine.asyncMustError(AsyncStateMachine.java:421)\n\tat org.apache.coyote.AbstractProcessor.setErrorState(AbstractProcessor.java:118)\n\tat org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:424)\n\tat org.apache.coyote.Response.action(Response.java:211)\n\tat org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:546)\n\tat org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:112)\n\tat org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:190)\n\tat org.apache.coyote.Response.doWrite(Response.java:599)\n\tat org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:329)",
    "created": "2019-10-08 16:52 UTC",
    "fixes": [
      "44a50ce"
    ]
  },
  {
    "id": "BUG-53930",
    "summary": "allow capture of catalina stdout/stderr to a command instead of just a file [PATCH]",
    "description": "Created attachment 29414 [details]\npatch to catalina.sh adding support for CATALINA_OUT_CMD\n\ncatalina.sh currently supports passing in a value for CATALINA_OUT. If supplied the stdout/stderr of the java process will be redirected to this file. This single file scenario makes it difficult to keep file contents for long running process separated on a per day basis as is typical for production logging scenarios.  We use cronolog (http://http://cronolog.org/) to do automatic log rolling but others may have different needs.  The attached patch adds support to catalina.sh for an optional CATALINA_OUT_CMD variable. If this variable is defined, the stdout and stderr of the java process will be piped to the command.  We use it as in:\n\nCATALINA_OUT_CMD=\"cronolog $CATALINA_BASE/logs/catalina.%Y-%m-%d.out >/dev/null 2>&1\"\nexport CATALINA_OUT_CMD\ncatalina.sh start $@\n\nOf course long-running, server-side applications should typically not be writing to stdout/stderr but sometimes this is out of your control.",
    "created": "2012-09-24 15:53 UTC",
    "fixes": [
      "c08fb5d"
    ]
  },
  {
    "id": "BUG-53737",
    "summary": "Use ServletContext.getJspConfigDescriptor() in Jasper instead of XML-parsing of merged web.xml [PATCHES]",
    "description": "In Tomcat 7.0.29 in ContextConfig#webConfig() a merged web.xml file is serialized into String and is put as an attribute into ServletContext.\n\n[[[\n        String mergedWebXml = webXml.toXml();\n        sContext.setAttribute(\n               org.apache.tomcat.util.scan.Constants.MERGED_WEB_XML,\n               mergedWebXml);\n]]]\n\nThen in JspConfig#processWebDotXml() of Jasper it is parsed again from XML into objects.\n\nIt would be better to access the necessary configuration through Servlet 3.0 API methods such as ServletContext.getJspConfigDescriptor().",
    "created": "2012-08-18 00:54 UTC",
    "fixes": [
      "f234a9e",
      "5ef2855"
    ]
  },
  {
    "id": "BUG-45832",
    "summary": "add DIGEST authentication support to Ant tasks",
    "description": "It would be useful if the Catalina Ant tasks supported HTTP Digest authentication, in addition to Basic authentication. This is convenient if one already has a digest-based security realm and doesn't want to maintain an extra  tomcat-users.xml file. (And Basic authentication is terribly insecure.)\n\nCurrently the AbstractCatalinaTask [1] just performs Basic authentication:\n\n  // Set up an authorization header with our credentials\n  String input = username + \":\" + password;\n  String output = new String(Base64.encode(input.getBytes()));\n  hconn.setRequestProperty(\"Authorization\",\n                           \"Basic \" + output);\n\n[1] http://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk/java/org/apache/catalina/ant/AbstractCatalinaTask.java",
    "created": "2008-09-18 05:17 UTC",
    "fixes": [
      "39e4997"
    ]
  },
  {
    "id": "BUG-62603",
    "summary": "Changes in tag files are not reflected in the rendered view or they end up with a java.lang.NoClassDefFoundError",
    "description": "We have an application that contains jsps and tag files, when we deploy jsp/tag changes instead of reloading the webapp entirely we change those in the webapps folder, and let jsp reloading process do the work for us. \n\nFrom time to time, we suffer from two different kind of errors:\n\n1- java.lang.NoClassDefFoundError because the tag file used in a jsp is \"not found\", but the jsp and also the tag file are there (TOMCA_HOME/work/Catalina/localhost/ROOT/org/apache/jsp/...)\n\n2- changes in a tag file are never reflected in the rendered view(jsp)\n\n\nI've took some time to debug the jsp reloading code, and here are my thoughts\n\nJsp reloading process at the end is calling JspServlet.periodicEvent method which triggers the process by calling JspRuntimeContext's checkUnload and checkCompile methods\n\nJspRuntimeContext's jsps attribute is the one that contains jsps and tag references that are going to be checked from time to time, depending on checkInterval and development config values, to see if a JSP page (and its dependent files) need to be recompiled.\n\nJspRuntimeContext's jsps attribute is backed by a ConcurrentHashMap, so the insertion order MAY NOT be preserved when we iterate through the list of jsps and dependant files. Check JspRuntimeContext.checkCompile() method.\n\nThe order in which we iterate through the tags and jsps is relevant because when a change in a tag file is detected the .java and also .class files are generated and its JspServletWrapper.reload attribute is set to true, afterwards in the same JspRuntimeContext.checkCompile() loop, when the process detects that a jsp needs to be recompiled because is \"dependant\" on this tag file  TagFileProcessor.loadTagFile method will invoke the JspServletWrapper.loadTagFile method that belongs to the modified tag, and because its reload attribute was set to true JSpServletWrapper's tagHandler attribute will be loaded again. After this process the .java and .class file that belong to that jsp will be generated \n\nBut what would happen if we :\n- detect a change in the jsp first and generate the .java and .class files (jsp needs to be recompiled because of a change in one dependant tag). \n- receive a request that match that jsp which will set JspServletWrapper.reload attribute(set to true in the previous step) to false while still \"pointing\" to the old tag class\n- detect the change in the tag file which will recreate .java and .class files\n\nThen, depending on the order of the incoming request and the jsp detection process :\n- tag changes are not reflected in the rendered view\n- or even worse java.lang.NoClassDefFoundError\n\nSorry for this long description but it's not easy to explain :)",
    "created": "2018-08-07 18:44 UTC",
    "fixes": [
      "1ea1e41"
    ]
  },
  {
    "id": "BUG-62175",
    "summary": "Infinite recursive session PersistentManager.swapIn loop with OOM",
    "description": "Environment:\nWindows 8 NTFS\nOracle JDK 1.8.0_152\nApache Tomcat 9.0.6\nApache OpenWebBeans 2.0.4 (OWB)\nSession ID ABCDE in filesystem storage and containing an expired session.\n\nTL;DR: Expired session is deserialized over and over again because OWB calls Request.getSession(false) in sessionDestroyed and ContainerBackgroundProcessor is unable to delete the session file while it is deserialized.\n\n\nWhile Tomcat is starting up, I direct the Browser to request my application with session ABCDE which had been swapped out but is already expired.\nTomcat calls \nStandardSession.isValid() \n-> StandardSession.expire()\n-> each registered HttpSessionListener.destroy()\n\nNow OWB having a HttpSessionListener registered is calling RequestFacade.getSession(false) which expands to\n-> PersistentManager.findSession()\n-> PersistentManager.swapIn()\n-> StandardSession.isValid()\n... repeat until OutOfMemory\n\nAn important side condition is that FileStore.remove() fails for unknown reason. File.delete just returns false which is not very expressive. Maybe the session file is beeing read / locked accidentally the same time while the ContainerBackgroundProcessor tries to delete it. This could be caused by the session beeing read over and over again by that recursive loop where the most expansive operation is deserialization of the session, giving close to zero time for a successful delete.\n\n[This is one reason why I better like Linux: deleting a file while it is read simply deletes the file.]\n\nBTW: When the HTTP-Thread is blocked by a breakpoint, ContainerBackgroundProcessor succeeds in deleting the file and stops the recursion.\n\n\nHere are the stacktraces of HTTP thread and ContainerBackgroundProcessor:\n\n\"http-nio-8080-exec-2\" #66 daemon prio=5 os_prio=0 tid=0x0000000021e9b000 nid=0xf94 at breakpoint[0x000000002c40a000]\n   java.lang.Thread.State: RUNNABLE\n        at my.web.common.application.listener.ApplicationListener.sessionDestroyed(ApplicationListener.java:112)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000d709d800> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000d61c8d48> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb10008> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb100d8> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb10150> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb101c8> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb10240> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb102b8> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb10330> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb103a8> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb10420> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb10498> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSession(Request.java:2374)\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)\n        at org.apache.webbeans.web.context.WebContextsService.destroySessionContext(WebContextsService.java:553)\n        at org.apache.webbeans.web.context.WebContextsService.endContext(WebContextsService.java:228)\n        at org.apache.webbeans.servlet.WebBeansConfigurationListener.sessionDestroyed(WebBeansConfigurationListener.java:197)\n        at org.apache.catalina.session.StandardSession.expire(StandardSession.java:801)\n        - locked <0x00000000fbb10510> (a org.apache.catalina.session.StandardSession)\n        at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:659)\n        at org.apache.catalina.session.PersistentManagerBase.swapIn(PersistentManagerBase.java:736)\n        - locked <0x00000000fa5be668> (a java.lang.Object)\n        at org.apache.catalina.session.PersistentManagerBase.findSession(PersistentManagerBase.java:488)\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2909)\n        at org.apache.catalina.connector.Request.getSessionInternal(Request.java:2635)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:464)\n        at org.apache.catalina.valves.rewrite.RewriteValve.invoke(RewriteValve.java:540)\n        at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:651)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\n        at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:651)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\n        at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:407)\n        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\n        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:754)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1376)\n        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n        - locked <0x00000000f898c128> (a org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n        at java.lang.Thread.run(Thread.java:748)\n\n\t\t\n\n\n\n\n\n\njava.io.IOException: Unable to delete file [....ABCDE.session] which is no longer required\n\tat org.apache.catalina.session.FileStore.remove(FileStore.java:269)\n\tat org.apache.catalina.session.StoreBase.processExpires(StoreBase.java:189)\n\tat org.apache.catalina.session.PersistentManagerBase.processExpires(PersistentManagerBase.java:433)\n\tat org.apache.catalina.session.ManagerBase.backgroundProcess(ManagerBase.java:558)\n\tat org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5406)\n\tat org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1396)\n\tat org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1400)\n\tat org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1400)\n\tat org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1368)\n\tat java.lang.Thread.run(Thread.java:748)",
    "created": "2018-03-13 10:59 UTC",
    "fixes": [
      "51db262"
    ]
  },
  {
    "id": "BUG-60940",
    "summary": "\"unpackWARs=false\" causes different behavior of classloader",
    "description": "Hi all,\n\nwhen I try to run my JSF 2.2 application which uses Richfaces on a Tomcat 8 with \"unpackWARs=false\" some parts of Richfaces/JSF will not be loaded during startup. This is caused by a different behavior of the classloader when the app cannot be unpacked by the server. \n\nDuring JSF startup is searches for all Jar files which include a \"META-INF/\" folder. This is done by calling getResources(\"META-INF/\") on the classloader. In all found resources it searches for taglibs and faces config extensions. The problem now is, that the calssloader returns a different number of resources when the app is unpacked and when the app is deployed a zip file. \n\nThis is caused by a the way the classloader deals with JarWarRessources. When the app is unpacked the server uses direct jar file access und searches in the zip file for the folder. In this case every jar with a \"META-INF/\" folder is found. When the app is a war file which cannot be unpacked by the server the \"JarWarRessourceSet\" uses a \"JarInputStream\" to read and cache the jar files content. But this input stream skips the \"META-INF/\" folder by default:\n\nJarFileInputStream.java\n\n...\n\n    public JarInputStream(InputStream in, boolean verify) throws IOException {\n        super(in);\n        this.doVerify = verify;\n\n        // This implementation assumes the META-INF/MANIFEST.MF entry\n        // should be either the first or the second entry (when preceded\n        // by the dir META-INF/). It skips the META-INF/ and then\n        // \"consumes\" the MANIFEST.MF to initialize the Manifest object.\n        JarEntry e = (JarEntry)super.getNextEntry();\n        if (e != null && e.getName().equalsIgnoreCase(\"META-INF/\"))\n            e = (JarEntry)super.getNextEntry();\n        first = checkManifest(e);\n    }\n\n... \n\nThis will cause the issues with the app because some parts(taglibs and faces config extensions) cannot be loaded. \n\nYou can reproduce the issue with the richfaces sample project which can be generated via maven:\n\nmvn archetype:generate -DarchetypeGroupId=org.richfaces.archetypes -DarchetypeArtifactId=richfaces-archetype-simpleapp -DarchetypeVersion=4.5.17.Final -DgroupId=org.docs.richfaces -DartifactId=new_project\n\nReplace the sample projects pom by this one (sorry I'm not able to upload files from this workstation):\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.docs.richfaces</groupId>\n    <artifactId>new_project</artifactId>\n    <name>RichFaces 4 Application</name>\n    <version>1.0-SNAPSHOT</version>\n    <packaging>war</packaging>\n\n    <url>http://jboss.org/richfaces</url>\n\n    <repositories>\n        <!-- You should seriously consider using a repository manager or declare repositories in your settings.xml.\n        See http://www.sonatype.com/people/2009/02/why-putting-repositories-in-your-poms-is-a-bad-idea/   -->\n        <repository>\n            <id>jboss-public-repository-group</id>\n            <name>JBoss Public Maven Repository Group</name>\n            <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>\n            <layout>default</layout>\n            <releases>\n                <enabled>true</enabled>\n                <updatePolicy>never</updatePolicy>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n                <updatePolicy>never</updatePolicy>\n            </snapshots>\n        </repository>\n    </repositories>\n    <pluginRepositories>\n        <pluginRepository>\n            <id>jboss-public-repository-group</id>\n            <name>JBoss Public Maven Repository Group</name>\n            <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>\n            <layout>default</layout>\n            <releases>\n                <enabled>true</enabled>\n                <updatePolicy>never</updatePolicy>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n                <updatePolicy>never</updatePolicy>\n            </snapshots>\n        </pluginRepository>\n    </pluginRepositories>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.source>1.6</maven.compiler.source>\n        <maven.compiler.target>1.6</maven.compiler.target>\n        <!-- Setting this property using archetype-metadata.xml requiredPorperty\n            so that generated project uses correct version of richfaces.\n        -->\n        <org.richfaces.version>4.5.17.Final</org.richfaces.version>\n        <version.jsp-api>2.1</version.jsp-api>\n        <version.jstl-api>1.2</version.jstl-api>\n        <version.servlet-api>3.0.1</version.servlet-api>\n        <version.el-api>2.2</version.el-api>\n    </properties>\n\n    <build>\n        <finalName>new_project</finalName>\n        <plugins>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>2.3.2</version>\n            </plugin>\n            <plugin>\n                <artifactId>maven-war-plugin</artifactId>\n                <version>2.3</version>\n                <configuration>\n                    <warName>${project.artifactId}</warName>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.richfaces</groupId>\n                <artifactId>richfaces-cache-bom</artifactId>\n                <type>pom</type>\n                <version>${org.richfaces.version}</version>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.richfaces</groupId>\n                <artifactId>richfaces-build</artifactId>\n                <type>pom</type>\n                <version>${org.richfaces.version}</version>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.richfaces</groupId>\n            <artifactId>richfaces</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>javax.faces</groupId>\n            <artifactId>javax.faces-api</artifactId>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.glassfish</groupId>\n            <artifactId>javax.faces</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>javax.servlet-api</artifactId>\n            <version>${version.servlet-api}</version>\n        </dependency>\n        <dependency>\n            <groupId>javax.servlet.jsp</groupId>\n            <artifactId>jsp-api</artifactId>\n            <version>2.2</version>\n        </dependency>\n        <dependency>\n            <groupId>javax.el</groupId>\n            <artifactId>el-api</artifactId>\n            <version>${version.el-api}</version>\n        </dependency>\n        <dependency>\n            <groupId>javax.servlet.jsp.jstl</groupId>\n            <artifactId>jstl-api</artifactId>\n        </dependency>\n\n\n        <dependency>\n            <groupId>net.sf.ehcache</groupId>\n            <artifactId>ehcache</artifactId>\n        </dependency>\n    </dependencies>\n\n    <profiles>\n        <profile>\n            <id>jee6</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-war-plugin</artifactId>\n                        <configuration>\n                            <webappDirectory>${project.build.directory}/${project.build.finalName}-jee6</webappDirectory>\n                            <classifier>jee6</classifier>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n\n            <dependencies>\n                <dependency>\n                    <groupId>javax.faces</groupId>\n                    <artifactId>javax.faces-api</artifactId>\n                    <scope>provided</scope>\n                </dependency>\n                <dependency>\n                    <groupId>org.glassfish</groupId>\n                    <artifactId>javax.faces</artifactId>\n                    <scope>provided</scope>\n                </dependency>\n                <dependency>\n                    <groupId>javax.transaction</groupId>\n                    <artifactId>jta</artifactId>\n                    <version>1.1</version>\n                    <scope>provided</scope>\n                </dependency>\n            </dependencies>\n        </profile>\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-war-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>jee6</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>war</goal>\n                                </goals>\n\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n\n\nSet \" <Host appBase=\"webapps\" autoDeploy=\"false\" name=\"localhost\" unpackWARs=\"false\">\" in the server.xml of the tomcat. \n\n1) copy the applications war file to the webapps folder and start the tomcat. When accessing the index.xhtml you can see that richfaces is not loaded correctly. \n\n2) copy a the unzipped war file to the webapps folder an start the server.When accessing the index.xhtml you can see that richfaces is loaded correctly. \n\nTo make the difference more clear you can add a \"<a4j:log/>\" to the index.xhtml. \n\nRegards,\nVincent",
    "created": "2017-03-30 05:34 UTC",
    "fixes": [
      "0a330bc"
    ]
  },
  {
    "id": "BUG-49464",
    "summary": "DefaultServlet and CharacterEncoding",
    "description": "DefaultServlet doesn't set a character encoding. As per spec the encoding of the page is asssumed to be iso-8859-1. \n\nIf files are served with a different encoding, this can lead to display problems in the browser.\n\nThe problem has been discussed in http://old.nabble.com/DefaultServlet-doesn%27t-set-charset-td18893115.html#a18929527\nIn http://marc.info/?l=tomcat-user&m=127678462332564&w=2 another component was added - namely mod_jk/httpd - which set a character encoding on its own, if no character set was set previously.\n\nThere are at least three different solutions for this problem. \n\nOne of them is extending DefaultServlet to be configurable to include a charset in the response. A patch has been proposed by Markus Sch\u00f6nhaber (MKS) and can be found at\n  http://www.ddt-consult.de/sendCharset.patch\n\nThe two other solutions which were discussed are\n * configure httpd/mod_jk properly by adding AddDefaultCharset ENCODING to the right location/host\n * Use a filter to set the character encoding\n\nAll in all I still think it would be a good idea to explicitly set the wanted encoding in the first possible place, which is the DefaultServlet.",
    "created": "2010-06-18 08:13 UTC",
    "fixes": [
      "97d86d4",
      "a56b69b",
      "6714f0c"
    ]
  },
  {
    "id": "BUG-60718",
    "summary": "requestDestroyed not called for asynchronous after I/O error",
    "description": "Sequence of events:\n1. Servlet \"synchronously\" writes an async response: ac = req.startAsync(); try { resp.getOutputStream().write(new byte[1024*1024]); } finally { ac.complete(); }\n2. Client disconnects to force broken pipe (etc.): uc = new URL(\"...\").openConnection(); uc.getInputStream().close(); uc.disconnect();\n\nIn this case, where ServletRequestListener.requestInitialized is called.  Summary of scenarios:\n- Fail: the servlet writes the response synchronously after startAsync (described above)\n- Fail: In Tomcat 8.5.11, the servlet writes the response truly asynchronously (with a new Thread)\n- Pass: in Tomcat 8.5.6, the servlet writes the response truly asynchronously (with a new Thread)\n- Pass: the servlet writes the response truly synchronously (without startAsync)\n- Pass: the client reads the stream without disconnecting early (all Tomcat versions, regardless of other scenarios presented).\n\nI think requestDestroyed should always be called.",
    "created": "2017-02-09 13:17 UTC",
    "fixes": [
      "3b51ec4"
    ]
  },
  {
    "id": "BUG-61055",
    "summary": "RewriteValve proxy support",
    "description": "Hi\n\nin rewrite valve there is this comment:\n\n        // FIXME: Proxy not supported, would require proxy capabilities in Tomcat\n        /* } else if (flag.startsWith(\"proxy\") || flag.startsWith(\"P\")) {\n            rule.setProxy(true);*/\n\nIs it planned to actually implement it? One implementation could rely on some external library addition like httpcomponent for instance. Wdyt?\n\nIf not intended maybe throwing an error or warning should replace that commented logic?",
    "created": "2017-04-30 12:55 UTC",
    "fixes": [
      "8942a1e"
    ]
  },
  {
    "id": "BUG-61076",
    "summary": "Context attribute altDDName not Documented",
    "description": "I was looking for functionality that would allow me to deploy one physical directory with two different deployment descriptors. The apps essentially use the same code base, but expose different pages, URLs and resources. After looking through the source code, I found the altDDName attribute defined in j.o.a.c.startup.ContextConfig. This does exactly what I need. I added the attribute to my context.xml, and my application deployed as expected. Here's what I would propose for documentation for config/context.html#Attributes:\n\naltDDName \nThe absolute path (or URL) to the deployment descriptor for this context. This overrides the default deployment descriptor name /WEB-INF/web.xml. Specifying the alternate deployment descriptor name allows you to deploy more than one application from one path.",
    "created": "2017-05-05 22:55 UTC",
    "fixes": [
      "6f00246"
    ]
  },
  {
    "id": "BUG-61086",
    "summary": "Some clients hang when HTTP responses give status 205 Reset Content",
    "description": "Created attachment 34992 [details]\nExemple standalone servlet to give out HTTP 205 response\n\nWhen a servlet running on Tomcat sends a response over HTTP with status 205 Reset Content, some clients hang with this response and just wait for it to \"complete\" after Tomcat considers it fully done.\n\nSo far I've identified two clients:\n- command line program curl, version 7.52.1,\n- Jersey client, version 1.19.1.\n\nUsing Tomcat 8.5.15 (latest release), but the issue was here for as long as I went back and it seems still here in Tomcat 9.\n\nDebugging the HTTP communication shows it has to do with the fact that the response has no body (which is correct, as mandated by RFC for status 205), and no indication of content length to explicitly say that there is no body. That last part is incorrect behavior according to RFC 7231 section 6.3.6:\n\n   \" Since the 205 status code implies that no additional content will be provided, a server MUST NOT generate a payload in a 205 response.  In other words, a server MUST do one of the following for a 205 response: a) indicate a zero-length body for the response by including a Content-Length header field with a value of 0; b) indicate a zero-length payload for the response by including a Transfer-Encoding header field with a value of chunked and a message body consisting of a single chunk of zero-length; or, c) close the connection immediately after sending the blank line terminating the header section. \"\n\nIt seems the HTTP clients I've identified, do rely on this requirement stated by RFC. Testing with servers that do add a Content-Length: 0 header or a Transfer-encoding chunked with a zero-length chunk with a status 205, these clients behave as expected. Also note, that Tomcat will typically eventually reach its keep-alive timeout and close the connection. Which is actually a valid way to end the response, and these clients do accept it when they don't reach their own timeouts. It's just the response takes by default 20 seconds to be finished, and is done with closing a perfectly re-usable connection.\n\nSteps to reproduce:\n\n (1) Have a clean Tomcat install version 8.5.15\n\n (2) Deploy on it a root webapp that responds to requests with\n     HTTP status 205.\n\n     You can use the standalone servlet class I put in attachment.\n     As can be seen, it responds to all requests with status 205,\n     and it adds a custom header just to be sure the response comes\n     from this servlet.\n\n (3) Make an HTTP request to it with curl.\n\n     Response looks like:\n\n$ curl -v http://localhost:8080\n* STATE: INIT => CONNECT handle 0x6000578f0; line 1413 (connection #-5000)\n* Rebuilt URL to: http://localhost:8080/\n* Added connection 0. The cache now contains 1 members\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* STATE: CONNECT => WAITCONNECT handle 0x6000578f0; line 1466 (connection #0)\n* Connected to localhost (127.0.0.1) port 8080 (#0)\n* STATE: WAITCONNECT => SENDPROTOCONNECT handle 0x6000578f0; line 1583 (connection #0)\n* Marked for [keep alive]: HTTP default\n* STATE: SENDPROTOCONNECT => DO handle 0x6000578f0; line 1601 (connection #0)\n> GET / HTTP/1.1\n> Host: localhost:8080\n> User-Agent: curl/7.52.1\n> Accept: */*\n>\n* STATE: DO => DO_DONE handle 0x6000578f0; line 1680 (connection #0)\n* STATE: DO_DONE => WAITPERFORM handle 0x6000578f0; line 1807 (connection #0)\n* STATE: WAITPERFORM => PERFORM handle 0x6000578f0; line 1817 (connection #0)\n* HTTP 1.1 or later with persistent connection, pipelining supported\n< HTTP/1.1 205\n< x-mmar-servletname: return205\n< Date: Thu, 11 May 2017 15:43:26 GMT\n* no chunk, no close, no size. Assume close to signal end\n* Marked for [closure]: HTTP: No end-of-message indicator\n<\n* STATE: PERFORM => DONE handle 0x6000578f0; line 1981 (connection #0)\n* multi_done\n* Curl_http_done: called premature == 0\n* Closing connection 0\n* The cache now contains 0 members\n\n     curl hangs for a while after \"Marked for [closure]: HTTP: No end-of-message indicator\".\n     Then after 20 seconds Tomcat reaches connection\n     keep-alive timeout, closes the connection and curl\n     accepts it as a valid way to finish the response.\n\nProposed (naive) patch:\n\nI have located the cause for this behavior, in class\norg.apache.coyote.http11.Http11Processor\nin line 1144.\nStatus 205 is treated the same way as 204 and 304,\nthat is to say no body as mandated by RFC,\nbut also no content length information.\n\nThe naive patch attached just removes 205 from those,\nwhich solves the issue with the problematic clients.\nHowever it makes it possible to add a body to a\n205 response, and it becomes the webapp's author's\nresponsibility to not do that.\n\nAnother, possibly better, approach, could be to\nhave a special case for 205 only, where it\nwould ignore any attempt to put a content,\nbut it would add the header Content-Length: 0.",
    "created": "2017-05-11 20:29 UTC",
    "fixes": [
      "5216ddb"
    ]
  },
  {
    "id": "BUG-43400",
    "summary": "enum support for tag libs",
    "description": "Support for the direct use of enums in the attributes of tags.\n\nAssume there is the enum:\n\npublic enum LoginType {\n  account, manager, reseller;\n}\n\nand a setter for a tag called 'page':\n\npublic void setLogin_required_type( LoginType login_required_type ) { ...\n\nthen the jsp code:\n\n<ez:page login_required_type=\"account\"/>\n\nwould result in the generation of the java code:\n\npage_tag_instance.setLogin_required_type(LoginType.account);",
    "created": "2007-09-14 11:53 UTC",
    "fixes": [
      "1d69785"
    ]
  },
  {
    "id": "BUG-58178",
    "summary": "Exception not passed to c:catch in custom jsp tag",
    "description": "Created attachment 32935 [details]\nProject demonstrating the problem\n\nIf a custom tag uses the jstl <catch> tag, then the exception is saved into the page attributes, but is not actually available to other tags via EL expressions.\n\nIf, however, the <catch> tag is used directly in a jsp page, then the exception is propagated into the var and visible to subsequent El expressions.\n\n\nI'm attaching a small project that contains a taglib that demonstrates the problem. The project contains 2 jsps:\n\n1. no-tagtest.jsp that uses the <catch> and other jstl tags directly in the jsp\n2. tagtest.jsp that references a custom tag that uses the <catch> and other jstl tags.\n\nThe problem seems to be that when a custom tag uses any other tags, then the page context is an instance of JspContextWrapper. When resolving el expressions, the JspContextWrapper.getElContext() returns an ELContext for the rootContext, rather than the page context. In this example, the <catch> tag saves the exception as an attribute named \"error\" in the page context attributes (the page context will be an instance of JspContextWrapper). However, when the \"error\" variable is referenced later in an EL expression, the EL mechanism has a page context that is the root context of the JspContextWrapper and thus can't resolve that variable.",
    "created": "2015-07-24 10:00 UTC",
    "fixes": [
      "7ff2f11"
    ]
  },
  {
    "id": "BUG-60788",
    "summary": "Cookies value contains quotes when the Cookie header contains $Version=1 and the header's value is enclosed by quotes",
    "description": "Under some rare circumstances it looks like Tomcat-8 is keeping quotes around Cookie values where it shouldn't. It seems to be associated to the presence of a $Version=1 token in the request's Cookie header. I noticed this behaviour in a real world application's log with the following request:\n\nUser-Agent: Dalvik/2.1.0 (Linux; U; Android 5.1; A2 Build/LMY47I)\nCookie: $Version=\"1\"; userId=\"foo\";$Path=\"/\";$Domain=\"www.example.org\"\n\nMy application would read \"foo\" (including quotes) were it it actually should be foo without quotes.\n\nSkimming through RFCs 2109, 2965 and 6265 a value may be enclosed with quotes. But I'm no expert on this, I just skimmed through the RFCs by looking at the production rules and searching for the term \"quote\" to see if there are any exeptions. For me, this request looks valid and the parsed Cookie value should not contain quotes.\n\nI created this SSCCE where the tests demonstrate the issue:\nhttps://github.com/spring-projects/spring-boot-issues/pull/63/files\nIn the tests you can see that it only keeps quotes if the request contains a $Version=1 token. Without that token, quotes are removed.\n\nAs you can see it's a Spring Boot application, but digging through the code, I couldn't find any Cookie parsing code in Spring. They use the servlet API, which is effectivly provided by an embedded Tomcat-8.5.11.",
    "created": "2017-02-28 16:52 UTC",
    "fixes": [
      "eeab4cf"
    ]
  },
  {
    "id": "BUG-58103",
    "summary": "NIO2 warning: Incorrect connection count, multiple socket.close called on the same socket.",
    "description": "While smoke testing NIO2 connector with following config:\n             \n    <Connector port=\"84\" protocol=\"org.apache.coyote.http11.Http11Nio2Protocol\"\n               connectionTimeout=\"20000\"\n               redirectPort=\"8443\" />\n\nI get a number of warnings in my log files:\n\n05-Jul-2015 22:48:07.685 WARNING [http-nio2-449-exec-3] org.apache.tomcat.util.net.AbstractEndpoint.countDownConnection Incorrect connection count, multiple socket.close called on the same socket.\n\nI don't find anything suspicious in my tests or configuration.",
    "created": "2015-07-05 20:59 UTC",
    "fixes": [
      "935fe83"
    ]
  },
  {
    "id": "BUG-60409",
    "summary": "IllegalArgumentException at java.nio.Buffer.position at SocketWrapperBase.transfer()",
    "description": "An unexpected exception found in log.\n\nSEVERE: Error finishing response\njava.lang.IllegalArgumentException\n  at java.nio.Buffer.position(Buffer.java:244)\n  at sun.nio.ch.IOUtil.write(IOUtil.java:68)\n  at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)\n  at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)\n  at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)\n  at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)\n  at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:125\n  at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)\n  at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:60\n  at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)\n  at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:519)\n  at org.apache.coyote.http11.Http11OutputBuffer.finishResponse(Http11OutputBuffer.java:318)\n  at org.apache.coyote.http11.Http11Processor.endRequest(Http11Processor.java:1458)\n  at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:823)\n  at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\n  at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:7\n  at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)\n  at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n  at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n  at java.lang.Thread.run(Thread.java:745)\n\nI'm not sure but cause may be the same as in recently fixed bug 60372. SocketWrapperBase also does not guard Buffer.limit() usages. Looks like all usages of this method on reusable buffers should be checked.",
    "created": "2016-11-24 01:00 UTC",
    "fixes": [
      "b3ce6ad",
      "74a12f5"
    ]
  },
  {
    "id": "BUG-60013",
    "summary": "Non-ASCII characters in querystring get mangled after URL Rewrite using RewriteValve",
    "description": "I have RewriteValve configured for the ROOT context which is the only context in my deployment setup. \n\nI have many RewriteRules like \n\nRewriteRule ^/abc/(.*)$ /xyz.do?param=$1 [L]\n\nwhere a part of the URL gets rewritten as querystring \n\nwhen I access the URL with non-ASCII characters like http://www.example.com/abc/\u5728\u7ebf\u6d4b\u8bd5\n\nThe page does not load. Checking the rewrite and access logs I found \n\nRewrite Log\n\nRewrote /abc/\u5728\u7ebf\u6d4b\u8bd5 as /xyz.do?param=\u5728\u7ebf\u6d4b\u8bd5 with rule pattern ^/abc/(.*)$\n\nAccess log\n\n/xyz.do?param=????\n\nThis issue only happens when a part of the URL gets rewritten as the querystring. Checking the source code of the RewriteValve \n\nchunk.append(URLEncoder.DEFAULT.encode(urlString));\n\nI found the querystring is not encoded. Is this the cause of the problem?",
    "created": "2016-08-18 08:01 UTC",
    "fixes": [
      "b1a2f79",
      "2bd86c3",
      "fd88dcc",
      "5f93fbd"
    ]
  },
  {
    "id": "BUG-58490",
    "summary": "Webapp does not start when using web-fragments icw unpackWARs=\"false\"",
    "description": "When I deploy a webapp that uses web-fragments it does not start when the host is configured with unpackWARs=\"false\".\n\nWith unpackWARs=\"true\" the same webapp starts fine.\n\nThis can be shown on a clean install of tomcat8, deploy webfragments sample from apache-geronimo.\n\nThe war can be downloaded from maven central:\nhttp://search.maven.org/remotecontent?filepath=org/apache/geronimo/samples/javaee6/webfragment-javaee6-war/3.0.0/webfragment-javaee6-war-3.0.0.war\n\nThe only change in conf/server.xml is unpackWARs setting from true to false:\n\n <Host name=\"localhost\"  appBase=\"webapps\"\n            unpackWARs=\"false\" autoDeploy=\"true\">\n\n\n\nINFO: Deploying web application archive /crypt/apache/tomcat/trunk/output/build/webapps/webfragment-javaee6-war-3.0.0.war\nOct 09, 2015 10:07:56 AM org.apache.catalina.startup.ContextConfig processServletContainerInitializers\nSEVERE: Failed to process JAR found at URL [/webfragment-javaee6-war-3.0.0] for ServletContainerInitializers for context with name [{1}]\njava.net.MalformedURLException: no !/ in spec\n\tat java.net.URL.<init>(URL.java:619)\n\tat java.net.URL.<init>(URL.java:482)\n\tat java.net.URL.<init>(URL.java:431)\n\tat java.net.JarURLConnection.parseSpecs(JarURLConnection.java:179)\n\tat java.net.JarURLConnection.<init>(JarURLConnection.java:162)\n\tat sun.net.www.protocol.jar.JarURLConnection.<init>(JarURLConnection.java:81)\n\tat sun.net.www.protocol.jar.Handler.openConnection(Handler.java:41)\n\tat java.net.URL.openConnection(URL.java:971)\n\tat java.net.URL.openStream(URL.java:1037)\n\tat org.apache.catalina.startup.WebappServiceLoader.parseConfigFile(WebappServiceLoader.java:161)\n\tat org.apache.catalina.startup.WebappServiceLoader.load(WebappServiceLoader.java:118)\n\tat org.apache.catalina.startup.ContextConfig.processServletContainerInitializers(ContextConfig.java:1616)\n\tat org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1128)\n\tat org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:771)\n\tat org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:305)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:95)\n\tat org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5080)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)\n\tat org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:945)\n\tat org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1798)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.NullPointerException: no !/ in spec\n\tat sun.net.www.protocol.jar.Handler.parseAbsoluteSpec(Handler.java:170)\n\tat sun.net.www.protocol.jar.Handler.parseURL(Handler.java:150)\n\tat java.net.URL.<init>(URL.java:614)\n\t... 28 more",
    "created": "2015-10-09 08:57 UTC",
    "fixes": [
      "800feb8"
    ]
  },
  {
    "id": "BUG-58430",
    "summary": "The meaning and reason of \"Sim blocking\" is not documented",
    "description": "Created attachment 33118 [details]\nPatch documenting 'sim blocking'\n\nIn Connector Comparison chart, 'sim blocking' is not documented.",
    "created": "2015-09-20 15:28 UTC",
    "fixes": [
      "948c42c"
    ]
  },
  {
    "id": "BUG-58414",
    "summary": "Can not transfer empty string through Web Socket",
    "description": "Created attachment 33111 [details]\nExample of ServerEndpoint implementation.\n\nEvery time, when I try to transfer empty string through web socket I get an IllegalArgumentException from java.nio.Buffer#limit(int newLimit) because of negative new limit value. The reason of this issue is org.apache.tomcat.websocket.PerMessageDeflate#sendMessagePart(List<MessagePart> uncompressedParts)\nline:\n\n    // End of compressed message. Drop EOM bytes and output.\n    compressedPayload.limit(compressedPayload.limit() - EOM_BYTES.length);\n\ncompressedPayload.limit() has zero value and EOM_BYES.length has value, which greater than 0.",
    "created": "2015-09-15 21:49 UTC",
    "fixes": [
      "a10dba9"
    ]
  },
  {
    "id": "BUG-58284",
    "summary": "StandardSession attempts to silently write NonSerializable objects",
    "description": "Customer reported an issue with non-serializable objects when using our DynamoDB Session manager (https://github.com/aws/aws-dynamodb-session-tomcat/issues/30). After digging into the code it looks like StandardSession is attempting to do several things when giving non-serializable attributes. For top level objects that don't implement serializable it silently removes it. That code is working fine although I am a little wary that it doesn't fail as this could hide bugs in the users code and make it difficult for them to determine why a certain attribute isn't being persisted to the backing store. After that StandardSession attempts to write the remaining attributes to the ObjectOutputStream. If a serialization exception is encountered here (i.e. some object in the object graph does not implement Serializable) then the exception is caught and a special indicator NOT_SERIALIZED is written to the object stream and a warning is logged. Now internally ObjectOutputStream is handling the same exception and writing it's own special marker, TC_EXCEPTION, and the serialized exception object to the stream. This is written before StandardSession has a chance to write NOT_SERIALIZED. In StandardSession.readObject there is logic to skip deserializing any objects that have been written to the stream as NOT_SERIALIZED. This code can never actually be executed though as ObjectInputStream is checking if there are any occurences of TC_EXCEPTION and will deserialize the exception object, wrap it in a WriteAbortedException and throw it out. This causes a session with non-serializable objects in the attributes to be written \"successfully\" but causes an exception to be thrown when attempting to read that same session.\n\nI understand modifying StandardSession to now throw exceptions when non-serializable objects are encountered could be considered a breaking change so I propose adding some kind of overload or configuration to enable this behavior for users that want to opt in. Failing fast when non-serializable attributes are detected seems like the right way to go as this should be fixed in the customers code. I'm willing to submit a patch for this although I wanted to open the issue first to make sure you concur with my assessment and coding up a patch is worth my time.",
    "created": "2015-08-26 17:02 UTC",
    "fixes": [
      "14ac634"
    ]
  },
  {
    "id": "BUG-58230",
    "summary": "Incorrect input from ServletInputStream in ReadListener",
    "description": "I have a reproducible case where the bytes read with ServletInputStream via a javax.servlet.ReadListener are incorrect.\n\nThe code is an experiment with layering Reactive Streams over Servlet 3.1 non-blocking I/O. I apologize for not being able to create a more focused isolated example (I did try). That said it is a very basic example that hopefully with some debugging you can zero in on the issue.\n\nTo observe the failure, clone https://github.com/spring-projects/spring-reactive, then change the following read buffer size to 4096 https://github.com/spring-projects/spring-reactive/blob/master/src/main/java/org/springframework/reactive/web/servlet/HttpHandlerServlet.java#L37, then run the test https://github.com/spring-projects/spring-reactive/blob/master/src/test/java/org/springframework/reactive/web/servlet/HttpHandlerServletTomcatIntegrationTests.java.\n\nThe test sends an HTTP request with a body of 3 * 4096 bytes. The server echoes that back. However the returned body doesn't match starting at index 4096, which happens to be the start of the second chunk.\n\nOn the server requests are delegated to an HttpHandler which accepts a (Reactive Streams) Publisher for the input and returns a Publisher for the output. In the test the HttpHandler is EchoHandler which returns the input Publisher as the response Publisher effectively piping input directly to output. Underlying that are RequestBodyPublisher and ResponseBodySubscriber which adapt the Read/WriteListener to Reactive Streams.\n\nIncreasing the size of the array into which chunks are read to 4293 makes the tests pass.",
    "created": "2015-08-10 16:06 UTC",
    "fixes": [
      "beb7fe1"
    ]
  },
  {
    "id": "BUG-58157",
    "summary": "RecycleRequiredException and missing AsyncListener.onTimeout call",
    "description": "Created attachment 32916 [details]\nServlet which starts asynchronous processing and intentionally waits for a timeout before dispatching to a static HTML file.\n\nOverview:\nWhen repeatedly polling an asynchronous servlet which (intentionally) times out, I occasionally see the following exception in the console:\n\nJul 20, 2015 8:58:45 AM org.apache.catalina.connector.CoyoteAdapter checkRecycled\nINFO: Encountered a non-recycled request and recycled it forcedly.\norg.apache.catalina.connector.CoyoteAdapter$RecycleRequiredException\n\tat org.apache.catalina.connector.CoyoteAdapter.checkRecycled(CoyoteAdapter.java:590)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.recycle(AbstractHttp11Processor.java:1809)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.release(Http11NioProtocol.java:199)\n\tat org.apache.tomcat.util.net.NioEndpoint$Poller.cancelledKey(NioEndpoint.java:1100)\n\tat org.apache.tomcat.util.net.NioEndpoint$Poller.timeout(NioEndpoint.java:1466)\n\tat org.apache.tomcat.util.net.NioEndpoint$Poller.run(NioEndpoint.java:1234)\n\tat java.lang.Thread.run(Thread.java:745)\n\nThis coincides with a request not receiving any response.\n\nThe majority of times the servlet is called, the correct response is returned as expected once the request times out, however on occasion (sometimes within 1 min, sometimes not until 30 mins of successful requests have passed) I see this exception and AsyncListener.onTimeout() is never called to produce the response.\n\nSteps to reproduce:\n0) Configure Tomcat to use the NIO connector\n1) Deploy the attached TimeoutServlet (note: add a static HTML page 'timeout.html' to the root of the web application to serve as the timeout response).\n2) Using a tool of your choice (I used JMeter), repeatedly send a request to the servlet and wait for the timeout response before sending the next request.\n\nActual Results:\nEventually, one of the requests will receive no response and the above exception will be written to the console.\n\nExpected Results:\nEvery request should receive the timeout response (timeout.html) after 1 second and no exception should appear in the console.\n\nAdditional Information:\nAppears to be very similar to https://bz.apache.org/bugzilla/show_bug.cgi?id=57011.",
    "created": "2015-07-20 13:32 UTC",
    "fixes": [
      "86fce42"
    ]
  },
  {
    "id": "BUG-58222",
    "summary": "Typo in http.html#SSL_Support",
    "description": "\"kesytore\" \u2192 \"keystore\"",
    "created": "2015-08-07 10:36 UTC",
    "fixes": [
      "8b8ee47"
    ]
  },
  {
    "id": "BUG-56825",
    "summary": "AuthenticatorBase not looking for Coyote Request certificate",
    "description": "When using Tomcat SSL coyote connector, the request does not by default contain the certificate chain under the key javax.servlet.request.X509Certificate\n\nThe following coyote action must be invoked in order to extract the certificate chain and enrich the request under the right key.\n\nThis makes it impossible to use the SSLAuthenticator with preemptive mode for example.\n\nProvided a test to reproduce and the fix within the patch file.\nI tried to follow Tomcat guidelines and coding rules. If not lemme know so that I can resubmit a new patch.\n\nNot tested under Tomcat 6 and 8 but, the AuthenticatorBase does not change a lot over versions so I guess the bug existed before Tomcat 7 and still exists in Tomcat 8.",
    "created": "2014-08-07 12:16 UTC",
    "fixes": [
      "36f9433"
    ]
  },
  {
    "id": "BUG-56581",
    "summary": "When an error occurs on a long JSP page, do not loose last chunk of printed text",
    "description": "Created attachment 31680 [details]\ntest.jsp\n\n(Reproducible with the current trunk @1598763\n\nIf there is a JSP page that generates a lot of text and then encounters an error, the client receives only 8K*n bytes of text. The last chunk of text - before the actual place of the error is lost and not sent to the client.\n\nTo reproduce:\n1. Deploy the attached test.jsp and call it.\n2. Actual behaviour:\nThe last line of text is \"970 \".\nIf you save the result, it will be 16384 (16 Kb) (with LF line ends).\n\nExpected behaviour:\nThe last line of text is \"1000 Hello world!\".\n\nMy motivation for this enhancement request is that seeing all the text before the error place would make it easier to locate the error.\n\nAlso the lost ~8K of text may contain something valuable for the client.\n\nThe current workaround is to look into localhost.date.log for the actual stack trace. The stacktrace is for generated java file. It may contain a JSP source snippet, but not always.",
    "created": "2014-05-31 13:54 UTC",
    "fixes": [
      "7b5da46"
    ]
  },
  {
    "id": "BUG-55975",
    "summary": "Inconsistent escaping applied to V0 cookie values",
    "description": "If a V0 value contains a backslash or a dquote then it will be converted to a V1 cookie and transformed into a quoted-string. During that transformation checks are made for backslash and dquote characters but they are not escaped consistently.\n\nIf the value contains a dquote, then it will be escaped. For example, the value \u00aba\"b\u00bb results in\n  Set-Cookie: foo=\"a\\\"b\"; Version=1\n\nIf the value contains a backslash then it will not be escaped. For example, the value \u00aba\\b\u00bb results in\n  Set-Cookie: foo=\"a\\b\"; Version=1\nwhich means the backslash is then incorrectly escaping the \"b\" character.\n\nIf the value contains a dquote and a backslash, then the dquote will be escaped and the backslash will not so \u00aba\"b\\c\u00bb results in\n  Set-Cookie: foo=\"a\\\"b\\c\"; Version=1",
    "created": "2014-01-08 04:18 UTC",
    "fixes": [
      "b3b16a0"
    ]
  },
  {
    "id": "BUG-56010",
    "summary": "JspFactory.getPageContext with JspWriter.DEFAULT_BUFFER throws IllegalArgumentException",
    "description": "When a servlet calls JspFactory.getPageContext() with JspWriter.DEFAULT_BUFFER, Tomcat Japser throws IllegalArgumentException.\n\nPageContext pageContext = JspFactory.getDefaultFactory().getPageContext(this, req, resp, null, false, JspWriter.DEFAULT_BUFFER, true);\n\n\njava.lang.IllegalArgumentException: Buffer size <= 0\n\torg.apache.jasper.runtime.JspWriterImpl.<init>(JspWriterImpl.java:81)\n\torg.apache.jasper.runtime.PageContextImpl._initialize(PageContextImpl.java:154)\n\torg.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:125)\n\torg.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:112)\n\torg.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:65)\n\tdvt.jsp.jaspertest.JspFactoryTestServlet.doGet(JspFactoryTestServlet.java:21)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:621)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:728)\n\n\n\nBased on the description of JspFactory.getPageContext(), if buffer size is JspWriter.DEFAULT_BUFFER(-1), PageContext must treat it as implementation default, which in case is org.apache.jasper.Constants#DEFAULT_BUFFER_SIZE(8192).\n\n\nbuffer - size of buffer in bytes, JspWriter.NO_BUFFER if no buffer, JspWriter.DEFAULT_BUFFER if implementation default.\n\nfrom http://docs.oracle.com/javaee/7/api/javax/servlet/jsp/JspFactory.html#getPageContext(javax.servlet.Servlet, javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, boolean, int, boolean)\n\n\nNote that -Dorg.apache.jasper.runtime.JspFactoryImpl.USE_POOL=false should be specified.",
    "created": "2014-01-15 03:34 UTC",
    "fixes": [
      "22fda36"
    ]
  },
  {
    "id": "BUG-56147",
    "summary": "Problem Invoking overloaded methods using EL",
    "description": "Using apache-tomcat-7.0.42 on Windows 7 64bit\n \nUsing the below code in JSP :\n\n<c:forEach var=\"item\" items=\"${listItems }\">\n    <p>${item.someMethod(\"h\") }</p>\n</c:forEach>\n\nresults in:\n\njavax.el.ELException: Cannot convert h of type class java.lang.String to class java.lang.Class\n\nI have the below methods :\n       public void someMethod(String x) {\n              someMethod(methodThatReturnClass(x))\n       }\n\n       public void someMethod(Class clz) {\n              System.out.println(\"Class called\");\n       }",
    "created": "2014-02-17 21:35 UTC",
    "fixes": [
      "42d78bc"
    ]
  },
  {
    "id": "BUG-56029",
    "summary": "Ternary operator doesn't work as expected inside attributes in jspx pages",
    "description": "The following JSPX file worked upto Tomcat 7.0.47:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jsp:root xmlns:jsp=\"http://java.sun.com/JSP/Page\" version=\"2.1\"\n\txmlns:c=\"http://java.sun.com/jsp/jstl/core\" \n\txmlns:fmt=\"http://java.sun.com/jsp/jstl/fmt\"\t\n>\n\t<jsp:directive.page contentType=\"text/html; charset=utf-8\"  pageEncoding=\"UTF-8\" />\n\t<jsp:directive.page session=\"false\" />\n\t<jsp:output omit-xml-declaration=\"true\" />\n\t<div>\t\n\t\t<span id=\"mainNavNews\" class=\"${currentController eq 'News' ? 'selectedItem' : ''}\">foobar</span>\t\n\t</div>\t\n</jsp:root>\n\nWith tomcat 7.0.50 it fails with the following exception:\n\norg.apache.jasper.JasperException: /WEB-INF/views/layouts/mainNavigation.jspx (line: 10, column: 87) \"${currentController eq 'News' ? 'selectedItem' : ''}\" contains invalid expression(s): javax.el.ELException: Failed to parse the expression [${currentControllereq'News'?'selectedItem':''}]\n\tat org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:42)\n\tat org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:443)\n\tat org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:199)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.getJspAttribute(Validator.java:1399)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:772)\n\tat org.apache.jasper.compiler.Node$UninterpretedTag.accept(Node.java:1251)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2375)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2427)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:779)\n\tat org.apache.jasper.compiler.Node$UninterpretedTag.accept(Node.java:1251)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2375)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2427)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:529)\n\tat org.apache.jasper.compiler.Node$JspRoot.accept(Node.java:564)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2375)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2427)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2433)\n\tat org.apache.jasper.compiler.Node$Root.accept(Node.java:474)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2375)\n\tat org.apache.jasper.compiler.Validator.validateExDirectives(Validator.java:1817)\n\tat org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:217)\n\tat org.apache.jasper.compiler.Compiler.__compile(Compiler.java:373)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:353)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:340)\n\tat org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:657)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:357)\n\tat org.apache.jasper.servlet.JspServlet._serviceJspFile(JspServlet.java:390)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:334)\n\nIt works when the ternary operation doesn't appear inside an attribute or instead of eq '==' is used.",
    "created": "2014-01-18 12:42 UTC",
    "fixes": [
      "6643045"
    ]
  },
  {
    "id": "BUG-56031",
    "summary": "Tomcat 7.0.50 breaks on valid EL ternary expressions",
    "description": "After migrating an existing webapp to tomcat 7.0.50 I started getting exceptions for EL expressions that worked fine in previous versions (everything seems to work just fine in 7.0.47 and previous versions, also tomcat 6.0.x).\n\nAll the errors I got were related to ternary expressions, and the error reported a strange corrupted version of the expression.\n\nThis is a sample expression:\n${my:link(!empty registration ? registration : \u2018/test/registration')}\n\nAnd this is the error I get:\norg.apache.jasper.JasperException: /WEB-INF/tags/project/tool.tag (line: 224, column: 110) \"${my:link(!empty registration ? registration : '/test/registration')}\" contains invalid expression(s): javax.el.ELException: Failed to parse the expression [${my:link(!emptyregistration?::'/test/registration')}]\n\n\nAs you can see in the error tomcat reports the expression as \"${my:link(!emptyregistration?::\u2019/test/registration')}\", removing all the whitespace and also replacing the \"registration\" variable with \":\".\n\nI checked all the settings to see if there may be a problem with the file encoding, whitespace characters or similar, but everything looks ok. After downgrading to 7.0.47 with the same webapp and settings everything works ok.\n\nI got several other errors in similar expressions, for all of them the expression reported in the errors has all the whitespace removed.\n\n\nI did a few tests and for this specific case I can make it work by changing it in the following way:\n${my:link(!empty registration ? registration : \u2018/test/registration')} -> does not work\n${my:link(!empty registration ? 'test' : \u2018/test/registration')} -> works\n\nIf this matters, the problems showed up in jsp tag files, with declared jsp version 2.0 (<jsp:root version=\"2.0\" ), xml format. Tested both on mac osx/java6 and redhat linux/java6.\n\nI couldn't find anything that may be related in jasper changelog between 7.0.47 and 7.0.50... do you have any idea if there is something that could cause this behaviour?",
    "created": "2014-01-18 20:53 UTC",
    "fixes": [
      "efc56c5"
    ]
  },
  {
    "id": "BUG-55799",
    "summary": "[websocket] Stability issues when concurrently sending large messages",
    "description": "Created attachment 31055 [details]\nTest case (modifications to the Chat example)\n\nHi,\n\na thread on the Users List [1] described that problems can occur when sending large messages over a WebSocket connection using getBasicRemote().sendText(String).\n\nThe ChatAnnotation class does not synchronize when using this method, which means that multiple threads could call RemoteEndpoint.Basic#sendText() concurrently.\n\nThe JavaDoc of RemoteEndpoint.Basic says:\n\n\"If the websocket connection underlying this RemoteEndpoint is busy sending a message when a call is made to send another one, for example if two threads attempt to call a send method concurrently, or if a developer attempts to send a new message while in the middle of sending an existing one, the send method called while the connection is already busy may throw an IllegalStateException.\"\n\n(I thought I had read earlier that the implementation should synchronize calls to methods of RemoteEndpoint.Basic instead of throwing an ISE, but maybe that has changed).\n\n\nWhen sending large Messages over Websocket using RemoteEndpoint.Basic from different threads without or with synchronization, some problems happen like:\na) The WebSocket connection is suddenly closed (I guess the browser\n   actually aborts the connections due to data corruption or Timeout errors,\n   but I have not examined the raw data sent over TCP)\nb) Various Exceptions occur (see below)\nc) Sometimes when I open the chat.xhtml example in my browser, it shows what\n   seems to be a raw WebSocket response instead of the .xhtml file (see\n   added screenshots)\n\nThese issues also happen after synchronizing calls to RemoteEndpoint.Basic#sendText(), but are then harder to reproduce.\n\n\n\nTo reproduce: \n1) Checkout Tomcat 8 trunk (r1543467) and apply the attached patch. It applies some modifications to the Chat Websocket Example, so that the Javascript sends messages in a regular interval (50 ms), and the ChatAnnotation modifies the message to be 256 times as large as the original message, and sends it back using session.getBasicRemote()#sendText(msg). \n\n2) Build Tomcat and run it on a Windows machine (I used Windows 8.1 x64, Java 1.7.0_45 x64), using the NIO HTTP connector (default configuration).\n\n3) Open Firefox and IE 11. With both browsers, open the Chat example (http://localhost:8080/examples/websocket/chat.xhtml).\n\n4) Repeat the following actions in a regular interval:\n   a) Wait several seconds (it might be that Tomcat already closes one of\n      the two WebSocket connections in that time).\n   b) On one of the browsers (e.g. IE), press F5 several times.\n\n5) After some time, you can see that in one of the browsers, the WebSocket connection is suddenly closed. Tomcat will show one or more of the following exceptions (I think the IOException and ClosedChannelException are expected if the browser aborts the connection):\n\n\n19-Nov-2013 23:18:39.809 SEVERE [http-nio-8080-ClientPoller-0] org.apache.tomcat.util.net.NioEndpoint.processSocket Error allocating socket processor\n java.lang.NullPointerException\n\tat org.apache.tomcat.util.net.NioEndpoint.processSocket(NioEndpoint.java:624)\n\tat org.apache.tomcat.util.net.NioEndpoint$Poller.processKey(NioEndpoint.java:1165)\n\tat org.apache.tomcat.util.net.NioEndpoint$Poller.run(NioEndpoint.java:1122)\n\tat java.lang.Thread.run(Thread.java:744)\n\n\n19-Nov-2013 23:32:16.601 SEVERE [http-nio-8080-exec-3] websocket.chat.ChatAnnotation.onError Chat Error: java.nio.channels.ClosedChannelException\n java.nio.channels.ClosedChannelException\n\tat sun.nio.ch.SocketChannelImpl.ensureReadOpen(SocketChannelImpl.java:252)\n\tat sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:295)\n\tat org.apache.tomcat.util.net.NioChannel.read(NioChannel.java:136)\n\tat org.apache.coyote.http11.upgrade.NioServletInputStream.fillReadBuffer(NioServletInputStream.java:136)\n\tat org.apache.coyote.http11.upgrade.NioServletInputStream.doIsReady(NioServletInputStream.java:49)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.isReady(AbstractServletInputStream.java:62)\n\tat org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:44)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:192)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:180)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:95)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:640)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1555)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\n\n\n19-Nov-2013 23:32:19.658 SEVERE [http-nio-8080-exec-2] websocket.chat.ChatAnnotation.onError Chat Error: java.lang.IllegalArgumentException: java.lang.reflect.InvocationTargetException\n java.lang.IllegalArgumentException: java.lang.reflect.InvocationTargetException\n\tat org.apache.tomcat.websocket.pojo.PojoMessageHandlerWholeBase.onMessage(PojoMessageHandlerWholeBase.java:82)\n\tat org.apache.tomcat.websocket.WsFrameBase.sendMessageText(WsFrameBase.java:369)\n\tat org.apache.tomcat.websocket.WsFrameBase.processDataText(WsFrameBase.java:468)\n\tat org.apache.tomcat.websocket.WsFrameBase.processData(WsFrameBase.java:272)\n\tat org.apache.tomcat.websocket.WsFrameBase.processInputBuffer(WsFrameBase.java:116)\n\tat org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:55)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:192)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:180)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:95)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:640)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1555)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.apache.tomcat.websocket.pojo.PojoMessageHandlerWholeBase.onMessage(PojoMessageHandlerWholeBase.java:80)\n\t... 15 more\nCaused by: java.nio.charset.CoderMalfunctionError: java.nio.BufferOverflowException\n\tat java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:565)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase$TextMessageSendHandler.write(WsRemoteEndpointImplBase.java:624)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:197)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendString(WsRemoteEndpointImplBase.java:154)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:37)\n\tat websocket.chat.ChatAnnotation.broadcast(ChatAnnotation.java:96)\n\tat websocket.chat.ChatAnnotation.incoming(ChatAnnotation.java:83)\n\t... 19 more\nCaused by: java.nio.BufferOverflowException\n\tat java.nio.Buffer.nextPutIndex(Buffer.java:513)\n\tat java.nio.HeapByteBuffer.put(HeapByteBuffer.java:163)\n\tat org.apache.tomcat.util.buf.Utf8Encoder.encodeNotHasArray(Utf8Encoder.java:177)\n\tat org.apache.tomcat.util.buf.Utf8Encoder.encodeLoop(Utf8Encoder.java:40)\n\tat java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:561)\n\t... 25 more\n\n\n19-Nov-2013 23:32:23.353 SEVERE [http-nio-8080-exec-10] websocket.chat.ChatAnnotation.onError Chat Error: java.io.IOException: Eine vorhandene Verbindung wurde vom Remotehost geschlossen\n java.io.IOException: Eine vorhandene Verbindung wurde vom Remotehost geschlossen\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\n\tat sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)\n\tat sun.nio.ch.IOUtil.read(IOUtil.java:197)\n\tat sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:379)\n\tat org.apache.tomcat.util.net.NioChannel.read(NioChannel.java:136)\n\tat org.apache.coyote.http11.upgrade.NioServletInputStream.fillReadBuffer(NioServletInputStream.java:136)\n\tat org.apache.coyote.http11.upgrade.NioServletInputStream.doRead(NioServletInputStream.java:80)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.read(AbstractServletInputStream.java:124)\n\tat org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:46)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:192)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:180)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:95)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:640)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1555)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\n\n\nIf you try to press F5, then it might be that the Websocket connection is closed as soon as it was opened, or that the browser doesn't get a response for the request to chat.xhtml.\n\n\n\nNow, add synchronization by modifying ChatAnnotation's broadcast() method:\n\n    private static void broadcast(String msg) {\n        for (ChatAnnotation client : connections) {\n            synchronized (client) {\n                try {\n                    client.session.getBasicRemote().sendText(msg);\n                } catch (Exception e) {\n    \n                }\n            }\n        }\n    }\n\nand repeat the above steps.\n\nNow, if you open chat.xhtml with both IE and Firefox and do nothing, the WebSocket connection will not be closed. Even if you start to repeatedly press F5, most of the time everything will appear normal (besides getting IOExceptions and ClosedChannelExceptions).\n\nHowever, after I tried this several minutes, I still got the problems that the WebSocket connections are closed just after opening it (or after some time), or that the browser didn't get a response to its HTTP request, or that the browser got a raw WebSocket reply instead of the XHTML page reply (see added screenshots).\n\nI also got these exceptions:\n\n20-Nov-2013 00:18:20.037 SEVERE [http-nio-8080-exec-9] websocket.chat.ChatAnnotation.onError Chat Error: java.io.IOException: java.util.concurrent.ExecutionException: java.io.IOException: Key must be cancelled\n java.io.IOException: java.util.concurrent.ExecutionException: java.io.IOException: Key must be cancelled\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:226)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:476)\n\tat org.apache.tomcat.websocket.WsSession.onClose(WsSession.java:439)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.close(WsHttpUpgradeHandler.java:172)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.access$200(WsHttpUpgradeHandler.java:45)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:194)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:180)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:95)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:640)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1555)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\nCaused by: java.util.concurrent.ExecutionException: java.io.IOException: Key must be cancelled\n\tat org.apache.tomcat.websocket.FutureToSendHandler.get(FutureToSendHandler.java:102)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:222)\n\t... 14 more\nCaused by: java.io.IOException: Key must be cancelled\n\tat org.apache.coyote.http11.upgrade.NioServletOutputStream.doWriteInternal(NioServletOutputStream.java:83)\n\tat org.apache.coyote.http11.upgrade.NioServletOutputStream.doWrite(NioServletOutputStream.java:60)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:118)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:85)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:94)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:81)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:362)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:259)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:217)\n\t... 14 more\n\n\n20-Nov-2013 00:32:53.483 SEVERE [http-nio-8080-exec-3] org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun \n java.lang.NullPointerException\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:593)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1555)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\n\n\n20-Nov-2013 00:35:19.333 SEVERE [http-nio-8080-exec-15] org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.destroy Failed to close WebConnection while destroying the WebSocket HttpUpgradeHandler\n java.lang.NullPointerException\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.destroy(WsHttpUpgradeHandler.java:143)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:715)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1555)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\n\n\n20-Nov-2013 00:35:19.327 SEVERE [http-nio-8080-exec-15] org.apache.coyote.http11.AbstractHttp11Processor.process Error processing request\n java.lang.IllegalArgumentException\n\tat java.nio.Buffer.position(Buffer.java:236)\n\tat sun.nio.ch.IOUtil.write(IOUtil.java:68)\n\tat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:487)\n\tat org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:123)\n\tat org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:174)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.writeToSocket(InternalNioOutputBuffer.java:140)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.addToBB(InternalNioOutputBuffer.java:198)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.commit(InternalNioOutputBuffer.java:178)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.action(AbstractHttp11Processor.java:739)\n\tat org.apache.coyote.Response.action(Response.java:180)\n\tat org.apache.coyote.Response.sendHeaders(Response.java:368)\n\tat org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:335)\n\tat org.apache.catalina.connector.OutputBuffer.close(OutputBuffer.java:290)\n\tat org.apache.catalina.connector.Response.finishResponse(Response.java:411)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:560)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1015)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:642)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1555)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\n\n\n\n\n[1] http://markmail.org/message/ee3jch4zj2orltzs",
    "created": "2013-11-20 00:01 UTC",
    "fixes": [
      "6edf370"
    ]
  },
  {
    "id": "BUG-55807",
    "summary": "JSP's always marked as outdated with Jar Scanner Component configured with \u201cscanAllDirectories\u201d and referenced Taglib in WEB-INF/classes/META-INF",
    "description": "consider the following (simplified) eclipse project configuration.\n\nweb_base_jar (shared taglib etc.)\nweb_war (uses web_base_jar)\n\nWhen developing our web project locally we use an exploded war layout. The compile output\nof web_base_jar is directly copied (not as a jar!) to the war\u2019s\nweb_war/WEB-INF/classes directory by our ide\u2019s (eclipse with sysdeo plugin and intellij).\nOur shared taglib ends up here: web_war/WEB-INF/classes/META-INF/myTaglib.tld. The taglib\nis successfully picked up by the Jar Scanner configured with \u201cscanAllDirectories\u201d.\n\nThis leads to the following generated jsp code when myTaglib is used:\n\n  static {\n    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);\n    _jspx_dependants.put(\"file:/somepath/pc_web_war_exploded/WEB-INF/classes/META-INF/ myTaglib.tld\n\", Long.valueOf(-1L));\n  }\n\nThe relevant code for this snippet is in org.apache.jasper.compiler.TagLibraryInfoImpl.<init>(TagLibraryInfoImpl.java:173).\nBecause the Taglib is a file uri (file:/C:/somepath/pc_web_war_exploded/WEB-INF/classes/META-INF/myTaglib.tld)\nit is not found by ApplicationContext#getResource and the method\norg.apache.jasper.JspCompilationContext.getLastModified(JspCompilationContext.java:437) returns\n-1 in this case.\n\nWhen the compiler checks if the current jsp is outdated it checks also all includes/dependants.\nBecause myTaglib is in the dependants  list of our jsps it is also checked. The check tests\nthe lastModified timestamp of the file against -1 and returns always true. See here org.apache.jasper.compiler.Compiler.isOutDated(Compiler.java:519)\nThis means that our jsps are recompiled on every request. We have some workarounds for this but it would be nice if this setup would work out of the box",
    "created": "2013-11-21 13:14 UTC",
    "fixes": [
      "2439a4e",
      "2439a4e"
    ]
  },
  {
    "id": "BUG-55633",
    "summary": "[websocket] Tomcat can't read data from the client after the client temporarily pauses",
    "description": "As reported on Re: 8.0.x / 7.0.x progress thread [1]:\n\nFor NIO and APR connector:\nIt seems that when a client establishes a Websocket connection and then stops to read data from it (but doesn't close the connection, so that at Tomcat's side writing data to the underlying TCP connection will be blocked), and then after some time the client continues to read data from the Websocket connection, then Tomcat seems not to be able to read data from that client any more (and doesn't notice when the connection has been closed), but it can still write data to the client.\n\nTo reproduce:\n\nUpdate trunk to r1529443.\n\nThen apply the following patch locally to make the issue easier to reproduce (by blowing the amount of data that Tomcat sends to the client):\n\n\nIndex: webapps/examples/WEB-INF/classes/websocket/snake/SnakeTimer.java\n===================================================================\n--- webapps/examples/WEB-INF/classes/websocket/snake/SnakeTimer.java\t(revision 1529443)\n+++ webapps/examples/WEB-INF/classes/websocket/snake/SnakeTimer.java\t(working copy)\n@@ -73,8 +73,10 @@\n                 sb.append(',');\n             }\n         }\n-        broadcast(String.format(\"{\\\"type\\\": \\\"update\\\", \\\"data\\\" : [%s]}\",\n-                sb.toString()));\n+        char[] random = new char[8192];\n+        java.util.Arrays.fill(random, 'x');\n+        broadcast(String.format(\"{\\\"type\\\": \\\"update\\\", \\\"data\\\" : [%s], \\\"randomData\\\": \\\"[%s]\\\"}\",\n+                sb.toString(), new String(random)));\n     }\n \n     protected static void broadcast(String message) {\n\n\n\n1) Start Tomcat (current trunk) on Windows 64-bit with Java7 64-bit and either NIO or APR connector.\n2) Start IE (10+) and Firefox and with both browsers open the snake example. On both browsers, press up or down key so that both snakes begin moving.\n3) Suspend the Firefox processes. This can be done with \"Process Explorer\" [2] tool by right-clicking on the firefox.exe entry and select \"Suspend\". You can see that Firefox does not respond any more, but on IE the snakes continue to move.\n4) After some seconds, you can see that on IE the snakes suddenly stop moving. This is correct because the current code uses RemoteEndpoint.Basic that may block on write() methods.\n5) Now resume Firefox with Process Explorer. You can see that on both browsers the snakes will continue to move. This means that both browsers are able to receive data from the Websocket connection.\n6) When you try to change the direction of the snake in IE, everything works. However on Firefox, the snake will not change its direction. This means that while Tomcat continues to send data to this Websocket connection, it cannot receive from it any more.\n7) If you close Firefox, then the corresponding snake will not disappear (so it seems Tomcat doesn't notice that the connection closed).\n\n\nNote: This only applies to the NIO and APR connectors - with BIO, the problem doesn't occur.\n\n\nWith Wireshark you can see that FF still sends the direction data correctly and Tomcat ACKs the packets, but does not seem to be able to process them.\n\n\n[1] http://markmail.org/message/z6qklqiceyftapfx\n[2] http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx",
    "created": "2013-10-06 01:41 UTC",
    "fixes": [
      "8282b57"
    ]
  },
  {
    "id": "BUG-55071",
    "summary": "try finally catch structure masks original exception in JDBCRealm.getPassword()",
    "description": "I have run into a mysterious apparent SQL exception in JDBCRealm.getPassword().\n\nPresumably, line 557 \"stmt.executeQuery()\" occasionally fails. I'm not sure why and would like to know why. \n\nHowever, the finally block contains dbConnection.commit() (line 579). This throws an exception (Connection Closed) which is then logged on line 585. \n\nIn summary, line 579 should be surrounded by a try catch.",
    "created": "2013-06-06 22:26 UTC",
    "fixes": [
      "6cd42af"
    ]
  },
  {
    "id": "BUG-55331",
    "summary": "Dispatch after async timeout fails",
    "description": "With Tomcat 7.0.42 and the NIO connector, calling AsyncContext.dispatch() from an onTimeout() handler fails with this error message:\n\njul 31, 2013 1:40:30 PM org.apache.coyote.AbstractProtocol$AbstractConnectionHandler process\nSEVERE: Error reading request, ignored\njava.lang.IllegalStateException: Calling [asyncPostProcess()] is not valid for a request with Async state [STARTED]\n        at org.apache.coyote.AsyncStateMachine.asyncPostProcess(AsyncStateMachine.java:204)\n        at org.apache.coyote.AbstractProcessor.asyncPostProcess(AbstractProcessor.java:116)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:593)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1690)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:724)\n\n\nTest code:\n\npublic class AsyncServlet extends HttpServlet {\n\n  protected void doGet(final HttpServletRequest request, HttpServletResponse response)\n      throws ServletException, IOException {\n\n    if (request.isAsyncStarted()) {\n      response.getWriter().write(\"asyncResult=\" + request.getAttribute(\"asyncResult\"));\n    }\n    else {\n      final AsyncContext asyncContext = request.startAsync(request, response);\n\n      asyncContext.addListener(new AsyncListener() {\n        public void onTimeout(AsyncEvent event) throws IOException {\n            request.setAttribute(\"asyncResult\", \"timeout\\n\");\n            asyncContext.dispatch();\n        }\n        public void onStartAsync(AsyncEvent event) throws IOException {}\n        public void onError(AsyncEvent event) throws IOException {}\n        public void onComplete(AsyncEvent event) throws IOException {}\n      });\n\n      asyncContext.setTimeout(5000L);\n    }\n  }\n\n}\n\n\nThis seems somewhat similar to the (ancient) report #50308.",
    "created": "2013-07-31 11:50 UTC",
    "fixes": [
      "a5c8f42"
    ]
  },
  {
    "id": "BUG-55233",
    "summary": "[websocket] Problem reading many subsequent binary messages",
    "description": "I have a test client that receives many binary messages. The server sends thousands of binary messages with size 1024 with no delay between them. At some point of time, the client fails to read the message and the connection is closed. See some close reasons below.\n\nI am wondering whether there is some issue with the read buffers being modified from other threads. \nSeeing all close reasons below, there are two issues here:\n- why there is buffer overflow when there is plenty of space to store the incoming data (e.g. \"unwrapping [1,130] bytes into a [8,192]\")\n- why there are attempts to unwrap bigger buffer into smaller one. I thought this should not be possible (e.g. \"unwrapping [12,466] bytes into a [8,192]\")\n\n\nHere are some close reasons occurred during the test:\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [6,466] bytes into a [8,192] byte buffer that already contained [0] bytes.\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [1,130] bytes into a [8,192] byte buffer that already contained [0] bytes.\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [2,240] bytes into a [8,192] byte buffer that already contained [0] bytes.\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [12,466] bytes into a [8,192] byte buffer that already contained [0] bytes.\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [2,071] bytes into a [8,192] byte buffer that already contained [0] bytes.\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [12,466] bytes into a [8,192] byte buffer that already contained [0] bytes.\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [4,356] bytes into a [8,192] byte buffer that already contained [0] bytes.\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [14,059] bytes into a [8,192] byte buffer that already contained [0] bytes.\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [4,707] bytes into a [8,192] byte buffer that already contained [0] bytes.\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [10,041] bytes into a [8,192] byte buffer that already contained [0] bytes.\nEnding test thread as websocket session is closed\nConnection closed: Buffer overflow unwrapping [2,478] bytes into a [8,192] byte buffer that already contained [0] bytes.",
    "created": "2013-07-10 14:31 UTC",
    "fixes": [
      "8496b90"
    ]
  },
  {
    "id": "BUG-55176",
    "summary": "SSI regular expressions parsing fails",
    "description": "Created attachment 30513 [details]\ntest cases 1, 2 and 3\n\nRegular Expressions in SSI fail to parse.\n\nThis uses SSI in 7.0.39 using SSIFilter.  The file is parsed, in principle, but whenever an IF expression with a certain regular expression is encountered, Tomcat seems to either show an exception (test case 2) stop processing the file and will not return any contents after that (for test case 3).\n\nCertain very simple regular expressions such as /a/ do not show an error (test case 1).\n\n\nExample:\n\nMy request is:\n\nhttp://...:8080/tomcat7_ssi_bug/foo.html?year=234234\n\nThe relevant portion of the file is (test case 3):\n\n<!--#if expr=\"${QUERY_STRING} = /year=(.*)/\" -->\n   \nI have tried a number of variants, including $QUERY_STRING instead of ${...}.\nI find no error about this in the logs.\n\nI tried simpler regular expressions.  The following\n\n<!--#if expr=\"${QUERY_STRING} = /year=/\" -->\n\nLeads to the error below:\n\njava.lang.ClassCastException: org.apache.catalina.ssi.ExpressionParseTree$EqualNode cannot be cast to org.apache.catalina.ssi.ExpressionParseTree$StringNode\n\torg.apache.catalina.ssi.ExpressionParseTree$CompareNode.compareBranches(ExpressionParseTree.java:353)\n\torg.apache.catalina.ssi.ExpressionParseTree$EqualNode.evaluate(ExpressionParseTree.java:381)\n\torg.apache.catalina.ssi.ExpressionParseTree.evaluateTree(ExpressionParseTree.java:67)\n\torg.apache.catalina.ssi.SSIConditional.evaluateArguments(SSIConditional.java:124)\n\torg.apache.catalina.ssi.SSIConditional.process(SSIConditional.java:50)\n\torg.apache.catalina.ssi.SSIProcessor.process(SSIProcessor.java:160)\n\torg.apache.catalina.ssi.SSIFilter.doFilter(SSIFilter.java:144)\n\n\nThis occurs whenever the regular expression does not contain any parenthesis.  \n\nAttached war file contains foo.html, showing test cases 1 and 2, and bar.html, showing test case 1 and 3.\n\nBy the way, these regular expressions work as intended in Apache (httpd) 2.\n\nSee also feature request #53387.  (The back reference in this example is not what causes the exception.)",
    "created": "2013-07-01 17:08 UTC",
    "fixes": [
      "fd4e86f"
    ]
  },
  {
    "id": "BUG-54928",
    "summary": "IllegalStateException: Calling [asyncError()] is not valid for a request with Async state [COMPLETING]",
    "description": "In an async scenario (request.startAsync), when the client goes away, trying to write to the response raises an IOException. If I then call asyncContext.complete() in order to finalize and clean up the request, soon after the following exception occurs:\n\njava.lang.IllegalStateException: Calling [asyncError()] is not valid for a request with Async state [COMPLETING]\n        at org.apache.coyote.AsyncStateMachine.asyncError(AsyncStateMachine.java:304)\n        at org.apache.coyote.http11.AbstractHttp11Processor.action(AbstractHttp11Processor.java:793)\n        at org.apache.coyote.Request.action(Request.java:373)\n        at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:441)\n        at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:312)\n        at org.apache.coyote.http11.AbstractHttp11Processor.asyncDispatch(AbstractHttp11Processor.java:1509)\n        at org.apache.coyote.http11.Http11NioProcessor.asyncDispatch(Http11NioProcessor.java:221)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:619)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1581)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1540)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n        at java.lang.Thread.run(Thread.java:722)\n\nIt looks like an attempt to maybe to send an error event to AsyncListener's but asyncContext.complete has already been called.\n\nIs calling asyncContext.complete() a reasonable way to handle an IOException from the response in order to finalize the request and release any resorces associated with it?",
    "created": "2013-05-04 12:41 UTC",
    "fixes": [
      "3960b22"
    ]
  },
  {
    "id": "BUG-46243",
    "summary": "Filter init() fails, still put into service",
    "description": "Using securityfilter, I misconfigured the filter to use a non-existent class for my Realm. This causes a ClassNotFoundException in securityfilter's init() method.\n\nWhen attempting to authenticate, I get this error:\n\n2008-11-19 10:26:26,111 [TP-Processor8] ERROR org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/diagnosis].[default]- Servlet.service() for servlet default threw exception\njava.lang.NullPointerException\n        at org.securityfilter.filter.SecurityFilter.doFilter(SecurityFilter.java:125)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)\n        at org.securityfilter.filter.CheckIPAddressFilter.doFilter(CheckIPAddressFilter.java:130)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)\n        at org.childhealthcare.diagnosis.servlet.BrokenLocaleFilter.doFilter(BrokenLocaleFilter.java:115)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)\n        at org.childhealthcare.diagnosis.servlet.EncodingFilter.doFilter(EncodingFilter.java:64)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:174)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:174)\n        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:200)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:283)\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:773)\n        at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:703)\n        at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:895)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689)\n        at java.lang.Thread.run(Thread.java:595)\n\nNow, the exception itself is legitimate: there's an uninitialized object in the filter that's being dereferenced, and an NPE is thrown.\n\nThe problem is that Tomcat should be successfully initializing the filter /before/ the doFilter method is ever called. Since init() will always fail given my configuration, the filter should never come into service, and the NPE should not be observed.\n\nSection 6.2.1 of the 2.4 servlet spec states:\n\n\"\nThe container must ensure that it has instantiated a filter of the appropriate class for each filter in the list, and called its init(FilterConfig config) method. The filter may throw an exception to indicate that it cannot function properly. If the exception is of type UnavailableException, the container may examine the isPermanent attribute of the exception and may choose to retry the filter at some later time.\n\"\n\nWhile not explicitly stated here, it seems that the call to init() should be successful (i.e. no exceptions are thrown) before the filter is put into service -- similar to the way a servlet is handled. Filters should be able to rely on objects being properly initialized in init().",
    "created": "2008-11-19 09:20 UTC",
    "fixes": [
      "13d969d",
      "5e72e59"
    ]
  },
  {
    "id": "BUG-54338",
    "summary": "Class cast exception in tagPlugin Set generated code",
    "description": "Created attachment 29786 [details]\nTest case for \"Set\"\n\nIt uses \"Class.cast\" to convert an object to a given class in the code generated by tagPlugin \"Set\".\n\nIt causes an exception when the value is primitive type,\nHere is a sample,\n\nCaused by: java.lang.ClassCastException: Cannot cast class java.lang.Integer to int\n        at java.lang.Class.cast(Class.java:1711)\n        at org.apache.jsp.WEB_002dINF.views.error_jsp._jspService(error_jsp.java:108)\n        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:668)\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:432)\n        ... 52 more\n\n\nThe correct way is to use \"ELSupport.coerceToType\".\nAttached a patch and test case for this issue.",
    "created": "2012-12-21 12:00 UTC",
    "fixes": [
      "b73c014"
    ]
  },
  {
    "id": "BUG-53792",
    "summary": "EL: AstValue.getTarget() mistakes a method invocation for a property access",
    "description": "Trying to evaluate the method expression #{beanFactory.loginBean().init}\n\nExpected behavior: lookup beanFactory, invoke its loginBean method and on its return value, invoke the init method.\n\nActual behavior: the following exception is thrown: \njavax.el.PropertyNotFoundException: /LoginView.xhtml @9,101 listener=\"#{viewBeanFactory.loginBean().initIfGetRequest}\": Property 'loginBean' not found on type ch.bedag.redacted.InteractionLayer$$EnhancerByCGLIB$$1ea36cb9\n\nLooking at the source, AstValue.getTarget(EvaluationContext) only checks whether the last child is an instanceof AstMethodParameters, but in this expression there is an additional method invocation expression before that ...\n\nPresumably, the while loop \n\n            while (base != null && i < propCount) {\n                property = this.children[i].getValue(ctx);\n                ctx.setPropertyResolved(false);\n                base = resolver.getValue(ctx, base, property);\n                i++;\n            }\n\nshould be something like:\n\n            while (base != null && i < propCount) {\n                if (i + 1 < propCount && this.children[i + 1] instanceof AstMethodParameters) {\n                    base = // result of method invocation\n                    i += 2;\n                } else {\n                    property = this.children[i].getValue(ctx);\n                    ctx.setPropertyResolved(false);\n                    base = resolver.getValue(ctx, base, property);\n                    i++;\n                }\n            }",
    "created": "2012-08-28 20:24 UTC",
    "fixes": [
      "a570fc7"
    ]
  },
  {
    "id": "BUG-46915",
    "summary": "Unable to get ResourceBundle keys in Tomcat 6",
    "description": "Created attachment 23417 [details]\nmodified foreach.jsp file that reads properties file\n\nThere is issue with ResourceBundle using JSTL in tomcat 6. The problem is in using the following code\n\n${messageString.resourceBundle.keys}\n\nThe above code is not able to resolve the keys and result in printing of ???keys???\n\nHere messageString is a variable set using below code\n<fmt:setBundle basename=\"LocalStrings\" scope=\"session\" var=\"messageString\" />\n\nI have tested it with example jsp provided in the tomcat's example webapp.\n\nThe issue is reproducible with both JSTL1.1 and JSTL 1.2 and JDK 1.5 and 1.6\n\nHowever it is working fine in Tomcat 5.5\n\nAttached is the sample foreach.jsp with modified code to read a property file available in \\webapps\\examples\\WEB-INF\\classes folder under tomcat installation directory. \nJust place this file in examples webapp and view source",
    "created": "2009-03-26 03:27 UTC",
    "fixes": [
      "0df4b49"
    ]
  },
  {
    "id": "BUG-52970",
    "summary": "MethodNotFoundException when using enum as one of method arguments",
    "description": "Consider this JSF view snippet:\n\n----------------------------------------------------------------------\n<h:form>\n    <h:commandButton value=\"submit\" action=\"#{bean.submit('FOO')}\" />\n</h:form>\n----------------------------------------------------------------------\n\nAnd this JSF bean snippet:\n\n----------------------------------------------------------------------\n@ManagedBean\n@RequestScoped\npublic class Bean {\n    public enum Type { FOO, BAR }\n\n    public void submit(Type type) {\n        System.out.println(type);\n    }\n}\n----------------------------------------------------------------------\n\nThis results in a javax.el.MethodNotFoundException. It works in Glassfish 3. EL 2.2 spec 1.18.6 tells that a string must be coerced to enum of type T.",
    "created": "2012-03-22 12:28 UTC",
    "fixes": [
      "1127691"
    ]
  },
  {
    "id": "BUG-52184",
    "summary": "Reduce log level for invalid cookies",
    "description": "Invalid cookies are fairly common. Firefox has them all the time. Tomcat logs fill up very quickly with this input. Tomcat doesn't log when there is an invalid HTTP request, as that would yield the same problem.co \n\nNov 14, 2011 3:15:27 PM org.apache.tomcat.util.http.Cookies processCookieHeader\nINFO: Cookies: Invalid cookie. Value not a token or quoted value\n\nhttp://vmc-ssrc-rh56.eng.vmware.com:8080/\n\nGET / HTTP/1.1\nHost: vmc-ssrc-rh56.eng.vmware.com:8080\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip, deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nConnection: keep-alive\nCookie: __utma=106857756.14479066.1321292743.1321296794.1321304211.3; __utmz=106857756.1321304211.3.2.utmcsr=communities.example.com|utmccn=(referral)|utmcmd=referral|utmcct=/community/vmtn/appplatform/testapp_fire; s_nr=1321293934221; s_vi=[CS]v1|2760A9C4851D0F77-6000010260007567[CE]\nCache-Control: max-age=0",
    "created": "2011-11-14 22:26 UTC",
    "fixes": [
      "2a27bcd"
    ]
  },
  {
    "id": "BUG-51741",
    "summary": "Eclipse WTP \"Serve modules without publishing\" broken with tc7, needs patch in tomcat",
    "description": "Eclipse WTP has an option \"Serve modules without publishing\" that works well with tc6, but not with tc7.\nAfter investigation by the WTP team, there seem to be no way for them to fix this without modifying tomcat. The problem in WTP is reported here : https://bugs.eclipse.org/bugs/show_bug.cgi?id=333102\n\nBasically, their DirContext implementation (org.eclipse.jst.server.tomcat.loader.WtpDirContext) returns a ResourceAttributes that correctly points to an existing location, but org.apache.catalina.loader.WebappClassLoader.findResourceInternal(String, String) ignores it and returns a ResourceEntry whose codeBase and source fields point to a non-existing location.\nThis breaks applications that call getResource(...) on the Thread ContextClassLoader and use the returned URL.\nA call to getResourceAsStream(...) on the Thread CCL is OK.",
    "created": "2011-08-29 21:29 UTC",
    "fixes": [
      "cd3f3fe",
      "c56bdf0",
      "514d602",
      "f6f1af0"
    ]
  },
  {
    "id": "BUG-46264",
    "summary": "Shutting down tomcat with large number of contexts is slow",
    "description": "Shutting down tomcat with large number of contexts is slow\n\nOn some of our sandbox testing environments, we have tomcat loaded with 30-40 contexts, and run a very large heap (2-3GB).  Most of these contexts are large applications which take anywhere from 5-10 seconds to shutdown each.  Most of the time spent shutting down each application is not spent using the local app server CPU, but shutting down remote resources (Announcing the application is going down over JMS, flushing write buffers, closing DB connections, closing JMS connections, closing log connections, etc.).  Shutting down tomcat typically takes minutes, because it shuts down one context at a time.",
    "created": "2008-11-21 08:52 UTC",
    "fixes": [
      "80a7aff"
    ]
  },
  {
    "id": "BUG-52121",
    "summary": "corrupt gzip output when compression=on in server.xml",
    "description": "Created attachment 27886 [details]\nGzip Corruption Repro WAR\n\nThis appears to be same issue as posted by Christopher Taylor\nJun 30, 2011 at 8:05 am to Tomcat Users. The subject line has been preserved above.\n\nAs mentioned in the post, this seems to have arisen with this issue:\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=48738\n\nThe change introduced this class: FlushableGZIPOutputStream. When we started using this, we noticed that certain string flush sequences would result in corrupt gzip output. \n\nThe attached WAR provides a repro. The sequence of writes to the output stream that would\u2019ve been done by our server is mimicked in this case using a file system. There are 40 files each representing a flush. URL:\n\n\"http://localhost:8080/TomcatBugReportWAR\"\n\nI\u2019ve allowed the \u2018start\u2019 and \u2018end\u2019 request parameters to control to the starting and ending points. I\u2019ve also allowed an \u2018append\u2019 request parameter dump anything to the outputstream.\n\nThe defaults are 0, 40, and \u201c\u201d for start end and append respectively.\n\nThe following query string appears particularly interesting as it seems to be the smallest sequence that causes the corruption and the subsequent string that is appended after the output is the only thing that appears corrupted:\n\n\"http://localhost:8080/TomcatBugReportWAR?start=19&end=30&append=something\u201d\n\nIt\u2019s also possible to reproduce this using only the FlushableGZIPOutputStream without using Tomcat at all. See attached JAR.",
    "created": "2011-11-01 22:15 UTC",
    "fixes": [
      "92b1af5"
    ]
  },
  {
    "id": "BUG-51744",
    "summary": "JNDI Lookup Error after a Context is closed",
    "description": "I was integrating Atomikos into Tomcat to register the transaction manager, and the lookup for the transaction manager works fine in JNDI, unless someone else, looks up a JNDI context and closes it. And subsequent calls to lookup the transaction manager also fails saying java:comp is not found. I went through the code and found the problem at \"org.apache.naming.SelectorContext\". When methods of that class is calls, those are delegated to a Context received through \"getBoundContext()\", which returns a \"org.apache.naming.NamingContext\" object. And these are stored in a map in ContextBindings class. So the getBoundContext checks this cache, and if it's found it returns it or else, create a new object and store it and returns it. So the problem happens, if someone calls \"close()\" in the NamingContext object. Then it's implemented in the following way,\n\n   public void close()\n        throws NamingException {\n        env.clear();\n    }\n\nWhich just clears the environment, but it doesn't in no way invalidate that cache in the ContextBindings class to remove its entry. So in the next time also when getBoundContext is called to get the same context, it will return the earlier 'closed' context without creating a new one. And the environment it has would be cleared and subsequent lookups done from that will fail. \n\nSo I guess the proper fix would be to remove that context from ContextBinding's cache when its close method is closed.\n\nCheers,\nAnjana.",
    "created": "2011-08-30 08:43 UTC",
    "fixes": [
      "1eb39d0"
    ]
  },
  {
    "id": "BUG-51910",
    "summary": "NPE in comet processing when shutting down Tomcat",
    "description": "I've hit it when testing 7.0.22 RC.\n\n1. Configure Tomcat with NIO connector\n2. Start Tomcat and open Comet chat example\nhttp://localhost:8080/examples/jsp/chat/index.jsp\n3. Type some Nickname and press button to start chat\nThe chat log will be in the second frame at the lower half of the page.\n4. While chat log is active (Browser shows page as being loaded),\nshut down Tomcat.\n5. Observe NPE in the logs:\n\n28.09.2011 15:55:32 org.apache.coyote.AbstractProtocol stop\nINFO: Stopping ProtocolHandler [\"http-nio-8080\"]\n28.09.2011 15:55:33 org.apache.catalina.connector.CoyoteAdapter event\nSEVERE: null\njava.lang.NullPointerException\n        at org.apache.catalina.core.StandardWrapperValve.event(StandardWrapperValve.java:354)\n        at org.apache.catalina.core.StandardContextValve.event(StandardContextValve.java:192)\n        at org.apache.catalina.valves.ValveBase.event(ValveBase.java:226)\n        at org.apache.catalina.core.StandardHostValve.event(StandardHostValve.java:245)\n        at org.apache.catalina.valves.ValveBase.event(ValveBase.java:226)\n        at org.apache.catalina.valves.ValveBase.event(ValveBase.java:226)\n        at org.apache.catalina.core.StandardEngineValve.event(StandardEngineValve.java:138)\n        at org.apache.catalina.connector.CoyoteAdapter.event(CoyoteAdapter.java:211)\n        at org.apache.coyote.http11.Http11NioProcessor.event(Http11NioProcessor.java:131)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.>\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1554)\n        at org.apache.tomcat.util.net.NioEndpoint.processSocket(NioEndpoint.java:717)\n        at org.apache.tomcat.util.net.NioEndpoint$Poller.cancelledKey(NioEndpoint.java:1026)\n        at org.apache.tomcat.util.net.NioEndpoint$Poller.processKey(NioEndpoint.java:1169)\n        at org.apache.tomcat.util.net.NioEndpoint$Poller.timeout(NioEndpoint.java:1352)\n        at org.apache.tomcat.util.net.NioEndpoint$Poller.run(NioEndpoint.java:1085)\n        at java.lang.Thread.run(Thread.java:662)\n28.09.2011 15:55:33 org.apache.coyote.AbstractProtocol stop\nINFO: Stopping ProtocolHandler [\"ajp-bio-8009\"]",
    "created": "2011-09-28 12:05 UTC",
    "fixes": [
      "a450d2c"
    ]
  },
  {
    "id": "BUG-51862",
    "summary": "JreMemoryLeakPreventionListener enhancement to load configurable classes",
    "description": "Enhancement proposed : add a \"classesToInitialize\" parameter to JreMemoryLeakPreventionListener to provoke the loading of arbitrary classes.\nThis will allow users to tune the memory leak protection features to avoid leaks triggered when loading JRE classes not yet identified as leaky, or even third-party classes.\n\nI'll commit a patch in the next days...",
    "created": "2011-09-21 21:56 UTC",
    "fixes": [
      "daac881"
    ]
  },
  {
    "id": "BUG-51544",
    "summary": "EL parser problem for EmptyList",
    "description": "When I return Collections.emptyList() and then use ${list.isEmpty()} in a JSP, a problem occurs (see below). It didn't occur in older Tomcat 7 versions (like 7.0.5).\n\n15:             ${user.names}<br />\n16:         </div>\n17:     </c:forEach>\n18:     <c:if test=\"${users.isEmpty()}\">\n19:         <div>${msg.noResults}</div>\n20:     </c:if>\n21: </div>\n\n\nStacktrace:] with root cause\njava.lang.IllegalAccessException: Class javax.el.BeanELResolver can not access a member of class java.util.Collections$EmptyList with modifiers \"public\"\n\tat sun.reflect.Reflection.ensureMemberAccess(Reflection.java:95)\n\tat java.lang.reflect.Method.invoke(Method.java:607)\n\tat javax.el.BeanELResolver.invoke(BeanELResolver.java:467)\n\tat javax.el.CompositeELResolver.invoke(CompositeELResolver.java:161)\n\tat org.apache.el.parser.AstValue.getValue(AstValue.java:159)\n\tat org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:189)\n\tat org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:985)\n\tat org.apache.jsp.WEB_002dINF.jsp.externalUsers_jsp._jspx_meth_c_005fif_005f2(externalUsers_jsp.java:2060)\n\tat org.apache.jsp.WEB_002dINF.jsp.externalUsers_jsp._jspService(externalUsers_jsp.java:396)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:722)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:433)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:389)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:333)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:722)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:304)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:684)\n\tat org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:471)\n\tat org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:402)\n\tat org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:329)\n\tat org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:238)\n\tat org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:262)\n\tat org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1120)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:890)",
    "created": "2011-07-23 08:17 UTC",
    "fixes": [
      "bccb43a",
      "8f0bf12",
      "d89492e"
    ]
  },
  {
    "id": "BUG-51310",
    "summary": "Connector destroyInternal Execution",
    "description": "In Tomcat 7.0.12 Connector#destroyInternal method has never been called while server is under shutdown. Therefore NIOBlockingSelector#close is never called. Is it bug or else?",
    "created": "2011-06-01 15:58 UTC",
    "fixes": [
      "40d5a23"
    ]
  },
  {
    "id": "BUG-49957",
    "summary": "Work directories of deployed webapps are deleted at shutdown",
    "description": "Created attachment 26050 [details]\nstacktrace\n\nObserving this with the current trunk (at rev. 998656).\nIt does not happen with 7.0.2, so it is some recent regression.\n\nThe problem is that when I stop Tomcat all subdirectories in ${catalina.base}/work/Catalina/localhost are deleted.\n\nSteps to reproduce:\n1. Build Tomcat 7.0\n2. Set JRE_HOME variable. Go to output/build/bin/ and run catalina.bat start\n3. Access http://localhost:8080/examples/jsp/jsp2/el/basic-arithmetic.jsp\n4. Note, that there is compiled class file in\noutput/build/work/Catalina/localhost/examples/org/apache/jsp/jsp/jsp2/el/\n5. Run catalina.bat stop\n6. Actual behaviour: output/build/work/Catalina/localhost/ is now empty.\nExpected behaviour: see step 4.\n\n\nThe catalina.log file has \"INFO: Deploying web application directory\" lines it it, but there are no logs about any webapps being undeployed.\n\nI have run TC7 in debug mode with breakpoints in ExpandWar.delete(..) and the deletion happens in ContextConfig.destroy().\n\n        // Changed to getWorkPath per Bugzilla 35819.\n        String workDir = ((StandardContext) context).getWorkPath();\n        if (workDir != null)\n            ExpandWar.delete(new File(workDir));\n\nI am attaching the full stacktrace.\n\nThe code itself looks old. I suspect that the destroy event was not passed to ContextConfig until recently.",
    "created": "2010-09-19 11:39 UTC",
    "fixes": [
      "40d5a23"
    ]
  },
  {
    "id": "BUG-51278",
    "summary": "Unable to override default servlet other than in main web.xml",
    "description": "The default web.xml gets merged into the application's web.xml before processing of fragments, annotations and ServletContextInitializers. This means it can only be overridden in the application's web.xml. It should be possible to override in fragments, annotations and ServletContextInitializers.",
    "created": "2011-05-28 07:12 UTC",
    "fixes": [
      "58e6e40"
    ]
  },
  {
    "id": "BUG-51323",
    "summary": "Svn property fixes",
    "description": "Created attachment 27113 [details]\nScript to fix SVN properties\n\nAttached file fixes some SVN property errors in TOMCAT_7_0_15 (and presumably trunk).",
    "created": "2011-06-04 23:28 UTC",
    "fixes": [
      "d9f60ce"
    ]
  },
  {
    "id": "BUG-50306",
    "summary": "Detect stuck threads",
    "description": "Feature request : \nregularly scan worker threads and if one has been processing the same request for longer than a configurable delay, log a warning with the stack trace of that thread.\nThis would allow to detect very long running threads, usually the ones that are stuck in a network call or in a deadlock.",
    "created": "2010-11-19 18:09 UTC",
    "fixes": [
      "9c61159"
    ]
  },
  {
    "id": "BUG-620272",
    "summary": "",
    "description": "",
    "created": null,
    "fixes": [
      "8b314c5"
    ]
  },
  {
    "id": "BUG-50984",
    "summary": "Manager application fails to report stranded artifacts when undeploying",
    "description": "[NOTE: this is tomcat 7.0.11, not 7.0.10, but the version is not given as a choice, I therefore file it as 7.0.10, which I suspect has the same bug]\n\nScenario:\n\n* tomcat starts, as user u1, with only the manager application in place;\n* it is configured as to not deploy automatically;\n* user u1 copies a webapp tree into $CATALINA_HOME/webapps, which it\ncan since it has write/execute access to this directory;\n* the manager webapp is called to deploy that new web application;\n* [in between, credentials on the deployed webapp directory are\nchanged so that user u1 cannot remove the webapp at all]\n* the manager webapp is called to undeploy that application, BUG: it\nanswers OK, but it is not.\n\nThe manager webapp documentation explicitly states that undeploying an\napplication means that the webapp tree is removed - but of course, in\nthis case it isn't. Use case below, where $CATALINA_HOME/webapps is a symlink to /var/lib/o3/tomcat/installs:\n\n----\n# Only manager webapp running initially\n[o3@tomcat-r8 cockpit]$ wget -O - -q --http-user=tomcat\n--http-password=tomcat  http://localhost:8080/manager/text/list|sed 1d\n/manager:running:6:/usr/share/tomcat7/webapps/manager\n# webapp tree is created by other means. Now deploying the application:\n[o3@tomcat-r8 cockpit]$ wget -O - -q --http-user=tomcat --http-password=tomcat http://localhost:8080/manager/text/deploy'?path=/cockpit&war=file:/var/lib/o3/tomcat/installs/cockpit'\nOK - Deployed application at context path /cockpit\n[...]\n# In another terminal:\n[root@tomcat-r8 installs]# pwd\n/var/lib/o3/tomcat/installs\n# All files are created with umask 022. Just change the owner:\n[root@tomcat-r8 installs]# chown -R root.root cockpit/\n[...]\n# Back to the first terminal:\n[o3@tomcat-r8 cockpit]$ wget -O - -q --http-user=tomcat --http-password=tomcat\nhttp://localhost:8080/manager/text/undeploy?path=/cockpit\nOK - Undeployed application at context path /cockpit\n# Here is the bug: even though the command returns OK, the tree still exists.\n# The webapp is stopped, but it is not undeployed.\n[o3@tomcat-r8 cockpit]$ wget -O - -q --http-user=tomcat\n--http-password=tomcat  http://localhost:8080/manager/text/list|sed 1d\n/manager:running:9:/usr/share/tomcat7/webapps/manager  \n/cockpit:stopped:0:cockpit\n# Listing the contents of $CATALINA_HOME/webapps, we see that the tree is still \n# there:\n[o3@tomcat-r8 cockpit]$ ls /var/lib/o3/tomcat/installs\ncockpit\n----\n\nThe documentation states:\n\n----\nWARNING - This command will delete any web application artifacts that exist within appBase directory (typically \"webapps\") for this virtual host. This will\ndelete the the application .WAR, if present, the application directory resulting either from a deploy in unpacked form or from .WAR expansion as well as the XML Context definition from $CATALINA_BASE/conf/[enginename]/[hostname]/ directory.\n----\n\nThis turns out to be false in this case. While the application is stopped, the web application artifacts are NOT removed. The\nundeploy command should have failed with, say \"FAIL - context was stopped but some articats remain, check access rights\". What's more, the logs\ndon't mention that the webapp tree has failed to be removed at all.\n\nIf I chown back the webapp tree to its rightful owner, then the webapp\nis indeed undeployed as intended: all artifacts are destroyed.\n\nThe culprit code seems to be at org/apache/catalina/manager/ManagerServlet.java, methods undeploy() and undeployDir(). Both use the .delete() method of File objects, but fail to check their return code.",
    "created": "2011-03-28 03:42 UTC",
    "fixes": [
      "b12358e"
    ]
  },
  {
    "id": "BUG-50805",
    "summary": "Leak & Performance issue of getConnectionAsync()",
    "description": "Created attachment 26677 [details]\npatch for ConnectionPool\n\nLeak and performance issue occurs when using getConnectionAsync().\n\ngetConnectionAsync() calls borrowConnection(int, String, String), and add PooledConnection to the busy queue.\nfuture.get() also calls borrowConnection(long, PooledConnection, String, String), and same PooledConnection is added to the busy queue again.\nThe first connection is removed from the busy queue when returnConnection() is called, but the second one remains as garbage.\nThe busy queue overflows at once because of these garbage connection.\nInt this time, ConnectionPool.size is smaller than busy queue size. And new real connection is created when getConnectionAsync() is called.\nAnd, when the busy queue overflows, the connection is released in ConnectionPool.returnConnection(). This causes the problem of the performance. \n\n---\nFurthermore, in most case the following codes are not executed, because borrowConnection(int, String, String) is not returned null except as validation failed.\n\n    149         if (idle instanceof FairBlockingQueue<?>) {\n    150             Future<PooledConnection> pcf = ((FairBlockingQueue<PooledConnection>)idle).pollAsync();\n    151             return new ConnectionFuture(pcf);\n    152         } else if (idle instanceof MultiLockFairBlockingQueue<?>) {\n    153                 Future<PooledConnection> pcf = ((MultiLockFairBlockingQueue<PooledConnection>)idle).pollAsync();\n    154                 return new ConnectionFuture(pcf);\n    155         } else {\n    156             throw new SQLException(\"Connection pool is misconfigured, doesn't support async retrieval. Set the 'fair' property to 'true'\");\n    157         }\n\n-----\nBased on above, I improved the getConnectionAsync().\n\nBest regards.",
    "created": "2011-02-17 23:11 UTC",
    "fixes": [
      "98b26a5"
    ]
  },
  {
    "id": "BUG-48863",
    "summary": "Log directory misconfiguration for class loaders",
    "description": "When developing our tomcat applications with eclipse, doing out-rebuild/sysdeo plugin and have the class files written into TOMCAT_HOME/common/classes is an effective approach.\n\nFor manageability reasons, we need to split our code among several eclipse projects. The problem is if both are configured to place their .class files in TOMCAT_HOME/common/classes that when one project rebuilds, it will wipe the class files of the other one.\n\nA great efficiency gain for the development of multiple projects therefore would be to be able to specify additional classes folders in server.xml to be added to the corresponding class-loader",
    "created": "2010-03-05 09:04 UTC",
    "fixes": [
      "b387244"
    ]
  },
  {
    "id": "BUG-49884",
    "summary": "NullPointerException in org.apache.catalina.core.AsyncContextImpl.doInternalComplete",
    "description": "Hi, I'm running Tomcat trunk (revision 992708, 2010-09-03) and I'm hitting an async servlet (see attached) with Apache Bench, and every once in a while I see a NullPointerException in org.apache.catalina.core.AsyncContextImpl.doInternalComplete:\n\nSep 4, 2010 8:09:39 PM org.apache.catalina.core.AsyncContextImpl doInternalDispatch\nFINE: TIMING OUT!\nSep 4, 2010 8:09:40 PM org.apache.catalina.core.AsyncContextImpl doInternalDispatch\nFINE: TIMING OUT!\nSep 4, 2010 8:09:40 PM org.apache.catalina.core.AsyncContextImpl doInternalComplete\nSEVERE: \nThrowable occurred: java.lang.NullPointerException\n\tat org.apache.catalina.core.AsyncContextImpl.doInternalComplete(AsyncContextImpl.java:384)\n\tat org.apache.catalina.core.AsyncContextImpl.doInternalDispatch(AsyncContextImpl.java:327)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:238)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:201)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:163)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:108)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:557)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n\tat org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:301)\n\tat org.apache.coyote.http11.Http11Processor.asyncDispatch(Http11Processor.java:333)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:258)\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:257)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:898)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:920)\n\tat java.lang.Thread.run(Thread.java:736)",
    "created": "2010-09-04 23:16 UTC",
    "fixes": [
      "b56bf50",
      "587b1a8"
    ]
  },
  {
    "id": "BUG-50753",
    "summary": "Asynchronous responses do not contain set response headers",
    "description": "Using a servlet with asynchronous support enabled and the response headers set just before AsyncContext.complete() method is called fails to send the headers over the wire. More precisely if the headers are set on the HttpServletRequest on a different thread than the request thread the headers are not sent. \n\nA simple test was devised to showcase the issue.\n\nSetting the headers on the request thread before or after the AsyncContext is acquired *succeeds* in sending the headers over the wire: \n\n    protected void doGet(HttpServletRequest request, final HttpServletResponse r) throws ServletException, IOException { \n       final AsyncContext ctx = request.startAsync(); \n        r.setHeader(\"A\", \"xyz\"); \n        r.setContentType(\"text/plain\"); \n        r.setContentLength(\"------\".getBytes().length); \n        r.getWriter().print(\"------\"); \n        ctx.start(new Runnable() { \n            public void run() { \n                try { \n                    Thread.sleep(5000); \n                    ctx.complete(); \n                } catch (Exception e) { \n                    e.printStackTrace();\n                } \n            } \n        }); \n    } \n\nSetting the headers just before the response is sent *does not succeed* in actually sending the headers over the wire: \n\n    protected void doGet(HttpServletRequest request, final HttpServletResponse r) throws ServletException, IOException { \n       final AsyncContext ctx = request.startAsync(); \n        ctx.start(new Runnable() { \n            public void run() { \n                try { \n                    Thread.sleep(5000); \n                    r.setHeader(\"A\", \"xyz\"); \n                    r.setContentType(\"text/plain\"); \n                    r.setContentLength(\"------\".getBytes().length); \n                    r.getWriter().print(\"------\"); \n                    ctx.complete(); \n                } catch (Exception e) { \n                    e.printStackTrace();\n                } \n            } \n        }); \n    }",
    "created": "2011-02-10 12:46 UTC",
    "fixes": [
      "e584cfe"
    ]
  },
  {
    "id": "BUG-49657",
    "summary": "In CGI Mode, \"executable\" full path with spaces does not work",
    "description": "In CGI mode, if you specify a full path for a command, containing blank, \nit does not work\n\nexample :\n       <init-param>\n            <param-name>executable</param-name>\n            <param-value>c:\\Tools\\mycommand</param-value>\n        </init-param>\nis OK but\n\n       <init-param>\n            <param-name>executable</param-name>\n            <param-value>c:\\Program Files\\mycommand</param-value>\n          </init-param>\ndoes not work well with error like\n\n\n7 juil. 2010 15:51:52 org.apache.catalina.core.ApplicationContext log\nINFO: cgi: runCGI (stderr):'C:\\Program' is not recognized as an internal or external command,\n\nNeed probably to add \" in for cgiExcecutable in CGIServlet.java,  like it is done\nfor CmdAndArgs",
    "created": "2010-07-28 03:45 UTC",
    "fixes": [
      "c0cd721"
    ]
  },
  {
    "id": "BUG-50556",
    "summary": "improve JreMemoryLeakPreventionListener against leak caused by LdapPoolManager",
    "description": "When class com.sun.jndi.ldap.LdapPoolManager is initialized, if if the system property com.sun.jndi.ldap.connect.pool.timeout is set to a value greater than 0, a PoolCleaner thread is spawned, without fixing a specific context class loader.\nIf the initialization of the class is triggered by a web application, its class loader will be used by the PoolCleaner thread. If that web app is stopped, its class loader will leak.\n\nWe can improve JreMemoryLeakPreventionListener to prevent that leak.",
    "created": "2011-01-06 17:13 UTC",
    "fixes": [
      "d36f958"
    ]
  },
  {
    "id": "BUG-50496",
    "summary": "AccessLogValve not logging size correctly for %B with enabled compression",
    "description": "During a log analysis of before and after enabling http/1.1 compression in tomcat 6.0.29 (and also earlier) we see that the access-logs do NOT sow a difference in sizes reported.\n\nDrilling down into the issue it seems as if the size reported with %B is not taking compression into account even though the documentation says:\n%B - Bytes sent, excluding HTTP headers\n\nA quick comparison with the apache httpd 2.2 shows that httpd IS logging compressed data sizes.\n\nHere an easy means to replicate:\n\n* take a stock tomcat 6.0.29\n* configure tomcat to use compression and enable access logging\n* start tomcat\n* do 2 web-requests with (say curl) to http://127.0.0.1:8080/ one time without the header \"Acccept-encoding: gzip\" the other time with the header added\n* look at the access-logfile and you see that both get reported as 7777 Bytes sent\n\nThis is a bit of a pain, as there is no way to report the compressed size in any other way with tomcat (like with logging notes with apache httpd) and it would be very helpful if the real size was available for reporting on efficiency without having to resort to use tcpdump estimates...\n\nThanks,\n        Martin Sperl\n\nP.s: Here the glory details of the way this can get replicated:\nmsmac:apache-tomcat-6.0.29 sperl$ diff -u conf/server.xml.orig conf/server.xml--- conf/server.xml.orig        2010-07-19 15:01:51.000000000 +0200\n+++ conf/server.xml     2010-12-18 11:09:17.000000000 +0100\n@@ -68,6 +68,7 @@\n     -->\n     <Connector port=\"8080\" protocol=\"HTTP/1.1\" \n                connectionTimeout=\"20000\" \n+compression=\"on\"\n                redirectPort=\"8443\" />\n     <!-- A \"Connector\" using the shared thread pool-->\n     <!--\n@@ -137,10 +138,8 @@\n \n         <!-- Access log processes all example.\n              Documentation at: /docs/config/valve.html -->\n-        <!--\n         <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"  \n                prefix=\"localhost_access_log.\" suffix=\".txt\" pattern=\"common\" resolveHosts=\"false\"/>\n-        -->\n \n       </Host>\n     </Engine>\nmsmac:apache-tomcat-6.0.29 sperl$ bin/catalina.sh start\nUsing CATALINA_BASE:   /Users/sperl/noTimeMachine/apache-tomcat-6.0.29\nUsing CATALINA_HOME:   /Users/sperl/noTimeMachine/apache-tomcat-6.0.29\nUsing CATALINA_TMPDIR: /Users/sperl/noTimeMachine/apache-tomcat-6.0.29/temp\nUsing JRE_HOME:        /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home\nUsing CLASSPATH:       /Users/sperl/noTimeMachine/apache-tomcat-6.0.29/bin/bootstrap.jar\nmsmac:apache-tomcat-6.0.29 sperl$ curl -vv http://127.0.0.1:8080/ |wc * About to connect() to 127.0.0.1 port 8080 (#0)\n*   Trying 127.0.0.1...   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0connected\n* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\n> GET / HTTP/1.1\n> User-Agent: curl/7.21.2 (x86_64-apple-darwin10.4.0) libcurl/7.21.2 OpenSSL/1.0.0a zlib/1.2.5 libidn/1.19\n> Host: 127.0.0.1:8080\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< Server: Apache-Coyote/1.1\n< Accept-Ranges: bytes\n< ETag: W/\"7777-1279544386000\"\n< Last-Modified: Mon, 19 Jul 2010 12:59:46 GMT\n< Content-Type: text/html\n< Content-Length: 7777\n< Date: Sun, 19 Dec 2010 12:17:30 GMT\n< \n{ [data not shown]\n100  7777  100  7777    0     0   134k      0 --:--:-- --:--:-- --:--:--  138k* Connection #0 to host 127.0.0.1 left intact\n\n* Closing connection #0\n     213     623    7777\nmsmac:apache-tomcat-6.0.29 sperl$ tail -1 logs/localhost_access_log.2010-12-19.txt \n127.0.0.1 - - [19/Dec/2010:13:17:30 +0100] \"GET / HTTP/1.1\" 200 7777\nmsmac:apache-tomcat-6.0.29 sperl$ curl -vv --header \"Accept-Encoding: gzip\" http://127.0.0.1:8080/ | wc\n* About to connect() to 127.0.0.1 port 8080 (#0)\n*   Trying 127.0.0.1...   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0connected\n* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\n> GET / HTTP/1.1\n> User-Agent: curl/7.21.2 (x86_64-apple-darwin10.4.0) libcurl/7.21.2 OpenSSL/1.0.0a zlib/1.2.5 libidn/1.19\n> Host: 127.0.0.1:8080\n> Accept: */*\n> Accept-Encoding: gzip\n> \n< HTTP/1.1 200 OK\n< Server: Apache-Coyote/1.1\n< Accept-Ranges: bytes\n< ETag: W/\"7777-1279544386000\"\n< Last-Modified: Mon, 19 Jul 2010 12:59:46 GMT\n< Content-Type: text/html\n< Transfer-Encoding: chunked\n< Content-Encoding: gzip\n< Vary: Accept-Encoding\n< Date: Sun, 19 Dec 2010 12:18:02 GMT\n< \n{ [data not shown]\n100  2750    0  2750    0     0   455k      0 --:--:-- --:--:-- --:--:--  671k* Connection #0 to host 127.0.0.1 left intact\n\n* Closing connection #0\n       8      87    2750\nmsmac:apache-tomcat-6.0.29 sperl$ tail -1 logs/localhost_access_log.2010-12-19.txt \n127.0.0.1 - - [19/Dec/2010:13:18:02 +0100] \"GET / HTTP/1.1\" 200 7777\nmsmac:apache-tomcat-6.0.29 sperl$",
    "created": "2010-12-19 07:33 UTC",
    "fixes": [
      "160373e"
    ]
  },
  {
    "id": "BUG-49159",
    "summary": "Improve ThreadLocal memory leak clean-up",
    "description": "Doing this in a thread-safe way means performing the clean-up in the thread where the ThreadLocal exists. A likely point is just before the Thread gets returned to the pool.",
    "created": "2010-04-20 13:33 UTC",
    "fixes": [
      "f5eb35a",
      "e0d603a",
      "b6ac721",
      "8e6eac6",
      "4895489"
    ]
  },
  {
    "id": "BUG-48822",
    "summary": "Include contest name in reload and stop log statements",
    "description": "Created attachment 25063 [details]\nThe patch adding context name in log statements\n\nCurrent log statement are like this\n  \"Exception starting Context\"\nwithout any information on the concerned context.\n\nInclude patch adds context name to the log output for en, fr, es... but not for the ja properties ;-)",
    "created": "2010-02-26 10:35 UTC",
    "fixes": [
      "6e3451d",
      "f3c50f8"
    ]
  },
  {
    "id": "BUG-50449",
    "summary": "Methodexpression with arguments fails in JSF composite component",
    "description": "When a methodexpression with arguments is invoked in a JSF composite component, Tomcat 7.0.5 EL fails to locate the right method. This works fine in Glassfish 3.0.1, so it's likely not a JSF/Facelets issue.\n\nBelow testcase requires the Mojarra 2.0.3 API and Impl JAR's in /WEB-INF/lib.\n\ntest.xhtml\n----------------------------------------\n<!DOCTYPE html>\n<html lang=\"en\"\n    xmlns:h=\"http://java.sun.com/jsf/html\"\n    xmlns:cc=\"http://java.sun.com/jsf/composite/components\">\n    <h:head>\n        <title>Test</title>\n    </h:head>\n    <h:body>\n        <h1>Inline components</h1>\n        <h:form>\n            <h:commandButton value=\"submit without argument\" \n                action=\"#{bean.submit}\" />\n            <h:commandButton value=\"submit with argument\" \n                action=\"#{bean.submit('test')}\" />\n        </h:form>    \n        <h1>Composite component</h1>\n        <cc:test bean=\"#{bean}\" />\n    </h:body>  \n</html>\n----------------------------------------\n\nresources/components/test.xhtml\n----------------------------------------\n<!DOCTYPE html>\n<html lang=\"en\"\n    xmlns:h=\"http://java.sun.com/jsf/html\"\n    xmlns:cc=\"http://java.sun.com/jsf/composite\">\n    <cc:interface>\n        <cc:attribute name=\"bean\" required=\"true\" />\n    </cc:interface>\n    <cc:implementation>\n        <h:form>\n            <h:commandButton value=\"submit without argument\" \n                action=\"#{cc.attrs.bean.submit}\" />\n            <h:commandButton value=\"submit with argument\"\n                action=\"#{cc.attrs.bean.submit('test')}\" />\n        </h:form>    \n    </cc:implementation>\n</html>\n----------------------------------------\n\ncom.example.Bean\n----------------------------------------\npackage com.example;\n\nimport javax.faces.bean.ManagedBean;\nimport javax.faces.bean.RequestScoped;\n\n@ManagedBean\n@RequestScoped\npublic class Bean {\n    public void submit() { \n        System.out.println(\"submit\");\n    }\n    \n    public void submit(String string) {\n        System.out.println(\"submit with string: \" + string);\n    }\n}\n----------------------------------------\n\nWhen running on Tomcat 7.0.5, the submit with argument on a JSF composite component will submit to the method without argument. When the method without argument is outcommented in bean, a javax.el.MethodNotFoundException is been thrown. While not immediately visible in the stacktrace, under the covers Tomcat seems to be returning the wrong method for the method expression.",
    "created": "2010-12-09 21:46 UTC",
    "fixes": [
      "b3d0f9d"
    ]
  },
  {
    "id": "BUG-50459",
    "summary": "StandardContext.bindThread() and unbindThread() are not symmetrical and not limited to current thread",
    "description": "As a side effect of my commit, I think I found a bug in StandardContext.bindThread() and unbindThread() methods in both tomcat 6 and 7 :\n\n- the methods should be symmetrical : unbindThread should restore the Thread CCL after calling DirContextURLStreamHandler.unbind() and ContextBindings.unbindThread()\n- StandardContext.bindThread() should call DirContextURLStreamHandler.bindThread() instead of DirContextURLStreamHandler.bind()\n- StandardContext.unbindThread() should call DirContextURLStreamHandler.unbindThread() instead of DirContextURLStreamHandler.unbind()",
    "created": "2010-12-11 19:06 UTC",
    "fixes": [
      "c263221",
      "995ef1b"
    ]
  },
  {
    "id": "BUG-50282",
    "summary": "Reference from javax.security.auth.login.LoginContext.contextClassLoader initalized in static code block prevents an undeployed Web application from being garbage collected (similar to #49669)",
    "description": "The class javax.security.auth.login.LoginContext has a \"contextClassLoader\" field that I believe is causing a similar problem as identified in bug #49669, which is related to the class not being garbage collected even though the application has been undeployed.\n\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=49669\n\nI was able to notice this by deploying a very simple spring-based webapp that utilizes javax.security for authentication in which the LoginContext class is used.\n\nI then used YourKit profiler as specified in this writeup to find any lingering classes without instances:\n\nhttp://www.yourkit.com/docs/kb/class_loaders.jsp\n\nThe following class had the most instances (inside of a WebappClassLoader):\n\"contextClassLoader of javax.security.auth.login.Configuration [Class]\"\n\nThis looks almost identical to bug #49669 with the only difference being that the contextClassLoader field isn't static, however it is initialized in a static code block.  Thus, it looks like the solution for bug #49669 would solve this problem as well.",
    "created": "2010-11-16 20:14 UTC",
    "fixes": [
      "dba82cd",
      "39e29a3",
      "f2d19a9"
    ]
  },
  {
    "id": "BUG-48973",
    "summary": "Don't create SESSIONS.ser when no session exists",
    "description": "Created attachment 25171 [details]\nPatch skiping SESSIONS.ser file creation if no session exists\n\nWhen a webapp is unloaded, a SESSIONS.ser file is created even if no session exists for the application. This is useless.",
    "created": "2010-03-24 09:22 UTC",
    "fixes": [
      "079d43b"
    ]
  },
  {
    "id": "BUG-48692",
    "summary": "Provide option to parse application/x-www-form-urlencoded PUT requests",
    "description": "Provide an option to treat application/x-www-form-urlencoded encoded parameters in a PUT request in a similar manner to application/x-www-form-urlencoded parameters in a POST request",
    "created": "2010-02-07 02:41 UTC",
    "fixes": [
      "e34b164"
    ]
  },
  {
    "id": "BUG-50015",
    "summary": "dynamic servlet security incomplete and badly distributed",
    "description": "The current implementation of dynamic servlet security through ServletRegistration.Dynamic.setServletSecurity and the ServletContext.createServlet and addServlet methods is incomplete, and includes some logic that exposes internals of the tomcat security framework directly in the ServletRegistration.Dynamic implementation.\n\nThe attached patch:\n\n- moves the logic that depends on the internals of tomcats security implementation from ApplicationServletRegistration to StandardContext where it can at least be overridden by e.g. jacc implementations\n\n- provides notifications to StandardContext of users calling createServlet and addServlet on ApplicationContext/ServletContext so subclasses of StandardContext can implement the spec behavior without subclassing ApplicationContext.\n\nThis patch is generated from a tomcat copy that already has several other patches I've proposed applied.  Let me know if there are problems applying it.",
    "created": "2010-09-27 16:22 UTC",
    "fixes": [
      "0843ba0"
    ]
  },
  {
    "id": "BUG-49180",
    "summary": "Add option to disable log rotation in FileHandler.",
    "description": "Small enhancement to FileHandler.java which allow susers to disable log rotation by setting the .rotation attribute to \"false\".",
    "created": "2010-04-24 13:34 UTC",
    "fixes": [
      "7184011"
    ]
  },
  {
    "id": "BUG-23950",
    "summary": "[PATCH] Context.listBindings(...) broken?",
    "description": "I believe that the Context.listBindings(...) methods should return an\nEnumeration that returns resolved Objects, not references.  The current\nimplementation does not make an effort to resolve References to Objects prior to\nreturning the Binding.  It also should hold Exceptions until the enumeration has\nbeen fully traversed.  A possible patch is noted below (verified against 1.4,\nspot-checked for pre-1.4).\n\n\nIndex: NamingContextBindingsEnumeration.java\n===================================================================\nRCS file:\n/home/cvspublic/jakarta-tomcat-4.0/catalina/src/share/org/apache/naming/NamingContextBindingsEnumeration.java,v\nretrieving revision 1.1\ndiff -u -r1.1 NamingContextBindingsEnumeration.java\n--- NamingContextBindingsEnumeration.java\t2 Nov 2000 06:14:16 -0000\t1.1\n+++ NamingContextBindingsEnumeration.java\t20 Oct 2003 14:58:28 -0000\n@@ -67,9 +67,12 @@\n import java.util.Hashtable;\n import java.util.Vector;\n import java.util.Enumeration;\n+import javax.naming.CompositeName;\n+import javax.naming.Context;\n import javax.naming.NamingException;\n import javax.naming.NamingEnumeration;\n import javax.naming.Binding;\n+import javax.naming.spi.NamingManager;\n \n /**\n  * Naming enumeration implementation.\n@@ -85,13 +88,17 @@\n     // ----------------------------------------------------------- Constructors\n \n \n-    public NamingContextBindingsEnumeration(Vector entries) {\n+    public NamingContextBindingsEnumeration(Vector entries, Context ctx,\nHashtable env) {\n         enum = entries.elements();\n+\t\tthis.ctx = ctx;\n+\t\tthis.env = env;\n     }\n \n \n-    public NamingContextBindingsEnumeration(Enumeration enum) {\n+    public NamingContextBindingsEnumeration(Enumeration enum, Context ctx,\nHashtable env) {\n         this.enum = enum;\n+\t\tthis.ctx = ctx;\n+\t\tthis.env = env;\n     }\n \n \n@@ -103,6 +110,11 @@\n      */\n     protected Enumeration enum;\n \n+    private Hashtable env;\n+    private Context ctx;\n+    private Binding next;\n+    private Exception trouble;\n+    private boolean runtimeExc;\n \n     // --------------------------------------------------------- Public Methods\n \n@@ -110,9 +122,10 @@\n     /**\n      * Retrieves the next element in the enumeration.\n      */\n-    public Object next()\n-        throws NamingException {\n-        return nextElement();\n+    public Object next() {\n+\t\tObject ret = next;\n+\t\tnext = null;\n+\t\treturn ret;\n     }\n \n \n@@ -121,7 +134,35 @@\n      */\n     public boolean hasMore()\n         throws NamingException {\n-        return enum.hasMoreElements();\n+\t\tif (next != null) {\n+\t\t\treturn true;\n+\t\t}\n+\t\tif (enum.hasMoreElements()) {\n+\t\t\ttry {\n+\t\t\t\tNamingEntry entry = (NamingEntry)enum.nextElement();\n+\t\t\t\tString name = entry.name;\n+\t\t\t\tObject obj = NamingManager.getObjectInstance(entry.value, new\nCompositeName(name), ctx, env);\n+\t\t\t\tnext = new Binding(name, entry.value.getClass().getName(), obj, true);\n+\t\t\t\treturn true;\n+\t\t\t} catch (NamingException e) {\n+\t\t\t\ttrouble = e;\n+\t\t\t} catch (RuntimeException e) {\n+\t\t\t\ttrouble = e;\n+\t\t\t\truntimeExc = true;\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tNamingException ne = new NamingException();\n+\t\t\t\tne.setRootCause(e);\n+\t\t\t\ttrouble = ne;\n+\t\t\t}\n+\t\t}\n+\t\tif (trouble != null) {\n+\t\t\tif (runtimeExc) {\n+\t\t\t\tthrow (RuntimeException)trouble;\n+\t\t\t} else {\n+\t\t\t\tthrow (NamingException)trouble;\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n     }\n \n \n@@ -133,16 +174,17 @@\n     }\n \n \n-    public boolean hasMoreElements() {\n-        return enum.hasMoreElements();\n-    }\n-\n-\n-    public Object nextElement() {\n-        NamingEntry entry = (NamingEntry) enum.nextElement();\n-        return new Binding(entry.name, entry.value.getClass().getName(), \n-                           entry.value, true);\n-    }\n+\tpublic boolean hasMoreElements() {\n+\t\ttry {\n+\t\t\treturn hasMore();\n+\t\t} catch (NamingException e) {\n+\t\t\treturn false;\n+\t\t}\n+\t}\n+\n+\tpublic Object nextElement() {\n+\t\treturn next();\n+\t}\n \n \n }\nIndex: NamingContext.java\n===================================================================\nRCS file:\n/home/cvspublic/jakarta-tomcat-4.0/catalina/src/share/org/apache/naming/NamingContext.java,v\nretrieving revision 1.8\ndiff -u -r1.8 NamingContext.java\n--- NamingContext.java\t8 Nov 2001 21:02:04 -0000\t1.8\n+++ NamingContext.java\t20 Oct 2003 14:58:38 -0000\n@@ -429,7 +429,7 @@\n         while ((!name.isEmpty()) && (name.get(0).length() == 0))\n             name = name.getSuffix(1);\n         if (name.isEmpty()) {\n-            return new NamingContextBindingsEnumeration(bindings.elements());\n+            return new NamingContextBindingsEnumeration(bindings.elements(),\nthis, env);\n         }\n         \n         NamingEntry entry = (NamingEntry) bindings.get(name.get(0));\nIndex: resources/FileDirContext.java\n===================================================================\nRCS file:\n/home/cvspublic/jakarta-tomcat-4.0/catalina/src/share/org/apache/naming/resources/FileDirContext.java,v\nretrieving revision 1.15\ndiff -u -r1.15 FileDirContext.java\n--- resources/FileDirContext.java\t6 Nov 2002 09:57:17 -0000\t1.15\n+++ resources/FileDirContext.java\t20 Oct 2003 14:59:01 -0000\n@@ -389,7 +389,7 @@\n \n         Vector entries = list(file);\n \n-        return new NamingContextBindingsEnumeration(entries);\n+        return new NamingContextBindingsEnumeration(entries, this, env);\n \n     }\n \nIndex: resources/WARDirContext.java\n===================================================================\nRCS file:\n/home/cvspublic/jakarta-tomcat-4.0/catalina/src/share/org/apache/naming/resources/WARDirContext.java,v\nretrieving revision 1.5\ndiff -u -r1.5 WARDirContext.java\n--- resources/WARDirContext.java\t28 Feb 2002 07:04:36 -0000\t1.5\n+++ resources/WARDirContext.java\t20 Oct 2003 14:59:10 -0000\n@@ -374,12 +374,12 @@\n     public NamingEnumeration listBindings(Name name)\n         throws NamingException {\n         if (name.isEmpty())\n-            return new NamingContextBindingsEnumeration(list(entries));\n+            return new NamingContextBindingsEnumeration(list(entries), this, env);\n         Entry entry = treeLookup(name);\n         if (entry == null)\n             throw new NamingException\n                 (sm.getString(\"resources.notFound\", name));\n-        return new NamingContextBindingsEnumeration(list(entry));\n+        return new NamingContextBindingsEnumeration(list(entry), this, env);\n     }",
    "created": "2003-10-20 17:56 UTC",
    "fixes": [
      "ec28a9a"
    ]
  },
  {
    "id": "BUG-49799",
    "summary": "The new JSP 2.2 omit-attribute in jsp:attribute does not work with EL or expressions",
    "description": "Created attachment 25926 [details]\nA JSP file which show three different use cases of the jsp:attribute omit attribute\n\nI'm trying to make use of the new omit-attribute in the jsp:attribute. This new feature of JSP 2.2 is described in the Specs in JSP.5.10.\n\nTable JSP.5-7 Attributes for the <jsp:attribute> standard action\n\nomit (optional) Valid values are true and false. If true, and when\nused with <jsp:element>, the attribute in the element being\nouput is omitted. Ignored when used with a standard or\ncustom action. Defaults to false.\n\nThere is an introduction text here: \nhttp://www.ibm.com/developerworks/forums/thread.jspa?messageID=14471459\n\nand I'm trying to make this work in my setup but I'm failing. Or I don't get the point.\n\nThe following works:\n<jsp:element name=\"p\">\n\t<jsp:attribute name=\"style\" omit=\"true\" >color:red</jsp:attribute>\n\nThe following does NOT work:\n<jsp:element name=\"p\">\n\t<jsp:attribute name=\"style\" omit=\"<%=jspExpressionTrue%>\" >color:red</jsp:attribute>\n\nThe following does NOT work either:\n<jsp:element name=\"p\">\n\t<jsp:attribute name=\"style\" omit=\"${trueEL}\" >color:red</jsp:attribute>\n\nFull JSP code in my attachment. I actually use the JSP-document (XML / JSPX-)syntax, but it does not work in any of the JSP dialects.\n\n\nSo I don't get the point why I should not be able to use EL in the omit-attribute, because then it's kind of useless.\n\n\nI use\nWindows Vista 64bit\nJavaSE 1.6\nApache Tomcat 7.0.0 and Apche Tomcat 7.0.2beta\nJSTL 1.1.2\n\nAll setup together in a typical \"Dynamic Web Project\" in Eclipse 3.6 Helios",
    "created": "2010-08-22 16:44 UTC",
    "fixes": [
      "557ef4e"
    ]
  },
  {
    "id": "BUG-49779",
    "summary": "501 Method not implemented with successive POST requests",
    "description": "Created attachment 25911 [details]\nclient wire/context log, client code, webapp code\n\nAn unexpected HTTP 501 occurs if using HttpComponents with successive POST requests against a simple Tomcat 7 servlet (Form-based POST Authentication is enabled). After a sucessfull authentication, the client requests the same protected resource a few times in a row, but the second request always returns a \"501 Method not implemented\" status. All other requests succeed.\n\nThe following communication takes place:\n1. Client requests a protected resource; Tomcat returns the login page (HTTP200)\n2. Client provides the user credentials and calls the login resource; Tomcat returns a redirect (HTTP302)\n3. Client sets the location from the redirect for the next request(identical to URI from #1) and requests it; Tomcat returns the page (HTTP200)\n4. Client requests the same resource again; Tomcat returns a HTTP501 - Method not implemented\n5. Client requests the same resource again; Tomcat returns the page (HTTP200)\n6. Client requests the same resource again; Tomcat returns the page (HTTP200)\n7. Client requests the same resource again; Tomcat returns the page (HTTP200)\n\nThe access log message regarding the 501 says:\n'\"testName=testValuePOST /test/secure/ HTTP/1.1\" 501 1278', which may indicate that the entity data and the HTTP-method name somehow got mixed up!? Strangely the HTTP501 does not appear in case of a JSP for the requested resource, only if facing a form-based POST authentication Servlet. The servlet does only implement post and get(which calls the doPost) and returns just a string. The client code should be fine since I already posted this issue on the HTTPComponents mailing list and the data sent over the wire seems to be right. \n\nI attached the source/bin of the testclient and webapp and also the wire/context log of the client.\n\nHow can I provide further helpfull information?",
    "created": "2010-08-19 05:47 UTC",
    "fixes": [
      "426e563"
    ]
  },
  {
    "id": "BUG-49655",
    "summary": "ExpressionFactoryImpl.createMethodExpression() is not EL 2.2 Spec conform",
    "description": "org.apache.el.ExpressionFactoryImpl.createMethodExpression(ELContext context,\nString expression, Class expectedReturnType, Class[] expectedParamTypes)\n\ndoes not correctly impl EL Specification 2.2 (Maintenance Release 2 - December\n10, 2009)\n\nThe spezfication say at site 72 (last paragraph):\nexpectedParamTypes - The expected parameter types for the method to be found.\nMust be an array with no elements if there are no parameters expected. It is\nillegal to pass null, unless the method is specified with arugments in the EL\nexpression, in which case these arguments are used for method selection, and\nthis parameter is ignored.\n\nThe part \", unless the method is specified....\" was added in 2.2 and is not\nimplemented.\n\nIf i call the method with expectedParamTypes == null i get NullPointerException,\nalthough expression #{bean.sayHello('World')} has arguments.  \n\nThe Sun 2.2.1-b04 el (com.sun.el.ExpressionFactoryImpl) has the same defect. The\ncode looks identical.\nJUEL 2.2.1 (http://juel.sourceforge.net/) works fine.",
    "created": "2010-07-27 10:32 UTC",
    "fixes": [
      "96a99ce"
    ]
  },
  {
    "id": "BUG-49555",
    "summary": "Custom Taglibs should support all parameters",
    "description": "I added two method <function>s with the same name but with an addition parameters.  I get this error:\n\norg.apache.jasper.JasperException: Duplicate function name list in tag library /WEB-INF/dataStore.tld\n\nCrap!  It is not even looking at the parameters.  Ok, Java matches on method names and method parameters.  It is commonly called a method signature. \n\nWell, Jasper is in the Google SDK, so it could perhaps be smarter than I am -- so maybe I overlooked something.  Is that the case?\n\nWhy can't the Jasper compiler match on parameters like Java?  This is after all Java.  I'm only using TLDs because they are cleaner then escaping Java code in JSP.  I have already wrote a considerable amount of TLD code and it does not easily mix with the expression language.  This is the reason why it is so important to have this implementation work as expected.\n\nPlease let me know how I can help.  Lets get this fixed.\n\n-Jimmy\n\nAppEngine SDK 1.3.2 (sorry, I don't know the embedded Jasper version)",
    "created": "2010-07-05 18:13 UTC",
    "fixes": [
      "b5f089d"
    ]
  },
  {
    "id": "BUG-49528",
    "summary": "HttpServletRequest.isAsyncStarted() returns false when a Runnable is started",
    "description": "Created attachment 25667 [details]\nServlet 3.0 isAsyncStarted testcase\n\nIn the attached example, an async request is created, but within a Runnable started using AsyncContext.start() the isAsyncStarted() returns false. \n\nThis conflicts with the servlet 3.0 specification. Quoting chapter \"2.3.3.3 Asynchronous processing\" : \"\n  public boolean isAsyncStarted() - Returns true if async processing\n  has started on this request, and false otherwise. If this request has been\n  dispatched using one of the AsyncContext.dispatch methods since it was\n  put in asynchronous mode, or a call to AsynContext.complete is made, this\n  method returns false.\n\"\n\nThis output is generated by Tomcat 7.0.0:\n\nStart async()\nDispatching start()\nrequest.isAsyncStarted()1true\nReturning from doGet()\nrequest.isAsyncStarted()2false\nBefore sleep()\nAfter sleep()\nrequest.isAsyncStarted()3false\nReturning from run()\nrequest.isAsyncStarted()4false\n\nThe following output is what we would expect and what Jetty v8.0 generates:\n\nStart async()\nDispatching start()\nrequest.isAsyncStarted()1true\nReturning from doGet()\nrequest.isAsyncStarted()2true\nBefore sleep()\nAfter sleep()\nrequest.isAsyncStarted()3true\nReturning from run()\nrequest.isAsyncStarted()4false",
    "created": "2010-06-30 06:32 UTC",
    "fixes": [
      "741e000"
    ]
  },
  {
    "id": "BUG-49488",
    "summary": "Infrequent StringIndexOutOfBoundsException in WebappClassLoader",
    "description": "After switching from Tomcat 5.5 to Tomcat 6.0.24, every now and then Tomcat's WebappClassLoader throws StringIndexOutOfBoundsExceptions, which leads to various exceptions like NoDefClassFoundError. With Tomcat 5.5, everything went fine. The web application in which the exceptions occur remained untouched throughout the whole time. The error is also present in Tomcat 6.0.26.\n\nHere is a short stack trace from the Catalina log file:\n\njava.lang.StringIndexOutOfBoundsException: String index out of range: 95\n         at java.lang.String.substring(String.java:1934)\n         at org.apache.catalina.util.RequestUtil.normalize(RequestUtil.java:131)\n         at org.apache.naming.resources.FileDirContext.normalize(FileDirContext.java:771)\n         at org.apache.naming.resources.FileDirContext.file(FileDirContext.java:809)\n         at org.apache.naming.resources.FileDirContext.getAttributes(FileDirContext.java:429)\n         at org.apache.naming.resources.BaseDirContext.getAttributes(BaseDirContext.java:747)\n         at org.apache.naming.resources.ProxyDirContext.getAttributes(ProxyDirContext.java:840)\n         at org.apache.catalina.loader.WebappClassLoader.findResourceInternal(WebappClassLoader.java:2414)\n         at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:2266)\n         at org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:976)\n         at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1451)\n         at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1329)\n         at java.lang.Class.getDeclaredClasses0(Native Method)\n         at java.lang.Class.getDeclaredClasses(Class.java:1699)",
    "created": "2010-06-22 07:24 UTC",
    "fixes": [
      "d141e95"
    ]
  },
  {
    "id": "BUG-49424",
    "summary": "Using URL.ChunkedStreamingMode results in HTTP response code: 405",
    "description": "Using the URL class coupled with setChunkedStreamingMode  results in:\n\nSEVERE: java.lang.NullPointerException\n\tat org.apache.catalina.connector.Request.readChunkedPostBody(Request.java:2632)\n\nThis is true for 6.0.26.  This worked fine in 6.0.16 and the source code\nthat I have for 6.0.20 does not have the readChunkedPostBody method.\n\nAttached is a TestNG unit test demonstrating the issue.  The method\nconnectNoChunking() runs fine while the method connectWithChunking() fails.",
    "created": "2010-06-10 14:08 UTC",
    "fixes": [
      "734bee9"
    ]
  },
  {
    "id": "BUG-49132",
    "summary": "JNDI not working",
    "description": "Simple web-app test to lookup the environment context is throwing an exception - below code is taken from tomcat 6/7 docs - 2nd line throws a NameNotFound Exception 'comp' not found.\n\n// Obtain our environment naming context\nContext initCtx = new InitialContext();\nContext envCtx = (Context) initCtx.lookup(\"java:comp/env\");",
    "created": "2010-04-16 01:52 UTC",
    "fixes": [
      "f1c2d52"
    ]
  },
  {
    "id": "BUG-49158",
    "summary": "More than one JSESSIONID cookie headers set",
    "description": "The following JSP\n\n<%\n  session.invalidate();\n  session = request.getSession();\n  session.invalidate();\n  session = request.getSession();\n%>\nDone!\n\n\nGenerates this response from Apache Tomcat\nHTTP/1.x 200 OK\n\nServer: Apache-Coyote/1.1\n\nSet-Cookie: JSESSIONID=8C65C3AB20B8BBD157866668B67983B1; Path=\"\"; HttpOnly\n\nSet-Cookie: JSESSIONID=498BD2E8B22C5121143B7305A0ECB249; Path=\"\"; HttpOnly\n\nSet-Cookie: JSESSIONID=49F58AE7833522293F8EAD2AB2D13F19; Path=\"\"; HttpOnly\n\nContent-Type: text/html;charset=ISO-8859-1\n\nContent-Length: 7\n\nDate: Tue, 20 Apr 2010 15:38:47 GMT",
    "created": "2010-04-20 11:40 UTC",
    "fixes": [
      "2468252"
    ]
  },
  {
    "id": "BUG-45015",
    "summary": "Quoting in attributes",
    "description": "According to JSP 2.0 specification (chapter 1.7 page 72,73)\n\nThis code is illegal:\n<mytags:tag value=\"<%= \"hi!\" %>\" />\n\nInstead the correct sentence would be:\n<mytags:tag value='<%= \"hi!\" %>' />\n<mytags:tag value=\"<%= \\\"hi!\\\" %>\" />\n<mytags:tag value='<%= \\\"name\\\" %>' />\n...\n\nBut Tomcat 5.5 accept the first sentence. It's not a real bug but accepting a wrong sentence allow developpers to write code which does not respect the JSP specification. And when this code is executing in another servlet container (Websphere 6.1 for example) it doesn't work.",
    "created": "2008-05-16 04:22 UTC",
    "fixes": [
      "833a52e"
    ]
  },
  {
    "id": "BUG-48795",
    "summary": "Tomcat tries to use cache when compilation failed",
    "description": "Created attachment 25037 [details]\nFull error log.\n\nAfter compilation of a JSP fails, Tomcat will often still try to use the (non-existant) cached version.\n\nFor example, I have a simple JSP containing only \"Hello, <%=name%>\".\nWhen accessing for the first time, Tomcat throws \"org.apache.jasper.JasperException: Unable to compile class for JSP\".\n\nSubsequent requests will alternate between this error, and \"java.lang.ClassNotFoundException: org.apache.jsp.jsp.test_jsp\".\n\nIn the case of editing existing JSPs which have compiled fine, the response will alternate between the original error, and the cache of the last-good JSP.\n\nI'm using Sun JVM 1.6.0_18-b07.",
    "created": "2010-02-22 15:13 UTC",
    "fixes": [
      "368eb50"
    ]
  },
  {
    "id": "BUG-48701",
    "summary": "jsp:getProperty broken for certain cases",
    "description": "I've updated from tomcat6-6.0.18-9.jpp5 to tomcat6-6.0.24-2.jpp5\n\nThis breaks a lot of JSPs! Jasper simply denies to compile them. I hunted down the bug to a very simple example:\n\n<%@taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<c:set var=\"now\" value='<%= new java.util.Date() %>' />\n<jsp:getProperty name=\"now\" property=\"time\" />\n\nThis will simply output the current unix time (e.g. 1265641020987).\nOn tomcat 6.0.24 I get this:\n\norg.apache.jasper.JasperException: jsp:getProperty for bean with name 'now'. Name was not previously introduced as per JSP.5.3\n\tat org.apache.jasper.compiler.Generator$GenerateVisitor.visit(Generator.java:1083)\n\tat org.apache.jasper.compiler.Node$GetProperty.accept(Node.java:1124)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2417)\n\tat org.apache.jasper.compiler.Node$Root.accept(Node.java:495)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n\tat org.apache.jasper.compiler.Generator.generate(Generator.java:3383)\n\tat org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:216)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:332)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:312)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:299)\n\tat org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:589)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:317)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\nMy JDK is\njava version \"1.6.0_17\"\nJava(TM) SE Runtime Environment (build 1.6.0_17-b04)\nJava HotSpot(TM) Server VM (build 14.3-b01, mixed mode)\n\nPlease fix that! I assume that a lot of apps will break out there ...",
    "created": "2010-02-08 07:02 UTC",
    "fixes": [
      "42bac69"
    ]
  },
  {
    "id": "BUG-48668",
    "summary": "Template text that looks like a deferred expression can be mishandled even if EL is ignored",
    "description": "In some cases text that happens to look similar to a deferred expression (#{..}) can get mangled even if the EL is not active. This appears to only happen if the text in question immediately proceeds a custom tag (either a full blown custom tag or a simple .tag file tag). The initial # and { characters get removed.\n\nThis happens in Tomcat v6.0.24 but did not happen in v6.0.20 so appears to be unintentional.\n\nWe have been upgrading legacy sites to Tomcat v6 and have hit this problem.\n\nThis problem can be recreated in a bog standard install of Tomcat v6.0.24. Create a simple .tag file that does nothing more than say 'hello'. Place a reference to this tag into a JSP with the offending text immediately after it. \n\nA test JSP that looks something like (note that EL is being ignored)...\n\n<%@ page isELIgnored=\"true\" %>\n<%@ taglib tagdir=\"/WEB-INF/tags/custom\" prefix=\"custom\" %>\n<html>\n<title>Test</title>\n</head>\n<body>\n  <custom:example />#{foo.bar}\n</body>\n</html>\n\nWhere the custom example tag (/WEB-INF/tags/custom/example.tag) looks like this...\n\nHello\n\nRather than the page returning the following...\n\n<html>\n<title>Test</title>\n</head>\n<body>\n  Hello#{foo.bar}\n</body>\n</html>\n\nIt will return...\n\n<html>\n<title>Test</title>\n</head>\n<body>\n  Hellofoo.bar}\n</body>\n</html>\n\nNotice the missing # and { from the text.\n\nI don't believe the platform Tomcat is running on matters. Have seen this behaviour on both Mac OS X and Linux.",
    "created": "2010-02-03 09:22 UTC",
    "fixes": [
      "de0e6e1",
      "916154f",
      "bf36a0c",
      "6e2e25d"
    ]
  },
  {
    "id": "BUG-48050",
    "summary": "org.apache.naming.NamingContext's createSubcontext method returns Context with wrong name",
    "description": "Below is the original source code of org.apache.naming.NamingContext's createSubcontext(Name name) method:\n\n/**\n     * Creates and binds a new context. Creates a new context with the given \n     * name and binds it in the target context (that named by all but \n     * terminal atomic component of the name). All intermediate contexts and \n     * the target context must already exist.\n     * \n     * @param name the name of the context to create; may not be empty\n     * @return the newly created context\n     * @exception NameAlreadyBoundException if name is already bound\n     * @exception InvalidAttributesException if creation of the subcontext \n     * requires specification of mandatory attributes\n     * @exception NamingException if a naming exception is encountered\n     */\n    public Context createSubcontext(Name name)\n        throws NamingException {\n        checkWritable();\n        \n        Context newContext = new NamingContext(env, this.name);\n        bind(name, newContext);\n        \n        return newContext;\n    }\n\nHowever, the returned NamingContext has the same name with its parent NamingContext. I suggest change the source code to below:\n\n    public Context createSubcontext(Name name)\n        throws NamingException {\n        checkWritable();\n        \n        Context newContext = new NamingContext(env, name.get(name.size() - 1));\n        bind(name, newContext);\n        \n        return newContext;\n    }",
    "created": "2009-10-25 10:26 UTC",
    "fixes": [
      "65093e0"
    ]
  },
  {
    "id": "BUG-48827",
    "summary": "Error validating empty tag that contains jsp:attribute in JSP documents in XML syntax",
    "description": "Created attachment 25065 [details]\nemptyTagWithAttribute_Xml.jspx\n\nSteps to reproduce:\n1. Place the attached emptyTagWithAttribute_Xml.jspx into webapps/examples\n2. Open http://localhost:8080/examples/emptyTagWithAttribute_Xml.jspx\n3. Observe error 500:\n\norg.apache.jasper.JasperException: /emptyTagWithAttribute_Xml.jspx(6,18) According to TLD, tag my:shuffle must be empty, but is not\n\torg.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:40)\n\torg.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:407)\n\torg.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:88)\n\torg.apache.jasper.compiler.JspDocumentParser.parse(JspDocumentParser.java:216)\n\torg.apache.jasper.compiler.ParserController.doParse(ParserController.java:239)\n\torg.apache.jasper.compiler.ParserController.parse(ParserController.java:103)\n\torg.apache.jasper.compiler.Compiler.generateJava(Compiler.java:170)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:332)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:312)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:299)\n\torg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:589)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:317)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\n\nThe above stack trace is with 6.0.25 release candidate. IIRC, I observed the same with 6.0.24 recently. It works correctly with TC 6.0.20.\n\nThis issue affects JSP Documents (XML syntax) only. The pages in plain JSP syntax (e.g. shuffle.jsp in our examples) work correctly.",
    "created": "2010-02-27 13:10 UTC",
    "fixes": [
      "e54e5db"
    ]
  },
  {
    "id": "BUG-48616",
    "summary": "Struts 1.2 and bean:define tag throws jsp 1.1 regression exception",
    "description": "I'm using Struts 1.2.\nI've upgrade from tomcat 6.0.20 to 6.0.24 and nothing works.\n\nThe jsp compilation throws many error (i use the tag bean:define with same variable many times in jsp):\n\nDuring jsp precompilation:\n\n\"my_variable\" is already defined in _jspService(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)\n\nand at runtime:\n\n26-gen-2010 10.16.43 org.apache.catalina.core.ApplicationDispatcher invoke\nGRAVE: Servlet.service() for servlet jsp threw exception\norg.apache.jasper.JasperException: Unable to compile class for JSP: \n\nAn error occurred at line: 459 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 576 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 693 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 810 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 927 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 1.045 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 1.162 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 1.279 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 1.396 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 1.531 in the generated java file\nDuplicate local variable patientsExists\n\nAn error occurred at line: 1.660 in the generated java file\nDuplicate local variable patientsExists\n\nAn error occurred at line: 1.777 in the generated java file\nDuplicate local variable patientsExists\n\nAn error occurred at line: 1.897 in the generated java file\nDuplicate local variable multiportionExists\n\nAn error occurred at line: 2.014 in the generated java file\nDuplicate local variable multiportionExists\n\nAn error occurred at line: 2.131 in the generated java file\nDuplicate local variable multiportionExists\n\nAn error occurred at line: 2.251 in the generated java file\nDuplicate local variable generalExists\n\nAn error occurred at line: 2.368 in the generated java file\nDuplicate local variable generalExists\n\nAn error occurred at line: 2.485 in the generated java file\nDuplicate local variable generalExists\n\nAn error occurred at line: 2.605 in the generated java file\nDuplicate local variable messagesExists\n\nAn error occurred at line: 2.722 in the generated java file\nDuplicate local variable messagesExists\n\nAn error occurred at line: 2.842 in the generated java file\nDuplicate local variable printFindExists\n\nAn error occurred at line: 2.959 in the generated java file\nDuplicate local variable printFindExists\n\nStacktrace:\n        at org.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:92)\n        at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:330)\n        at org.apache.jasper.compiler.JDTCompiler.generateClass(JDTCompiler.java:439)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:334)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:312)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:299)\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:589)\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:317)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)\n        at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:551)\n        at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:488)\n        at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:968)\n        at org.apache.jsp.WEB_002dINF.pages.login.mainPage_jsp._jspService(mainPage_jsp.java:206)\n        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:377)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)\n        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436)\n        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)\n        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)\n        at org.apache.struts.action.RequestProcessor.doForward(RequestProcessor.java:1062)\n        at org.apache.struts.action.RequestProcessor.processForwardConfig(RequestProcessor.java:386)\n        at org.apache.struts.action.RequestProcessor.process(RequestProcessor.java:229)\n        at org.apache.struts.action.ActionServlet.process(ActionServlet.java:1196)\n        at org.apache.struts.action.ActionServlet.doPost(ActionServlet.java:432)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)\n        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436)\n        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)\n        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)\n        at org.apache.struts.action.RequestProcessor.doForward(RequestProcessor.java:1062)\n        at org.apache.struts.action.RequestProcessor.processForwardConfig(RequestProcessor.java:386)\n        at org.apache.struts.action.RequestProcessor.process(RequestProcessor.java:229)\n        at org.apache.struts.action.ActionServlet.process(ActionServlet.java:1196)\n        at org.apache.struts.action.ActionServlet.doPost(ActionServlet.java:432)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.displaytag.filter.ResponseOverrideFilter.doFilter(ResponseOverrideFilter.java:125)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:558)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)\n        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n        at java.lang.Thread.run(Thread.java:619)\n\n\n\nBefore upgrading to 6.0.24 all works fine.\n\nReading the documentation of bean:define in struts javadoc i see this message:\n\nUSAGE NOTE - There is a restriction in the JSP 1.1 Specification that disallows using the same value for an id attribute more than once in a single JSP page. Therefore, you will not be able to use <bean:define> for the same bean name more than once in a single page. \n\nBut i've not specify any jsp version.\n\nSo, is this a tomcat 6.0.24 regression bug? \n\nI've not particular compilation type/version specified in my app.",
    "created": "2010-01-26 01:22 UTC",
    "fixes": [
      "eb06b92"
    ]
  },
  {
    "id": "BUG-42390",
    "summary": "JSP compilation error with nested tagfile tags with variables with \"AT_BEGIN\" scope",
    "description": "Given a tagfile \"test.tag\" in /WEB-INF/tags/t:\n---- begin test.tag ----\n<%@ variable name-given=\"X\" scope=\"AT_BEGIN\" %>\n<jsp:doBody/>\n---- end test.tag ----\nthe following JSP \"testTest.jsp\":\n---- begin testTest.jsp ----\n<t:test><t:test/></t:test>\n---- end testTest.jsp ----\ngives a JSP compilation error:\norg.apache.jasper.JasperException: Unable to compile class for JSP: \nStacktrace:\n        at\norg.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:85)\n        at\norg.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:330)\n        at\norg.apache.jasper.compiler.JDTCompiler.generateClass(JDTCompiler.java:435)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:298)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:277)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:265)\n        at\norg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:564)\n        at\norg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:299)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:315)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:265)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:269)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)\n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:210)\n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:174)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:542)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)\n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:151)\n        at\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:870)\n        at\norg.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)\n        at\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)\n        at\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:685)\n        at java.lang.Thread.run(Thread.java:613)",
    "created": "2007-05-11 00:59 UTC",
    "fixes": [
      "eb06b92"
    ]
  },
  {
    "id": "BUG-48627",
    "summary": "JasperException with JSF tags and value expressions",
    "description": "I recently updated from Tomcat 6.0.20 to 6.0.24.\nNow some jsps with jsf tags are not compiling anymore.\n\nFollowing tag results in a JasperException in 6.0.24 but compiles fine with older versions:\n\n<h:outputText value=\"\\\\\">\n\nStack:\nCaused by: org.apache.jasper.JasperException: /pages/preferences.jsp(147,100) According to TLD or attribute directive in tag file, attribute value does not accept any expressions\n                at org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:40)\n                at org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:407)\n                at org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:148)\n                at org.apache.jasper.compiler.Validator$ValidateVisitor.checkXmlAttributes(Validator.java:1165)\n                at org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:852)\n                at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n                at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n                at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n                at org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:871)\n                at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n                at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n                at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n                at org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:871)\n                at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n                at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n                at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n                at org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:871)\n                at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n                at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n                at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n                at org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:871)\n                at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n                at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n                at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n                at org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:871)\n                at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n                at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n                at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n                at org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:871)\n                at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n                at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n                at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n                at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2417)\n                at org.apache.jasper.compiler.Node$Root.accept(Node.java:495)\n                at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n                at org.apache.jasper.compiler.Validator.validateExDirectives(Validator.java:1775)\n                at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:183)\n                at org.apache.jasper.compiler.Compiler.compile(Compiler.java:332)\n                at org.apache.jasper.compiler.Compiler.compile(Compiler.java:312)\n                at org.apache.jasper.compiler.Compiler.compile(Compiler.java:299)\n                at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:589)\n                at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:317)\n                at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)\n                at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)\n                at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n                at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n                at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n                at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)\n                at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:551)\n                at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:488)\n                at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:968)\n                at org.apache.jasper.runtime.PageContextImpl.doInclude(PageContextImpl.java:650)\n                at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:644)\n                at org.apache.tiles.jsp.context.JspTilesRequestContext.include(JspTilesRequestContext.java:80)\n                ... 67 more",
    "created": "2010-01-27 00:28 UTC",
    "fixes": [
      "d8bc712"
    ]
  },
  {
    "id": "BUG-47774",
    "summary": "Illegal context class loader is used when HttpSessionListener is executed.",
    "description": "When HttpSessionListener is executed, illegal class loader is set to the context classLoader.\n\nI think that the problem is in CoyoteAdapter#parseSessionCookiesId method. \nJSESSION COOKIE is parsed in this method, and sessionId is set to the request. \n\nTo check sessionId, Request#isRequestedSessionIdValid method is called in this method. \nAnd, Session#isValid() might be called in Request#isRequestedSessionIdValid method. \nHowever, the context class loader of a current thread is StandardClassLoader. \nIt is not WebappClassLoader. \n\nFor instance,\nWhen the session has already passed session-timeout, \nSession#expire is executed.\nAt this time, the context class loader of the thread that executes HttpSessionListenner#sessionDestroyed is StanderdClassLoader. \nThis is not good. \nThe context class loader of the thread that executes HttpSessionListenner should be WebAppClassLoader. \n\n\nBest regards.",
    "created": "2009-09-01 01:58 UTC",
    "fixes": [
      "cf05c25"
    ]
  },
  {
    "id": "BUG-48004",
    "summary": "setHeader() does not replace the previous value for a \"Server\"",
    "description": "Hello,\nIn a servlet or in a filter (before passing the control to doFilter() or after) try the following\nHttpServletResponse myResponse = ...\nmyResponse.setHeader(\"Server\",\"My own server name because I do not want to expose the real server name to the public for security reasons\");\n...\n\nIn the headers of the response you will get\nServer\tApache-Coyote/1.1, My own server name...\n\nAccording to the J2EE API for HttpServletResponse.html.setHeader()\nhttp://java.sun.com/j2ee/sdk_1.3/techdocs/api/javax/servlet/http/HttpServletResponse.html#setHeader(java.lang.String,%20java.lang.String)\n...\nSets a response header with the given name and value. If the header had already been set, the new value overwrites the previous one. The containsHeader method can be used to test for the presence of a header before setting its value.\n...\nIn fact if I call myResponse.containsHeader(\"Server\") I even get a false!!!\n\nIf you look in the IDE at the response object and dig in the responses and wrappers, you will find at the end a buffer with some data already set by Tomcat with this value and other things\n.\nAs I understand it Tomcat (or Coyote) does not let this header to be changed while nothing in the specification says that it is special.\nI did not find either a parameter in server.xml or other where the server name is specified to be overiden.\n\nSo the spec is not implemented properly for this specific header.\nSome other values are in this buffer, my goal was not to change them but other headers or values could have the same issue.\n\nThis issue is the same in Tomcat 5.5.28 and Tomcat 6.0.20. Not tested on 7.x.\n\nThanks \nOlivier",
    "created": "2009-10-15 11:16 UTC",
    "fixes": [
      "13daf69"
    ]
  },
  {
    "id": "BUG-36923",
    "summary": "Deactivated EL expressions are not parsed for jsp expressions/scriptlets/etc",
    "description": "JavaServer Pages Specification 2.0, section JSP.3.3.2 says:\n---\nSince the syntactic pattern ${expr} was not reserved in the JSP specifications\nbefore JSP 2.0, there may be situations where such a pattern appears but the\nintention is not to activate EL expression evaluation but rather to pass through\nthe pattern verbatim. To address this, the EL evaluation machinery can be\ndeactivated as indicated in this section.\n[...]\nThe default mode for JSP pages in a Web Application delivered using a web.xml\nusing the Servlet 2.3 or earlier format is to ignore EL expressions; this\nprovides for backward compatibility.\n---\n\nHowever, even with deactivated EL expression evaluation, jsp code like:\n<%@ page isELIgnored=\"true\" %>${<%= \"Hello, world!\" %>}\n\nwill produce output like:\n${<%= \"Hello, world!\" %>}\n\nwhich is of course not backwards-compatible with Servlet 2.3 / JSP 1.2 container\n(e.g., Tomcat 4.x), where the output would be:\n${Hello, world!}\n\nThe ${...} syntax is widely used, and any pre-2.0 jsp pages having it would be\nincompatible with Tomcat 5.x even though the standard tries to ensure the\ncompatibility.",
    "created": "2005-10-05 01:08 UTC",
    "fixes": [
      "a9ddeb2"
    ]
  },
  {
    "id": "BUG-48112",
    "summary": "Closing curly brace in literal string incorrectly treated as expression terminator.",
    "description": "On tomcat 6.0.20 something like the following line in a JSP causes a exception:\n\n<c:out value=\"${fn:trim('{world}')}\"/>\n\nAfter removing the closing curly brace from the literal ('{world}' -> '{world') the JSP works. This behaviour seems specific to 6.0.20, as on 6.0.18 and 6.0.16 the line above works fine.\n\nExample of exception:\n=====================\norg.apache.jasper.JasperException: An exception occurred processing JSP page /test.jsp at line 11\n\n8: <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n9: </head>\n10: <body>\n11: <c:out value=\"${fn:trim('{world}')}\"/>\n12: </body>\n13: </html>\n\n\nStacktrace:\n\torg.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:505)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:416)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:717)\nroot cause\n\njavax.el.ELException: Error Parsing: ${fn:trim('{world}\n\torg.apache.el.lang.ExpressionBuilder.createNodeInternal(ExpressionBuilder.java:125)\n\torg.apache.el.lang.ExpressionBuilder.build(ExpressionBuilder.java:150)\n\torg.apache.el.lang.ExpressionBuilder.createValueExpression(ExpressionBuilder.java:194)\n\torg.apache.el.ExpressionFactoryImpl.createValueExpression(ExpressionFactoryImpl.java:68)\n\torg.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:934)\n\torg.apache.jsp.test_jsp._jspx_meth_c_005fout_005f0(test_jsp.java:98)\n\torg.apache.jsp.test_jsp._jspService(test_jsp.java:72)\n\torg.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:374)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:717)\nroot cause\n\norg.apache.el.parser.ParseException: Encountered \" <ILLEGAL_CHARACTER> \"\\' \"\" at line 1, column 11.\nWas expecting one of:\n    <INTEGER_LITERAL> ...\n    <FLOATING_POINT_LITERAL> ...\n    <STRING_LITERAL> ...\n    \"true\" ...\n    \"false\" ...\n    \"null\" ...\n    \"(\" ...\n    \")\" ...\n    \"!\" ...\n    \"not\" ...\n    \"empty\" ...\n    \"-\" ...\n    <IDENTIFIER> ...\n    \n\torg.apache.el.parser.ELParser.generateParseException(ELParser.java:2142)\n\torg.apache.el.parser.ELParser.jj_consume_token(ELParser.java:2024)\n\torg.apache.el.parser.ELParser.Function(ELParser.java:1207)\n\torg.apache.el.parser.ELParser.NonLiteral(ELParser.java:1114)\n\torg.apache.el.parser.ELParser.ValuePrefix(ELParser.java:1016)\n\torg.apache.el.parser.ELParser.Value(ELParser.java:965)\n\torg.apache.el.parser.ELParser.Unary(ELParser.java:947)\n\torg.apache.el.parser.ELParser.Multiplication(ELParser.java:711)\n\torg.apache.el.parser.ELParser.Math(ELParser.java:631)\n\torg.apache.el.parser.ELParser.Compare(ELParser.java:443)\n\torg.apache.el.parser.ELParser.Equality(ELParser.java:337)\n\torg.apache.el.parser.ELParser.And(ELParser.java:281)\n\torg.apache.el.parser.ELParser.Or(ELParser.java:225)\n\torg.apache.el.parser.ELParser.Choice(ELParser.java:182)\n\torg.apache.el.parser.ELParser.Expression(ELParser.java:174)\n\torg.apache.el.parser.ELParser.DynamicExpression(ELParser.java:146)\n\torg.apache.el.parser.ELParser.CompositeExpression(ELParser.java:43)\n\torg.apache.el.lang.ExpressionBuilder.createNodeInternal(ExpressionBuilder.java:93)\n\torg.apache.el.lang.ExpressionBuilder.build(ExpressionBuilder.java:150)\n\torg.apache.el.lang.ExpressionBuilder.createValueExpression(ExpressionBuilder.java:194)\n\torg.apache.el.ExpressionFactoryImpl.createValueExpression(ExpressionFactoryImpl.java:68)\n\torg.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:934)\n\torg.apache.jsp.test_jsp._jspx_meth_c_005fout_005f0(test_jsp.java:98)\n\torg.apache.jsp.test_jsp._jspService(test_jsp.java:72)\n\torg.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:374)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:717)",
    "created": "2009-11-03 07:09 UTC",
    "fixes": [
      "11810fb"
    ]
  },
  {
    "id": "BUG-47453",
    "summary": "JasperException for deferred-method with return type void",
    "description": "Created attachment 23908 [details]\nZipped Eclipse 3.4 projects\n\nI tried to get the JSF sample application bookstore6 from the SUN Java EE 5 Tutorial running.\n\nEnvironment:  \nTomcat Version : 6.0.20\nEclipse Version: 3.4\nJava JDK Version: jdk1.5.0_17\n\nSee: http://java.sun.com/javaee/5/docs/tutorial/doc/bnara.html\n\nI added jsf-api.jar, jsf-impl.jar and jstl-1.1.2.jar to Tomcat's lib directory, then created the project (bookstoreJSF and utility project bookstore)and populated it with the sample source files from the Java EE 5 tutorial.\n\nI created a Tomcat Server in the Eclipse workspace and added the project to the Tomcat Server.\n\nThe server and the web application started fine.\n\nWhen I directed my browser (Firefox 3) at the starting page of the project (http://localhost:8080/bookstoreJSF), I got a Jasper Exception:\n\norg.apache.jasper.JasperException: /chooselocale.jsp(45,12) Unknown attribute type (void) for attribute actionListener.\n\tat org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:40)\n\tat org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:407)\n\tat org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:236)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.checkXmlAttributes(Validator.java:1099)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:821)\n\tat org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:840)\n\tat org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:840)\n\tat org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:840)\n\tat org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1530)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2411)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2417)\n\tat org.apache.jasper.compiler.Node$Root.accept(Node.java:495)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n\tat org.apache.jasper.compiler.Validator.validateExDirectives(Validator.java:1736)\n\tat org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:183)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:332)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:312)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:299)\n\tat org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:586)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:317)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)\n\tat org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436)\n\tat org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)\n\tat org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)\n\tat com.sun.faces.context.ExternalContextImpl.dispatch(ExternalContextImpl.java:410)\n\tat com.sun.faces.application.ViewHandlerImpl.executePageToBuildView(ViewHandlerImpl.java:468)\n\tat com.sun.faces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:140)\n\tat com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.java:110)\n\tat com.sun.faces.lifecycle.Phase.doPhase(Phase.java:100)\n\tat com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:139)\n\tat javax.faces.webapp.FacesServlet.service(FacesServlet.java:266)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)\n\tat org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436)\n\tat org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)\n\tat org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)\n\tat org.apache.jasper.runtime.PageContextImpl.doForward(PageContextImpl.java:706)\n\tat org.apache.jasper.runtime.PageContextImpl.forward(PageContextImpl.java:677)\n\tat org.apache.jsp.index_jsp._jspService(index_jsp.java:91)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:374)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)\n\tat java.lang.Thread.run(Thread.java:595)\n\n\nThe problem comes from an actionListener defined in the taglib (see bookstore.tld in the attached project bookstoreJSF) with a method-signature using 'void' as return type.\n\nI found no way to work around the problem. Then I looked up the source code for org.apache.jasper.compiler.Validator.\n\nFrom what I understand, the (inner class) method ValidateVisitor.checkXmlAttributes checks the deferred-method's return type from the taglib. The call to JspUtil.toClass then fires a ClassNotFoundException for the method's return type 'void'. This triggers the JasperException 'invalid attribute type' that I see in the Tomcat console.\n\nThe test for a 'deferred-value' type is perfectly correct, but the return type for a deferred-method should be legally specifiable as void.",
    "created": "2009-06-30 01:46 UTC",
    "fixes": [
      "04fbe97"
    ]
  },
  {
    "id": "BUG-47841",
    "summary": "CombinedRealm fails to switch to other realm",
    "description": "Created attachment 24266 [details]\ncatalina.out - with errors\n\nI have the following configuration in server.xml to enable authentication\nagainst both the ldap servers and user realm. This works perfectly except for\nif both the ldap servers are unreachable, Tomcat doesn't fall back to the user\nrealm. When I start Tomcat up the requests just hang waiting for a connection\ntimeout. \n\n    <Engine name=\"Catalina\" defaultHost=\"localhost\">\n\n      <Realm className=\"org.apache.catalina.realm.LockOutRealm\">\n\n             <Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\"\n                       resourceName=\"UserDatabase\"/>\n\n             <Realm className=\"org.apache.catalina.realm.JNDIRealm\"\n                       connectionName=\"${jndi.connectionName}\"\n                       connectionPassword=\"${jndi.connectionPassword}\"\n\n                       connectionURL=\"${jndi.connectionURL}\"\n                       alternateURL=\"${jndi.alternateURL}\"\n\n                       userBase=\"${jndi.userBase}\"\n                       userSearch=\"${jndi.userSearch}\"\n                       userSubtree=\"${jndi.userSubtree}\"\n\n                       roleBase=\"${jndi.roleBase}\"\n                       roleName=\"${jndi.roleName}\"\n                       roleSearch=\"${jndi.roleSearch}\"\n                       roleSubtree=\"${jndi.roleSubtree}\"\n\n             />\n\n\n      </Realm>",
    "created": "2009-09-15 02:01 UTC",
    "fixes": [
      "e15db62",
      "d784d08",
      "e89edd1"
    ]
  },
  {
    "id": "BUG-47330",
    "summary": "proposal : port of mod_remoteip in Tomcat as RemoteIpValve",
    "description": "Created attachment 23772 [details]\nFirst version of the proposed patch\n\nHere is a proposal to port Apache Server mod_remoteip module as a Tomcat Valve to have the actual end user remote ip in ServletRequest.getRemoteAddr() and ServletRequest.getRemoteHost() methods even if reverse proxies (e.g. Apache Http Server mod_proxy_http + mod_proxy_balancer) and/or hardware load balancer (e.g. F5 Big IP, etc).\n\nThis feature will benefit security and audit frameworks like SpringSecurity which use ServletRequest.getRemoteAddr() in its eventing mechanism to track web user ip.\n\nThis proposal is composed of :\n* RemoteIpValve.java : the proposed standalone code\n* RemoteIpValveTest.java : 12 test cases to validate the behavior\nNote : no existing Tomcat code is modified by this proposed Valve\n\nDocumentation for mod_remoteip : http://httpd.apache.org/docs/trunk/mod/mod_remoteip.html\n\nMain differences between mod_remoteip and RemoteIpValve :\n* RemoteIpValve uses regular expressions to express network subnets when mod_remoteip uses ip address blocks because:\n** request filters valves (RemoteAddrValve and RemoteHostValve) already use regular expressions for this\n** there are no ip address blocks library available in Tomcat similar to apr_ipsubnet_test that is used in httpd.\n** The directives RemoteIPInternalProxyList and RemoteIPTrustedProxyList are not ported: configuration is server.xml oriented and limited to the java equivalents of  RemoteIPInternalProxy  and RemoteIPTrustedProxy\n\nSample of configuration : \n <Valve \n   className=\"org.apache.catalina.connector.RemoteIpValve\"\n   allowedInternalProxies=\"192\\.168\\.0\\.10, 192\\.168\\.0\\.11\"\n   remoteIPHeader=\"x-forwarded-for\"\n   remoteIPProxiesHeader=\"x-forwarded-by\"\n   trustedProxies=\"proxy1, proxy2\"\n   />\n\nConfiguration parameters :\n\n|-------------------------|-----------------------------------|--------------------------------------|-----------------------------------------------|\n| REMOTEIPVALVE PROPERTY  | EQUIVALENT MOD_REMOTEIP DIRECTIVE | FORMAT                               | DEFAULT VALUE                                 |\n|-------------------------|-----------------------------------|--------------------------------------|-----------------------------------------------|\n| remoteIPHeader          | RemoteIPHeader                    | Compliant http header string         | x-forwarded-for                               |\n|-------------------------|-----------------------------------|--------------------------------------|-----------------------------------------------|\n| internalProxies         | RemoteIPInternalProxy             | Comma delimited list of regular      | 10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3},                |\n|                         |                                   | expressions (in the syntax supported | 192\\.168\\.\\d{1,3}\\.\\d{1,3},                   |\n|                         |                                   | by the Pattern library)              | 169\\.254\\.\\d{1,3}\\.\\d{1,3},                   |\n|                         |                                   |                                      | 127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}                |\n|                         |                                   |                                      |                                               |\n|                         |                                   |                                      | By default, 10/8, 192.168/16, 169.254/16      |\n|                         |                                   |                                      | and 127/8 are allowed ; 172.16/12 has not     |\n|                         |                                   |                                      | been enabled by default because it is         |\n|                         |                                   |                                      | complex to describe with regular expressions  |\n|-------------------------|-----------------------------------|--------------------------------------|-----------------------------------------------|\n| proxiesHeader           | RemoteIPProxiesHeader             | Compliant http header String         | x-forwarded-by                                |\n|-------------------------|-----------------------------------|--------------------------------------|-----------------------------------------------|\n| trustedProxies          | RemoteIPTrustedProxy              | Comma delimited list of regular      |                                               |\n|                         |                                   | expressions (in the syntax supported |                                               |\n|                         |                                   | by the Pattern library)              |                                               |\n|-------------------------|-----------------------------------|--------------------------------------|-----------------------------------------------|\n\n\nReason why RemoteIpValve is declared in the o.a.catalina.connector package instead of o.a.catalina.valves :\nBecause Request.setRemoteAddr(String) and Request.setRemoteHost(String) methods are currently no-op and RemoteIpValve use package visibility to directly modify Request.remoteAddr and Request.remoteHost fields.\nRemoteIpValve could be moved to o.a.catalina.valves if the Request.setRemoteAddr(String) and Request.setRemoteHost(String) methods to no longer be no-op but to actually modify the underlying fields.",
    "created": "2009-06-07 17:38 UTC",
    "fixes": [
      "41741c1"
    ]
  },
  {
    "id": "BUG-47444",
    "summary": "Removal of Jakarta references",
    "description": "There are still quite a few references to Jakarta Commons and even Jakarta Tomcat in the documentation.\n\nPatch to follow",
    "created": "2009-06-28 06:13 UTC",
    "fixes": [
      "0cc8b34"
    ]
  },
  {
    "id": "BUG-37794",
    "summary": "getParameter() fails on POST with transfer-encoding: chunked",
    "description": "Overview: When an HTTP/1.1 client (for example J2ME) POST with\ntransfer-encoding: chunked to a servlet, the getParameter() family and\ngetQueryString() methods fail to retrieve the correct result by returning\nnothing. In contrast, reading until end-of-file on the servlets input stream\nproduces correct result.\n\nSteps to reproduce: Send a chunked POST request, with a=0 in the first chunk,\nsleep 1 s, then send &b=0 in the next, followed by a 0-chunk and trailer. On the\nreceiving servlet, call getParameterNames() or getParameter().\n\nActual Results: null\n\nExpected results: a=0&b=1\n\nBuild: Tomcat 5.5.12\n\nAdditional Builds and Platforms:\n- getParameter() does fail on:\n    Tomcat 4.1.18\n    Tomcat 4.1.24\n    Tomcat 5.5.12\n- getParameter() doesn't fail on:\n    Jetty 5.1.6\n\nAdditional Information: Please refer to the log below for Tomcat behaviour. It\nis from a simple test client and servlet written to demonstrate the bug.\nTomcat 5.5.12 log:\n\n****************************\n1) Reading the body - PASS *\n****************************\n    [junit] // testChunked(localhost, 8080)\n    [junit] // Sending request to host localhost port 8080\n    [junit] POST /testchunked/EchoServlet/getBody HTTP/1.1\n    [junit] User-Agent: no.riiber.net.http.test.chunked.EchoClient (chunked-test)\n    [junit] content-type: application/x-www-form-urlencoded\n    [junit] connection: Close\n    [junit] host: localhost:8080\n    [junit] transfer-encoding: chunked\n\n    [junit] 3\n    [junit] a=0\n    [junit] 4\n    [junit] &b=1\n    [junit] // Reading response from host localhost port 8080\n    [junit] HTTP/1.1 200 OK\n    [junit] Server: Apache-Coyote/1.1\n    [junit] Content-Type: text/plain;charset=ISO-8859-1\n    [junit] Content-Length: 9\n    [junit] Date: Mon, 05 Dec 2005 07:48:59 GMT\n    [junit] Connection: close\n\n    [junit] a=0&b=1\n    [junit] // PASS: a=0\n    [junit] // PASS: &b=1\n***************************************\n2) Reading using getQuerySTring: FAILS\n***************************************\n    [junit] // testChunked(localhost, 8080)\n    [junit] // Sending request to host localhost port 8080\n    [junit] POST /testchunked/EchoServlet/getQueryString HTTP/1.1\n    [junit] User-Agent: no.riiber.net.http.test.chunked.EchoClient (chunked-test)\n    [junit] content-type: application/x-www-form-urlencoded\n    [junit] connection: Close\n    [junit] host: localhost:8080\n    [junit] transfer-encoding: chunked\n\n    [junit] 3\n    [junit] a=0\n    [junit] 4\n    [junit] &b=1\n    [junit] // Reading response from host localhost port 8080\n    [junit] HTTP/1.1 200 OK\n    [junit] Server: Apache-Coyote/1.1\n    [junit] Content-Type: text/plain;charset=ISO-8859-1\n    [junit] Content-Length: 6\n    [junit] Date: Mon, 05 Dec 2005 07:48:59 GMT\n    [junit] Connection: close\n\n    [junit] null\n    [junit] // *** FAIL: a=0 is not present in response from\n/testchunked/EchoServlet/getQueryString ***\n    [junit] // *** FAIL: &b=1 is not present in response from\n/testchunked/EchoServlet/getQueryString ***\n********************************************\n3) Reading using getParameterNames(): FAILS\n*********************************************\n    [junit] // testChunked(localhost, 8080)\n    [junit] // Sending request to host localhost port 8080\n    [junit] POST /testchunked/EchoServlet/getParameterNamesAndValues HTTP/1.1\n    [junit] User-Agent: no.riiber.net.http.test.chunked.EchoClient (chunked-test)\n    [junit] content-type: application/x-www-form-urlencoded\n    [junit] connection: Close\n    [junit] host: localhost:8080\n    [junit] transfer-encoding: chunked\n\n    [junit] 3\n    [junit] a=0\n    [junit] 4\n    [junit] &b=1\n    [junit] // Reading response from host localhost port 8080\n    [junit] HTTP/1.1 200 OK\n    [junit] Server: Apache-Coyote/1.1\n    [junit] Content-Type: text/plain;charset=ISO-8859-1\n    [junit] Content-Length: 2\n    [junit] Date: Mon, 05 Dec 2005 07:49:02 GMT\n    [junit] Connection: close\n\n\n    [junit] // *** FAIL: a=0 is not present in response from\n/testchunked/EchoServlet/getParameterNamesAndValues ***\n    [junit] // *** FAIL: &b=1 is not present in response from\n/testchunked/EchoServlet/getParameterNamesAndValues ***\n\nBest regards\nArne Riiber",
    "created": "2005-12-05 18:43 UTC",
    "fixes": [
      "f540cc8"
    ]
  },
  {
    "id": "BUG-47124",
    "summary": "Run the unit tests as part of the build!!!",
    "description": "Created attachment 23565 [details]\nPatch running the unit tests as part of the build\n\nThe lack of unit tests is really a shame for a project like Tomcat! A few unit tests are available in the source code but first they are not run as part of the build process and second many of them fail.\n\nI've attached a patch to this issue that:\n- runs the existing unit tests as integral part of the build\n- renames some of the unit tests to have a consistent naming pattern for the unit tests (ie XXXXXTest)\n- makes a minimal cleanup\n\nThe consequence is that the build fails with this patch as 11 of the 51 unit tests fail. My current knowledge of Tomcat doesn't allow me to decide if the failing tests should be simply removed or adapted. With feedback on this, I can provide a modified version of the patch.",
    "created": "2009-04-30 00:06 UTC",
    "fixes": [
      "2cc9958"
    ]
  },
  {
    "id": "BUG-43343",
    "summary": "Loss of data and concurrency issue with Catalina session persistent storage",
    "description": "A user was asking questions on the tomcat users mailing list about TC and how it\nhandled concurrency in sessions and session passivation/object caching of\nsessions when they are inactive etc. I thought, surely this is using locks etc,\nso had responded as such. Then I got curious. I started looking in the code and\nfound that indeed TC has a concurrency issue when the session is to pushed to\ndisk if it is inactive or the max number of live sessions is too high.\n\nThe problem is a user could have a session getting ready to become inactive. The\nserver is beginning to write the session out to disk. The user then comes in on\na request and gets the current session. They set an attribute. The web\napplication and the user think all is OK. But in reality the data they just put\ninto the session will be lost. The server just dumped their session to disk\ncontaining the old data as they updated the copy. So, the next time they come in\nthe session will be pulled from disk with the old values and anything they put\ninto it will have been lost. Depending on the application this could be very bad.\n\nTo see the issue go to the file:\njava/org/apache/catalina/session/PersistentManagerBase.java\n\nmethods:\nswapIn\nswapOut\nwriteSession\nfindSession\n(other related)\nthen the different stores load and save methods. There is nothing keeping this\nfrom happening.\n\nIf a lock is on a per session level this should keep it snappy for all other\nrequests etc. Either the session could be used as the lock or an object instance\nvariable on the session instance.\n\nI noticed there is a comment in the source code for\nPersistentManagerBase.processMaxIdleSwaps which reads:\n// Swap out all sessions idle longer than maxIdleSwap\n// FIXME: What's preventing us from mangling a session during\n// a request?\n\nSo, apparently someone thought of this. Nothing is keeping it from mangling a\nsession currently.\n\nWhat might be a fix is a session is given an instance variable which can be used\nfor a synchronization lock at the session level. In\nPersistentManagerBase.findSession, this lock would be used before the session\ncan be returned. After the session map is accessed it should then return null if\nthe session had been passivating before it was asked to be found. The session\nwould then be loaded from storage again before it was ever given back to be\naccessed had it been passivating. It would also be used in\nPersistentManagerBase.* which call swapOut.\n\nThe code would look like this (might explain it better):\n\nStandardSession:\n\n/**\n Used for locking the session during persistence operations.\n**/\nInteger persistence_locker = new Integer(0);\n\nPersistentManagerBase:\n\n    /**\n     * Return the active Session, associated with this Manager, with the\n     * specified session id (if any); otherwise return <code>null</code>.\n     * This method checks the persistence store if persistence is enabled,\n     * otherwise just uses the functionality from ManagerBase.\n     *\n     * @param id The session id for the session to be returned\n     *\n     * @exception IllegalStateException if a new session cannot be\n     *  instantiated for any reason\n     * @exception IOException if an input/output error occurs while\n     *  processing this request\n     */\n    public Session findSession(String id) throws IOException {\n\n        Session session = super.findSession(id);\n        //OK, at this point, we're not sure if another thread is trying to\n        //remove the session or not so the only way around this is to lock\n        //it (or attempt to) and then try to get it by this session id again.\n        //If the other code ran swapOut, then we should get a null back during\n        //this run, and if not, then by doing this we lock it out and then can\n        //access the session safely and will call access on it to update the\n        //access time and hopefully keep the processes from running swapOut\n        //so, we're adding two accesses to the hashmap instead of one for\n        //each request. But, we know we get the session or null back after\n        //the other process has had a chance to remove it or not.\n        if(session!=null{\n\t        synchronized(session.persistence_locker){\n\t\t\t\tsession = super.findSession(session.getIdInternal());\n\t\t\t\tif(session!=null){\n\t\t\t\t   //we need to do this here\n\t\t\t\t   //to keep any external calling code from messing up the\n\t\t\t\t   //concurrency.\n\t\t\t\t   session.access();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        if (session != null)\n            return (session);\n\n        // See if the Session is in the Store\n        session = swapIn(id);\n        return (session);\n\n    }\n\n    /**\n     * Swap idle sessions out to Store if they are idle too long.\n     */\n    protected void processMaxIdleSwaps() {\n\n        if (!isStarted() || maxIdleSwap < 0)\n            return;\n\n        Session sessions[] = findSessions();\n        long timeNow = System.currentTimeMillis();\n\n        // Swap out all sessions idle longer than maxIdleSwap\n        // FIXME: What's preventing us from mangling a session during\n        // a request?\n        if (maxIdleSwap >= 0) {\n            for (int i = 0; i < sessions.length; i++) {\n                StandardSession session = (StandardSession) sessions[i];\n                synchronized(session.persistence_locker){\n            \t    if (!session.isValid())\n            \t        continue;\n            \t    int timeIdle = // Truncate, do not round up\n            \t        (int) ((timeNow - session.getLastAccessedTime()) / 1000L);\n            \t    if (timeIdle > maxIdleSwap && timeIdle > minIdleSwap) {\n            \t        if (log.isDebugEnabled())\n            \t            log.debug(sm.getString\n            \t                (\"persistentManager.swapMaxIdle\",\n            \t                 session.getIdInternal(), new Integer(timeIdle)));\n            \t        try {\n            \t            swapOut(session);\n            \t        } catch (IOException e) {\n            \t            ;   // This is logged in writeSession()\n            \t        }\n            \t    }\n\t\t\t\t}\n            }\n        }\n\n    }\n\n\n    /**\n     * Swap idle sessions out to Store if too many are active\n     */\n    protected void processMaxActiveSwaps() {\n\n        if (!isStarted() || getMaxActiveSessions() < 0)\n            return;\n\n        Session sessions[] = findSessions();\n\n        // FIXME: Smarter algorithm (LRU)\n        if (getMaxActiveSessions() >= sessions.length)\n            return;\n\n        if(log.isDebugEnabled())\n            log.debug(sm.getString\n                (\"persistentManager.tooManyActive\",\n                 new Integer(sessions.length)));\n\n        int toswap = sessions.length - getMaxActiveSessions();\n        long timeNow = System.currentTimeMillis();\n\n        for (int i = 0; i < sessions.length && toswap > 0; i++) {\n\t\tsynchronized(sessions[i].persistence_locker){\n                    int timeIdle = // Truncate, do not round up\n            \t    (int) ((timeNow - sessions[i].getLastAccessedTime()) / 1000L);\n\t            if (timeIdle > minIdleSwap) {\n\t                if(log.isDebugEnabled())\n\t                    log.debug(sm.getString\n\t                        (\"persistentManager.swapTooManyActive\",\n\t                         sessions[i].getIdInternal(), new Integer(timeIdle)));\n\t                try {\n\t                    swapOut(sessions[i]);\n\t                } catch (IOException e) {\n\t                    ;   // This is logged in writeSession()\n\t                }\n\t                toswap--;\n\t            }\n\t\t\t}\n        }\n\n    }\n\n\n    /**\n     * Back up idle sessions.\n     */\n    protected void processMaxIdleBackups() {\n\n        if (!isStarted() || maxIdleBackup < 0)\n            return;\n\n        Session sessions[] = findSessions();\n        long timeNow = System.currentTimeMillis();\n\n        // Back up all sessions idle longer than maxIdleBackup\n        if (maxIdleBackup >= 0) {\n            for (int i = 0; i < sessions.length; i++) {\n                StandardSession session = (StandardSession) sessions[i];\n                synchronized(session.persistence_locker){\n                    if (!session.isValid())\n                \t    continue;\n                \tint timeIdle = // Truncate, do not round up\n                    \t(int) ((timeNow - session.getLastAccessedTime()) / 1000L);\n                \tif (timeIdle > maxIdleBackup) {\n                    \tif (log.isDebugEnabled())\n                    \t    log.debug(sm.getString\n                    \t        (\"persistentManager.backupMaxIdle\",\n                    \t        session.getIdInternal(), new Integer(timeIdle)));\n\n                    \ttry {\n                        \twriteSession(session);\n                    \t} catch (IOException e) {\n                        \t;   // This is logged in writeSession()\n                    \t}\n                \t}\n            \t}\n        \t}\n\t    }\n\n    }\n\n\n\nSo, currently one could very easily have a session and have some issues. Your\nuser would have a time when they thought they set something or your code could\nthink this then immediately the changes are lost. Anyways, that is what looks to\nbe the issue and a workable fix. The only place I saw other issues was inside of:\njava/org/apache/catalina/valves/PersistentValve.java\n\nwhere it incorrectly grabs the store from the PersistentManager and uses it\ndirectly instead of using the manager API. To me this is bad in that the manager\nis not able to be the manager and this other logic is accessing the store\ndirectly and should never happen...unless it is used only in test cases etc.\n\nThe only way you could possibly *sort of* workaround this issue would be to use\na HttpSessionActivationListener, but even then it would be hard to code up a\n100% reliable solution. You can see how this would *sort of* be a way to work\naround the issue by looking at the class StandardSession method passivate , and\nsee the events will be thrown to alert code the session will passivate, but it\nwould be pretty complicated and ugly to protect the session completely.",
    "created": "2007-09-10 10:54 UTC",
    "fixes": [
      "de1bd11",
      "dd95184",
      "a96861d"
    ]
  },
  {
    "id": "BUG-47216",
    "summary": "Possible NPE in Http11Processor.action()",
    "description": "The code at around line 1075:\n\n        } else if (actionCode == ActionCode.ACTION_REQ_LOCAL_ADDR_ATTRIBUTE) {\n\n            if (localAddr == null)\n               localAddr = socket.getLocalAddress().getHostAddress();\n\nfails to check if \"socket != null\".\n\nSince this is checked everywhere else in the method this is probably a bug.\n\nThe method Http11Processor.parseHost() also references \"socket\" without checking for null. Within the class, it is only called by process(Socket), which guarantees that it won't be null.\n\nHowever once process() returns normally, socket will be set to null.\n\nThe parseHost() method is public, so it may be called when socket == null.\n\nPerhaps the parseHost() method should be private?",
    "created": "2009-05-18 18:13 UTC",
    "fixes": [
      "36feee0"
    ]
  },
  {
    "id": "BUG-46985",
    "summary": "Impossible condition in coyote.http11.Http11Processor.process(Socket socket)",
    "description": "coyote.http11.Http11Processor.process(Socket socket)\n...\n\n        int soTimeout = socket.getSoTimeout();\n        int oldSoTimeout = soTimeout;\n\n        int threadRatio = (endpoint.getCurrentThreadsBusy() * 100)\n                / endpoint.getMaxThreads();\n        if (threadRatio > 75) {\n            keepAliveLeft = 1;\n        }\n        \n        if (soTimeout != oldSoTimeout) {\n\nThe above condition will never be true. It looks like the code is trying to reset the timeout if it has not changed, but it will never do so.\n\nBoth the method and the class have a variable called \"socket\" which may be part of the problem - is the method trying to set the instance socket to have the same timeout as the parameter socket, or vice versa?\n\nThe socket parameter should be renamed.\n\nNote that the Javadoc appears to be completely wrong as well.",
    "created": "2009-04-07 16:36 UTC",
    "fixes": [
      "45c1453"
    ]
  },
  {
    "id": "BUG-46999",
    "summary": "change scope in ThreadPoolExecutor",
    "description": "change scope",
    "created": "2009-04-08 11:46 UTC",
    "fixes": [
      "abadf91"
    ]
  },
  {
    "id": "BUG-47013",
    "summary": "JSP not compiled at startup when used as a servlet",
    "description": "I created a servlet with a jsp and the following web.xml entry:\n\n\t<servlet>\n\t\t<servlet-name>Repository</servlet-name>\n\t\t<jsp-file>/Repository.jsp</jsp-file>\n\t\t<load-on-startup>1</load-on-startup>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>Repository</servlet-name>\n\t\t<url-pattern>/Repository</url-pattern>\n\t</servlet-mapping>\n\nI altered the JSP and started Tomcat.  The initial startup invokes the JSP with the following call stack:\n\n\torg.apache.jsp.Repository_jsp.jspInit(Repository_jsp.java:42)\n\torg.apache.jasper.runtime.HttpJspBase.init(HttpJspBase.java:51)\n\torg.apache.jasper.servlet.JspServletWrapper.getServlet(JspServletWrapper.java:159)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:329)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\torg.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1191)\n\torg.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:992)\n\torg.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4058)\n\torg.apache.catalina.core.StandardContext.start(StandardContext.java:4371)\n\torg.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)\n\torg.apache.catalina.core.StandardHost.start(StandardHost.java:719)\n\torg.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)\n\torg.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)\n\torg.apache.catalina.core.StandardService.start(StandardService.java:516)\n\torg.apache.catalina.core.StandardServer.start(StandardServer.java:710)\n\torg.apache.catalina.startup.Catalina.start(Catalina.java:578)\n\tsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tjava.lang.reflect.Method.invoke(Method.java:597)\n\torg.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)\n\torg.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)\n\nThen I hit the servlet with a normal request with http://localhost:8080/context/Repository which yields this call stack:\n\n\torg.apache.jsp.Repository_jsp.jspInit(Repository_jsp.java:42)\n\torg.apache.jasper.runtime.HttpJspBase.init(HttpJspBase.java:51)\n\torg.apache.jasper.servlet.JspServletWrapper.getServlet(JspServletWrapper.java:159)\n\torg.apache.jasper.servlet.JspServletWrapper.getDependants(JspServletWrapper.java:263)\n\torg.apache.jasper.compiler.Compiler.isOutDated(Compiler.java:430)\n\torg.apache.jasper.compiler.Compiler.isOutDated(Compiler.java:351)\n\torg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:582)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:317)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\torg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\torg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\torg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\n\torg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\torg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\torg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)\n\torg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:845)\n\torg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)\n\torg.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)\n\tjava.lang.Thread.run(Thread.java:619)\n\nThe JSP gets compiled on the request, but not at startup.  I backtracked a little and found StandardWrapper is doing:\n\n\treq.setQueryString(\"jsp_precompile=true\");\n\nwhich is unsafe b/c the precompile param can be specified as system property org.apache.jasper.Constants.PRECOMPILE.  Instead it should be:\n\n\treq.setQueryString(Constants.PRECOMPILE + \"=true\");\n\nAnyway, I wasn't overriding it so that didn't help.",
    "created": "2009-04-10 09:26 UTC",
    "fixes": [
      "c8cbc28"
    ]
  },
  {
    "id": "BUG-44988",
    "summary": "JPDA_OPTS in catalina.sh / catalina.bat is using old JDWP semantics",
    "description": "Since Java 5, the recommended option to start a JVM in debug mode has changed from\n-Xdebug -Xrunjdwp:...\nto\n-agentlib:jdwp=...\nas described in http://java.sun.com/j2se/1.5.0/docs/guide/jpda/conninv.html#Invocation\n\nSince Tomcat 6 requires Java 5, this change should be propagated in catalina.sh (line 212) / catalina.bat (line 152):\nchange \"JPDA_OPTS=-Xdebug -Xrunjdwp:\" to \"JPDA_OPTS=-agentlib:jdwp=\"\n\nNote that this change should not be back-ported to Tomcat 5.x, since this version runs with Java 1.4.",
    "created": "2008-05-13 06:10 UTC",
    "fixes": [
      "19834ca"
    ]
  },
  {
    "id": "BUG-46498",
    "summary": "Client certificate is not requested when clientAuth is false and resource is protected by security constraint",
    "description": "Tomcat configuration manual states that clientAuth can be false and that \n\"A false value (which is the default) will not require a certificate chain unless the client requests a resource protected by a security constraint that uses CLIENT-CERT authentication. See the SSL HowTo for an example.\"\n\nNote: The SSL Howto doesn't have a \"false\" option described for clientAuth.\n\nAnyway, Tomcat doesn't request a client certificate when clienAuth is false and the resource is protect by a security constraint like this:\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>Certificados</web-resource-name>\n      <url-pattern>/Certificados/*</url-pattern>\n    </web-resource-collection>\n    <user-data-constraint>\n      <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n    </user-data-constraint>\n  </security-constraint>\n\n  <login-config>\n    <auth-method>CLIENT-CERT</auth-method>\n  </login-config>\n\nTIA,\nPedro",
    "created": "2009-01-08 15:32 UTC",
    "fixes": [
      "43b59a7"
    ]
  },
  {
    "id": "BUG-37515",
    "summary": "smap not generated by JspC when used from Ant for precompilation",
    "description": "I've noticed that in Tomcat 5.5.12 one can pass the JspC task an smapSuppressed\nattribute.\n\nUnfortunately, it appears that one *still* cannot do source-level debugging of\nJSPs when they are precompiled via JspC with smapSuppressed=false in 5.5.12.\n\nNote that the same JSP are source-level debuggable in exactly the same set up if\nthey are compiled on the fly by Tomcat.\n\nUnfortunately I am baffled as to why this does not work...",
    "created": "2005-11-15 22:57 UTC",
    "fixes": [
      "9083a85"
    ]
  },
  {
    "id": "BUG-45906",
    "summary": "Fix ResourceAttributes ETag handling",
    "description": "Created attachment 22642 [details]\nFix ResourceAttributes ETag handling\n\nThe ResourceAttributes class and it's clients have a few problems WRT ETag handling:\n\n- ResourceAttributes only has a \"getetag\" attribute (apparently for WebDav?), and doesn't expose this value through an HTTP header compatible ALTERNATE_ETAG attribute like it does it's other attributes.\n- ResourceAttributes doesn't expose it's ETag through the getIDs(), getAll(), or get(String) methods, meaning FileDirContext.FileResourceAttributes won't return the value to DirContextURLConnection clients along with the other attributes.\n- The ResourceAttributes API is confusing, in that setETag(String) sets the *strong* etag, but getETag() returns the *weak* etag.\n- ResourceAttributes.getETag(boolean) is broken in that it sets the 'result' variable if there is an ETAG attribute value, but then immediately proceeds to overwrite that result value with the 'strongETag' or 'weakETag' value.\n- The only user of ResourceAttributes.getETag(boolean) is DefaultServlet.getETag(ResourceAttributes), which calls both ResourceAttributes.getETag() and ResourceAttributes.getETag(boolean) in succession - this method can be totally removed (making access more consistent with other attributes) by having just the simpler ResourceAttributes.getETag() return a strong tag if there is one, else fallback to returning the weak one.\n- The DefaultServlet.getETag(ResourceAttributes) method has a redundant and dead-code path to generate a weak etag using the content length and last modified values - which will have already been done and returned by ResourceAttributes.getETag(boolean).\n\nThe attached patch against trunk should fix all of this.\n\nFYI: This is a continuation of the DirContextURLConnection problems I fixed in bug 44611.",
    "created": "2008-09-27 15:07 UTC",
    "fixes": [
      "4a4ae47"
    ]
  },
  {
    "id": "BUG-45451",
    "summary": "Tag file attribute evaluation",
    "description": "Hello,\nI have an web app with 2 tag files.\nHere is my first tag 'testtag':\n\n<%@ tag %>\n<%@ attribute name=\"onLoad\" %>\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n\n<c:if test=\"${! empty onLoad}\">\n   <input type=\"hidden\" name=\"OnLoadParameter\" value=\"${onLoad}\" />\n</c:if>\n\nMy second tag ('testtag2') use the first one:\n\n<%@ tag %>\n<%@ attribute name=\"name\" %>\n<%@ taglib prefix=\"widget\" tagdir=\"/WEB-INF/tags/widgets\" %>\n\n<widget:testtag onLoad=\"{Script:'jsFunction(\\\\\\'${name}\\\\\\')'}\" />\n\n\nIn a JSP, I use the second tag:\n\n...\n<%@ taglib prefix=\"widget\" tagdir=\"/WEB-INF/tags/widgets\" %>\n...\n<widget:testtag2 name=\"toto\" />\n...\n\n\nWith tomcat 5.5.25, I have the following result:\n<input type=\"hidden\" name=\"OnLoadParameter\" value=\"{Script:'jsFunction(\\'toto\\')'}\" />\n\nAnd with tomcat 6.0.16:\n<input type=\"hidden\" name=\"OnLoadParameter\" value=\"{Script:'jsFunction('toto')'}\" />\n\nIt seems that the attribute is evaluate once more on tomcat 6 than on tomcat 5.",
    "created": "2008-07-22 01:37 UTC",
    "fixes": [
      "b6803c9"
    ]
  },
  {
    "id": "BUG-42727",
    "summary": "CoyoteReader readLine returns null for some post request bodies that are a multiple of MAX_LINE_LENGTH in size",
    "description": "i have a webapp running on jboss-4.0.5.GA/apache-tomcat-5.5.20 that reads in \nthe http post request body and processes it.\n\ni noticed that for request bodies that didn't contain line separators and that \nhad sizes that were exact multiples of \norg.apache.catalina.connector.CoyoteReader.MAX_LINE_LENGTH (4096), i was \nreceiving null when calling org.apache.catalina.connector.CoyoteReader.readLine\n().\n\ni believe that the problem is at line 155 in \norg.apache.catalina.connector.CoyoteReader, where on the last iteration through \nthe loop, \"pos\" does equal zero and null is returned even though data has been \naggregated.\n\nhere's a command to run in cygwin to easily reproduce the problem:\nfor requestSize in 4095 4096 4097 8191 8192 8193; do dd if=/dev/zero bs=1c \ncount=$requestSize | tr '\\000' 'A' | curl --data-binary @- \nhttp://localhost:8080/DebugJboss/DebugServlet > $requestSize.txt; done;\n\noutput from directory listing (size filename):\n4095 4095.txt\n   0 4096.txt\n4097 4097.txt\n8191 8191.txt\n   0 8192.txt\n8193 8193.txt\n\nhere's the bulk of the servlet code i used to reproduce the problem:\npublic class DebugServlet extends HttpServlet {\n\tprotected void doPost(HttpServletRequest arg0, HttpServletResponse arg1)\n\t\t\tthrows ServletException, IOException {\n\t\tBufferedReader br = arg0.getReader();\n\t\tWriter writer = arg1.getWriter();\n\t\tString line = null;\n\t\twhile ((line = br.readLine()) != null) {\n\t\t\twriter.write(line);\n\t\t}\n\t\twriter.close();\n\t\tbr.close();\n\t}\n}\n\nit appears that a workaround is to wrap the requests's input stream instead:\nBufferedReader br = new BufferedReader(new InputStreamReader(arg0.getInputStream\n()));",
    "created": "2007-06-23 06:29 UTC",
    "fixes": [
      "92f847d"
    ]
  },
  {
    "id": "BUG-45323",
    "summary": "Documentation doesn't specify that each context.xml may only contain one <Context/> element",
    "description": "The documentation for configuring contexts (http://tomcat.apache.org/tomcat-5.5-doc/config/context.html) states that \"You may define as many Context elements as you wish.\" However, it doesn't say that each context has to be defined in a different file.\n\nThis is especially confusing as putting more that one <Context/> element in a single context.xml file will give the error message \"SEVERE: Parse error in context.xml\" for each webapp with the exception message \" The markup in the document following the root element must be well-formed.\" This indicates that the problem is with the XML syntax instead of the semantics of context definitions.",
    "created": "2008-07-01 23:05 UTC",
    "fixes": [
      "5e20980"
    ]
  },
  {
    "id": "BUG-45317",
    "summary": "DeltaManager always reports default timeout value for receiving session state on startup",
    "description": "Hi there,\n\nIf I override the state transfer timeout:\n          <Manager className=\"org.apache.catalina.ha.session.DeltaManager\"\n                   stateTransferTimeout=\"10\"\n                   expireSessionsOnShutdown=\"false\"\n                   notifyListenersOnReplication=\"true\"/>\n\nDeltaManager continues to log the default timeout value (ie: \"This operation will timeout if no session state has been received within 60 seconds.\"):\n\n2008-07-01 14:31:30,419 WARN [org.apache.catalina.ha.session.DeltaManager] - Manager [localhost#/manager], requesting session state from org.apache.catalina.tribes.membership.MemberImpl[tcp://{10, -64, 104, -55}:15000,{10, -64, 104, -55},15000, alive=18586,id={-62 91 -70 -63 -111 50 70 -33 -104 41 -48 -32 91 34 -83 -55 }, payload={}, command={}, domain={}, ]. This operation will timeout if no session state has been received within 60 seconds. \n2008-07-01 14:31:35,310 WARN [org.apache.catalina.ha.ClusterListener] - Context manager doesn't exist:localhost#/host-manager \n\nBut it actually uses the correct timeout value (ie: \"timing out after 10,100 ms\"):\n\n2008-07-01 14:31:40,518 ERROR [org.apache.catalina.ha.session.DeltaManager] - Manager [localhost#/manager]: No session state send at 01/07/08 14:31 received, timing out after 10,100 ms. \n\nThis is only an incorrect message, but it is quite annoying especially coupled with the fact that the above configuration is only documented for tomcat 5 (where syntax is subtly different).",
    "created": "2008-07-01 07:50 UTC",
    "fixes": [
      "36bb5d9"
    ]
  },
  {
    "id": "BUG-45279",
    "summary": "McastServiceImpl leaks sockets.",
    "description": "McastServiceImpl does not close its socket in stop() as it claims. It merely calls leaveGroup(), which is sufficient to stop receiving messages, but does not close the socket. \n\nThis causes a file descriptor leak each time the service is stopped.\n\nadd;\n\nsocket.close();\n\nafter leaveGroup();",
    "created": "2008-06-25 12:21 UTC",
    "fixes": [
      "a2a7714"
    ]
  },
  {
    "id": "BUG-45195",
    "summary": "Possible regression issue with HttpSession.getAtttribute()",
    "description": "We just upgraded from Tomcat 5.0.x to 5.5.26.  In Tomcat 5.0.x, the following code returned NULL to obj:\n\nHttpSession session = request.getSession(true);\nObject obj = session.getAttribute(null);\n\nIn Tomcat 5.5.26, that same code raises this exception:\n\njava.lang.NullPointerException\njava.util.Hashtable.get(Unknown Source)\norg.apache.catalina.session.StandardSession.getAttribute(StandardSession.java:1024) org.apache.catalina.session.StandardSessionFacade.getAttribute(StandardSessionFacade.java:110) NewServlet.processRequest(NewServlet.java:29) NewServlet.doGet(NewServlet.java:52) javax.servlet.http.HttpServlet.service(HttpServlet.java:690) javax.servlet.http.HttpServlet.service(HttpServlet.java:803)\n\nI know how to code around it, but doesn't this qualify as a bug, at least for regression purposes?\n\nFYI: I'm using JDK 5.",
    "created": "2008-06-12 11:59 UTC",
    "fixes": [
      "cfd911b",
      "9b7c3a1"
    ]
  },
  {
    "id": "BUG-43117",
    "summary": "Dangerousness of workDir setting on Context",
    "description": "Hi, I'd like to point out the dangerousness of workDir setting on Context.\n\nIf workDir is an empty string, i.e. workDir=AA, then workDir will be set as\nCATALINA_HOME.\nTherefore if application will be reloaded, then the files in CATALINA_HOME will\nbe deleted.\n\nI know this problem is caused by wrong configuration, but it is too dangerous,\nanyway.\n\nI propose a patch.\n\nIndex: /trunk/java/org/apache/catalina/core/StandardContext.java\n===================================================================\n--- /trunk/java/org/apache/catalina/core/StandardContext.java\t(revision 565643)\n+++ /trunk/java/org/apache/catalina/core/StandardContext.java\t(working copy)\n@@ -5006,7 +5006,7 @@\n \n         // Acquire (or calculate) the work directory path\n         String workDir = getWorkDir();\n-        if (workDir == null) {\n+        if (workDir == null || workDir.length() == 0) {\n \n             // Retrieve our parent (normally a host) name\n             String hostName = null;",
    "created": "2007-08-14 01:09 UTC",
    "fixes": [
      "5ec5681"
    ]
  },
  {
    "id": "BUG-43470",
    "summary": "ClassCastException at org.apache.catalina.deploy.NamingResources",
    "description": "NamingResources reads\n\n    public void removeLocalEjb(String name) {\n\n        entries.remove(name);\n\n        ContextLocalEjb localEjb = null;\n        synchronized (localEjbs) {\n            localEjb = (ContextLocalEjb) ejbs.remove(name);\n        }\n        if (localEjb != null) {\n            support.firePropertyChange(\"localEjb\", localEjb, null);\n            localEjb.setNamingResources(null);\n        }\n\n    }\n\nif should be \n\n    public void removeLocalEjb(String name) {\n\n        entries.remove(name);\n\n        ContextLocalEjb localEjb = null;\n        synchronized (localEjbs) {\n            localEjb = (ContextLocalEjb) localEjbs.remove(name); // The error\nwas in this line\n        }\n        if (localEjb != null) {\n            support.firePropertyChange(\"localEjb\", localEjb, null);\n            localEjb.setNamingResources(null);\n        }\n\n    }\n\nRegards,\n  lg",
    "created": "2007-09-24 19:41 UTC",
    "fixes": [
      "fd05f6f"
    ]
  },
  {
    "id": "BUG-31257",
    "summary": "java.endorsed.dirs is not used when JSP compilation is forked",
    "description": "When the JSP compiler forks a javac process, it should check to see what the \ncurrently endorsed directories are (check the system \nproperty \"java.endorsed.dirs\" - otherwise, classes end up missing and JSP \npages do not properly compile.  We experienced a problem when we explicitly \nset the java.endorsed.dirs property on the command line, and the JSP compiler \ndid not use it when javac was forked.\n\nI have patched org.apache.jasper.compiler.Compiler to support this:\n*** src.original\\jakarta-tomcat-jasper\\jasper2\n\\src\\share\\org\\apache\\jasper\\compiler\\Compiler.java       Tue Jun 15 17:30:35 \n2004\n--- src\\org\\apache\\jasper\\compiler\\Compiler.java        Thu Sep 16 00:05:14 \n2004\n\n***************\n*** 349,358 ****\n--- 349,369 ----\n              extdirs.setPath(exts);\n              javac.setExtdirs(extdirs);\n              info.append(\"    extension dir=\" + exts + \"\\n\");\n          }\n\n+         // Add endorsed directories\n+         String endorsed = System.getProperty(\"java.endorsed.dirs\");\n+         if(endorsed != null) {\n+             Javac.ImplementationSpecificArgument endorsedArg = \njavac.createCompilerArg();\n+             endorsedArg.setLine(\"-J-Djava.endorsed.dirs=\"+endorsed);\n+             info.append(\"    endorsed dir=\" + endorsed + \"\\n\");\n+         }\n+         else {\n+             info.append(\"    no endorsed dirs specified\\n\");\n+         }\n+\n          // Configure the compiler object\n          javac.setEncoding(javaEncoding);\n          javac.setClasspath(path);\n          javac.setDebug(ctxt.getOptions().getClassDebugInfo());\n\ntrue, i should probably check ctxt.getOptions().getFork() in the if() as well, \nbut since i always fork it doesn't matter to me.",
    "created": "2004-09-16 05:10 UTC",
    "fixes": [
      "0ea3e15"
    ]
  },
  {
    "id": "BUG-29936",
    "summary": "XML parser loading problems by container",
    "description": "I'm trying to use JSTL 1.1 with this version of tomcat and have both saxon and \ncrimson in my web-app.\n\nIf we have crimson and saxon in our webapp lib then tomcat tries to use crimson \nas the xml parser when reading the web.xml and compiling the jsp and we get the \nprefix error:\n\norg.apache.jasper.JasperException: <h3>Validation error messages from \nTagLibraryValidator for c</h3><p>null: java.lang.IllegalStateException: can't \ndeclare any more prefixes in this context</p><h3>Validation error messages from \nTagLibraryValidator for fmt</h3><p>null: java.lang.IllegalStateException: can't \ndeclare any more prefixes in this context</p>\n\nIf we remove crimson, tomcat uses saxon (aelfred parser) and this fails on \nreading the web.xml (javax.xml.parsers.ParserConfigurationException: AElfred \nparser is namespace-aware)\n\nIf we remove saxon and crimson then we are okay (defaults to xerces in the \ntomcat endorsed directory?)\n\nIt seems to me that tomcat is using the parser in my web-app to read the \nweb.xml rather than using xerces from the endorsed directory.  \n\nThe same web-app runs without problems in version 5.0.16.  \n\nTomcat seems to be using the service provider mechanism in 5.0.25 as I have \nproperty files in C:\\Java\\jakarta-tomcat-5.0.25\n\\work\\Catalina\\localhost\\diabetes\\loader\\META-INF\\services (can't find any \ndocuments on this).\n\nIf I'm using more than one parser won't this cause problems as tomcat is \nsetting only one parser and xslt processor here?\n\nAny comments are gratefully received.\n\nThanks,\nPeter Neville",
    "created": "2004-07-06 15:18 UTC",
    "fixes": [
      "06c23d8"
    ]
  },
  {
    "id": "BUG-43656",
    "summary": "ELSupport.coerceToType won't handle null for java.lang.Number",
    "description": "If ELSupport.coerceToType is called with an BigDecimal instance as the first Parameter 'obj' and \nBigDecimal.class as type it should return the inputted value.\n\nInstead the BigDecimal is converted into a double and back into a BigDecimal which leads to a diffenent \nvalue. This happens in Line 228:\n\n        if (BigInteger.class.equals(type)) {\n            if (number instanceof BigDecimal) {\n                return ((BigDecimal) number).toBigInteger();\n            }\n            return BigInteger.valueOf(number.longValue()); // This leads to a different value.\n        }\n\nExample: Run the Method with new BigDecimal(\"0.19\"), BigDecimal.class as parameters.\nThis should result in a BigDecimal with value 0.19. Instead i got \n0.190000000000000002220446049250313080847263336181640625.\n\n The easiest solution is to compare the class of the object to coerce with the target class and return the \ninputted value if the are equal in ELSupport.coerceToType Method:\n\npublic final static Object coerceToType(final Object obj, final Class type) throws \nIllegalArgumentException {\n\t\tif (type == null || Object.class.equals(type) || type.equals(obj.getClass())) {\n\t\t\treturn obj;\n\t\t}\n...",
    "created": "2007-10-18 18:02 UTC",
    "fixes": [
      "52e4790",
      "56bee0d",
      "d7e6345"
    ]
  },
  {
    "id": "BUG-43683",
    "summary": "Accessing Servlet while Reloading context gives 404 error",
    "description": "If a servlet has finished it's init(ServletConfig), and is now ready to handle\nrequests, if you tell the tomcat manager to reload the context containing that\nservlet (EG: w3m http://localhost:8080/manager/reload?path=/ServletRestartTest),\nand you access that servlet via GET or POST (EG: w3m\nhttp://localhost:8080/ServletRestartTest/ServletRestartTest) while the destroy()\nmethod on the servlet is still executing, the GET or POST request will fail with\na 404 error after the destroy() method has been completed.  This is always\nreproducible with my attached test case.  I believe this may be the root cause\nof the issue described in #42518 which is described as an \"Intermittent 404\". \nWith this test case, it is always reproducible, and not intermittent.",
    "created": "2007-10-23 09:43 UTC",
    "fixes": [
      "c6b57c6"
    ]
  },
  {
    "id": "BUG-44391",
    "summary": "SSI handling of escaped characters broken",
    "description": "In org.apache.catalina.ssi.SSIProcessor the method parseParamNames is broken. If\nI have a SSI directive like <!--#set var=\"test\" value=\"blubb\\\"\\\"\" --> the method\ndetects three parameters instead of two. This is because there are two\nconsecutive escaped characters. Although the first one \\\" is detected correctly\nthe next one isn't because the flag escaped is still set to true, although this\ncharacter isn't escaped anymore.\n\nYou have to replace\n\nboolean escaped = false;\nfor (; bIdx < cmd.length() && quotes != 2; bIdx++) {\n  char c = cmd.charAt(bIdx);\n  // Need to skip escaped characters\n  if (c == '\\\\' && !escaped) {\n    escaped = true;\n    bIdx++;\n    continue;\n  }\n  escaped = false;\n  if (c == '\"') quotes++;\n}\n\nby \n\nfor (; bIdx < cmd.length() && quotes != 2; bIdx++) {\n  char c = cmd.charAt(bIdx);\n  // Need to skip escaped characters\n  if (c == '\\\\') {\n    bIdx++;\n    continue;\n  }\n  if (c == '\"') quotes++;\n}\n\nJust removing the flag escaped is sufficient, because you don't have to remember\nwhether the last character was escaped and that should have no influence to\nconsecutive characters.\n\nThe bug still exists in the HEAD revision of the repository.",
    "created": "2008-02-11 04:37 UTC",
    "fixes": [
      "df75937"
    ]
  },
  {
    "id": "BUG-44494",
    "summary": "Requests greater than 8k being truncated.",
    "description": "After updating to Tomcat 5.5.26 from Tomcat 5.5.23 we appear to be having trouble with requests, that are greater than 8k, being truncated with the CoyoteRequest.getReader() method.\n\nThe following steps caused this issue to appear:\n1. I constructed a post request from a jsp page which exceeded 8k in size.\n2. In the corresponding servlet I call request.getReader() and pipe the returned BufferedReader into a string.\n3. Inspection of the string reveals that the content is  being truncated after 8k.\n4. If I replace the request.getReader() method call with request.getInputStream() no truncation occurs. Also, after reverting back to Tomcat 5.5.23 and using the request.getReader() method no truncation occurs.",
    "created": "2008-02-26 19:47 UTC",
    "fixes": [
      "d7a2eed",
      "7bf4082",
      "0c66ed7"
    ]
  },
  {
    "id": "BUG-44392",
    "summary": "HTML entities not resolved in SSI filter",
    "description": "HTML entities which are contained in an SSI set directive aren't resolved by the\nSSI filter (in contrary to what is done by mod_include of Apaches HTTP).\n\nmod_include resolves all HTML entities in most of the attribute values of ssi\ndirectives. It also resolves \\\" to \" and \\$ to $.\n\nThe ssi filter of tomcat resolves all escaped character which are escaped with a\nbackslash, but no HTML entities at all.\n\nApart from that, giving encoding \"entity\" should be different from giving\nencoding=\"none\" to the SSI echo directive. One should replace all invalid HTML\ncharacters by valid HTML entities and the other one should do nothing.\n\nThe encoding is especially important if you wan't to store a HTML-Comment within\na SSI variable.\n\nIf I want to store a variable test with the value \"<!-- testvalue \"x\" -->\"\n\n\n<!--#set var=\"test\" value=\"<!-- testvalue \"x\" -->\"-->\n\nfor mod_include you must write:\n\n<!--#set var=\"test\" value=\"<!&#45;&#45; testvalue \\\"x\\\" &#45;&#45;>\" -->\n\nfor Tomcats SSI you must write:\n\n<!--#set var=\"test\" value=\"<!\\-\\- testvalue \\\"x\\\" \\-\\->\" -->\n\nAnd there should be a difference whether I output this variable with\n<!--#echo var=\"test\" encoding=\"none\" -->  \nwhich should lead to <!-- testvalue \"x\" -->, or\n<!--#echo var=\"test\" encoding=\"entity\" -->\nwhich should lead to &lt;!-- testvalue &quot;x&quot; --&gt;",
    "created": "2008-02-11 05:37 UTC",
    "fixes": [
      "75fbd91"
    ]
  },
  {
    "id": "BUG-44428",
    "summary": "FunctionMapperImpl.Function throws a NPE in certain circumstances",
    "description": "In FunctionMapperImpl.Function it is possible for writeExternal to fail if the\nclass has just been de-serialised and is then serialised again.\n\nIf you look at writeExternal:\n\n   public void writeExternal(ObjectOutput out) throws IOException {\n      out.writeUTF((this.prefix != null) ? this.prefix : \"\");\n      out.writeUTF(this.localName);\n      out.writeUTF(this.m.getDeclaringClass().getName());\n      out.writeUTF(this.m.getName());\n      out.writeObject(ReflectionUtil.toTypeNameArray(\n         this.m.getParameterTypes()));\n   }\n\nyou can see that it externalises the function to be invoked by using the\nreference to the Method itself.\n\nIf you look at readExternal however:\n\n   public void readExternal(ObjectInput in) throws IOException,\n         ClassNotFoundException {\n            \n      this.prefix = in.readUTF();\n      if (\"\".equals(this.prefix)) this.prefix = null;\n      this.localName = in.readUTF();\n      this.owner = in.readUTF();\n      this.name = in.readUTF();\n      this.types = (String[]) in.readObject();\n   }\n\nYou can see that it doesn't restore the Method after deserialisation. The method\nis restored if it is accessed, however if it's not and then serialisation is\nperformed writeExternal will throw a NPE (as m is still null).\n\nThe fix is to either get the method to be reconstructed as soon as\ndeserialisation completes - or perhaps to be a bit more efficient, in\nwriteExternal change it such that if m is null it externalises using the\ncomponents of the method:\n\n   public void writeExternal(ObjectOutput out) throws IOException {\n      out.writeUTF((this.prefix != null) ? this.prefix : \"\");\n      out.writeUTF(this.localName);\n      if (m == null) {\n         out.writeUTF(this.owner);\n         out.writeUTF(this.name);\n         out.writeObject(this.types);\n      } else if (this.m != null) {\n         out.writeUTF(this.m.getDeclaringClass().getName());\n         out.writeUTF(this.m.getName());\n         out.writeObject(ReflectionUtil.toTypeNameArray(\n            this.m.getParameterTypes()));\n      }\n   }",
    "created": "2008-02-15 02:36 UTC",
    "fixes": [
      "0035fd4"
    ]
  },
  {
    "id": "BUG-44785",
    "summary": "Documentation f the MaxThread default value for AJP connector",
    "description": "Hello,\n\nThe maxThread value of the AJP connector is 200 by default.\nBut the documentation indicates a value of 40 which is wrong\n\nAJP connector uses the org.apache.tomcat.util.threads the set up this value.\n\n\n-------------\n\nmaxThreads\t\n\nThe maximum number of request processing threads to be created by this Connector, which therefore determines the maximum number of simultaneous requests that can be handled. If not specified, this attribute is set to 40. If an executor is associated with this connector, this attribute is ignored as the connector will execute tasks using the executor rather than an internal thread pool.\n\n-------------\n\nThanks,\nLionel",
    "created": "2008-04-09 07:08 UTC",
    "fixes": [
      "c3e2a53"
    ]
  },
  {
    "id": "BUG-44715",
    "summary": "Missing attribute in the AJP Connector (jk) configuration Doc.",
    "description": "Hi,\n\nIn the mod_jk documentation:\n   http://tomcat.apache.org/connectors-doc/reference/workers.html\n\nI see correctly the description for the Avdanced Worker Directive \"secret\":\n\n\"You can set a secret keyword on the Tomcat AJP Connector. Then only requests from workers with the same secret keyword will be accepted. Use request.useSecret=\"true\" and request.secret=\"secret key word\" in your Tomcat AJP Connector configuration. \n\nIf you set a secret on a load balancer, all its members will inherit this secret. \n\nThis feature has been added in jk 1.2.12.\"\n\nHowever, I do not see anymore these request. directives explained in the \"Apache Tomcat Configuration Reference\" > \"The AJP Connector\"\n   http://tomcat.apache.org/tomcat-6.0-doc/config/ajp.html\n   http://tomcat.apache.org/tomcat-5.5-doc/config/ajp.html\n\nNote: that the syntax changed from Tomcat 4.1 to Tomcat 5.5 (I do not know about 5.0).\n\norg.apache.ajp.tomcat4.Ajp13Connector was only one attribute\n   secret=\"secret_word\"\n\nIt might be a good idea to add a line for these 2 attributes even if just simply refer to the jk documentation.\n\nThanks - Fred",
    "created": "2008-03-31 12:49 UTC",
    "fixes": [
      "0351fff",
      "9b6fa18"
    ]
  },
  {
    "id": "BUG-44673",
    "summary": "ServletInputStream still readable even when closed",
    "description": "Created attachment 21716 [details]\nEcho \"OK\" if the behaviour is correct, \"KO\" otherwise\n\nInputBuffer does not check \"closed\" in any read, mark, skip operation, thus bytes can be read even when the application has requested to close the inputstream. This causes programming problems to go unnoticed. See the attached test case.",
    "created": "2008-03-25 15:32 UTC",
    "fixes": [
      "ca41a27"
    ]
  },
  {
    "id": "BUG-44541",
    "summary": "Document packetSize attribute",
    "description": "The packetSize attribute of the AJP connector has been backported from Tomcat 6 into 5.5.21 but it is not documented on http://tomcat.apache.org/tomcat-5.5-doc/config/ajp.html. Neither is it documented for Tomcat 6 (see http://tomcat.apache.org/tomcat-6.0-doc/config/ajp.html).",
    "created": "2008-03-05 08:21 UTC",
    "fixes": [
      "e5d495e"
    ]
  },
  {
    "id": "BUG-44611",
    "summary": "DirContextURLConnection Header Bugs",
    "description": "Created attachment 21673 [details]\nFix DirContextURLConnection bugs.\n\nDirContextURLConnection has bugs:\n1) Does not implement the getHeaderFields() method\n2) It's implementation of getHeaderField(String name) is case sensitive.\n3) It returns an empty string \"\", rather than null, for header values which don't exist.\n\nThis means that there is no way to know what header information Tomcat exposes for a file, and calling getHeaderField(\"Content-Type\") will return \"\", even though there is an attribute stored as \"content-type\".\n\nThe attached patch should fix these bugs.",
    "created": "2008-03-15 21:32 UTC",
    "fixes": [
      "024afb6"
    ]
  },
  {
    "id": "BUG-44633",
    "summary": "say which jar/class is wrong when throwing UnsupportedClassVersionError",
    "description": "after happily using tomcat 6/java6, we had to move back to tomcat 5/java5. \n\nUnfortunately, it seems that one jar or .class files not yet compiled under java5 got there too.\n\nSuggestion:\n\nin  at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:1815)\n\ncatch UnsupportedClassVersionError and re-throw it after adding hints with which class sought/jar file it happens!\n\njava.lang.reflect.InvocationTargetException\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:294)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:432)\nCaused by: java.lang.UnsupportedClassVersionError: Bad version number in .class file\n        at java.lang.ClassLoader.defineClass1(Native Method)\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)\n        at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:1815)\n        at org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:869)\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1322)\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1201)\n        at org.apache.catalina.core.StandardWrapper$1.run(StandardWrapper.java:1017)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1013)\n        at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:932)\n        at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:3951)\n        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4225)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1013)\n        at org.apache.catalina.core.StandardHost.start(StandardHost.java:718)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1013)\n        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)\n        at org.apache.catalina.core.StandardService.start(StandardService.java:450)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:709)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:551)\n        ... 6 more",
    "created": "2008-03-19 08:25 UTC",
    "fixes": [
      "326b621",
      "479d941"
    ]
  },
  {
    "id": "BUG-44558",
    "summary": "cite attempted address when throwing \"Cannot assign requested address\"",
    "description": "SEVERE: Error starting endpoint\njava.net.BindException: Cannot assign requested address:2217\n        at org.apache.tomcat.util.net.JIoEndpoint.init(JIoEndpoint.java:501)\n        at org.apache.tomcat.util.net.JIoEndpoint.start(JIoEndpoint.java:515)\n        at org.apache.coyote.http11.Http11Protocol.start(Http11Protocol.java:203)\n        at org.apache.catalina.connector.Connector.start(Connector.java:1131)\n        at org.apache.catalina.core.StandardService.start(StandardService.java:531)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:578)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\nsaying which address a bind was attempted for would accelerate the error resolution quite a bit!",
    "created": "2008-03-07 07:41 UTC",
    "fixes": [
      "7bd915c"
    ]
  },
  {
    "id": "BUG-44562",
    "summary": "HEAD requests cannot go through request dispatch include.",
    "description": "See https://issues.apache.org/jira/browse/GERONIMO-3896\n\nbriefly...\n\ntomcat complains:\nServlet.service() for servlet SimpleDispatchServlet threw exception\njavax.servlet.ServletException: Original SevletResponse or wrapped original ServletResponse not passed to\nRequestDispatcher in violation of SRV.8.2 and SRV.14.2.5.1\n        at org.apache.catalina.core.ApplicationDispatcher.checkSameObjects(ApplicationDispatcher.java:985)\n...\n\nThe relevant code seems to be in javax.servlet.http.HttpServlet\n\n    protected void doHead(HttpServletRequest req, HttpServletResponse resp)\n\tthrows ServletException, IOException\n    {\n\tNoBodyResponse response = new NoBodyResponse(resp);\n\t\n\tdoGet(req, response);\n\tresponse.setContentLength();\n    }\n\n\nwhich is fine but\n\nclass NoBodyResponse implements HttpServletResponse {\n\n\nrather than\nclass NoBodyResponse extends HttpServletResponseWrapper {\n\nThe patch attached to the jira issue makes this change and adapts NoBodyResponse to be a subclass of HttpServletResponseWrapper and the user reports that it fixes the problem.   I don't know if there would be formatting issues applying the patch to tomcat's copy of the spec classes.",
    "created": "2008-03-07 13:19 UTC",
    "fixes": [
      "288b2ae"
    ]
  },
  {
    "id": "BUG-43878",
    "summary": "Tag-file classes get loaded for each JSP -> perm gen space problem",
    "description": "If you use the same tag (defined in a JSP 2.0 tag file) on two different JSPs,\nthe tag-class will get loaded from two different classloaders resulting in two\nloaded classes in the perm gen space. You can trace this behaviour when starting\nthe VM with the arguments \"-XX:+TraceClassLoading -XX:+TraceClassUnloading\". The\nclasses get loaded multiple times even when development/reloading is disabled.\n\nThis behaviour gets a problem if you have a huge number of JSPs (in our case\n>10.000) and a few tags used on every single JSP.\n\nI traced down the problem in the source code:\n\nFor each JSP to compile, a new instance of a JspCompilationContext is used. The\nJspCompilationContext holds a reference to a JasperLoader (a ClassLoader), which\ninitially is null (a new JasperLoader will be created when it is first used).\nThe JspCompilationContext will not only load the JSP class, but also compiles\nand loads tag-files referenced within the JSP. As the JasperLoader loads all\nclasses starting with \"org.apache.jsp\" by itself and does not delegate to it's\nparent, the tag class (which lies underneath this package) will get loaded via\nmultiple JasperLoader instances.\n\nI perfectly understand that loading each JSP via a different classloader may be\nnecessary, when reloading is enabled, but if reloading/development is disabled,\nthe same JasperLoader instance could be used. This would prevent the tag class\nto get loaded multiple times. (I.e. a previously used JasperLoader instance\ncould be passed to the JspCompilationContext, if running in production mode).\n\nBy the way I think that loading the tag file via the same classloader as the JSP\nin a reloading-enviornmane may result in some strange behaviour: If two JSPs use\nthe same tag and you change the tag as well as one JSP, you'll see the new\nversion of the tag on the reloaded JSP, but the previous version of the same tag\n(but loaded via a different class-instance) on the unchanged JSP. But to solve\nthis issue, some greater refactoring would be necessary, I think....",
    "created": "2007-11-16 01:20 UTC",
    "fixes": [
      "2c09c16",
      "84bd363"
    ]
  },
  {
    "id": "BUG-43741",
    "summary": ".tag files in a .tar recompiled for each .jsp -- extremely slow (with fix)",
    "description": "Jasper is *extremely* slow at compiling .tag files packaged in a .jar -- tens \nof seconds per JSP. One cause is that .tag files are repeatedly recompiled for \neach .jsp even though they have not changed.\n\nThe following few lines fix this.  The added code is marked between // --------\n AJB markers.  \nIt effectively turns off the timestamp checking on .jar files.\n\nThis does NOT actually introduce a bug.  There is an existing bug in that .jsp \nfiles are not \nautomatically recompiled if any .tags in .jars are changed.  So you need to \npurge work in either case.  \nA proper fix would be to check dependencies properly, at least to the .jar \nfile itself.  \nBut the current fix is *much* better that the existing behavior.\n\nThere are better solutions, but an 80% solution is better than no solution.\n\n\n// Tomcat 6.0.10 Src deployed version.\n\npublic class JspCompilationContext {...\n\n    public void compile() throws JasperException, FileNotFoundException {\n        createCompiler();\n\n        // ------------ begin AJB\n        // Hack to stop .tag files that are packaged in .jars being recompiled \nfor every single .jsp that uses them.\n        // The hack means that .tag files will not be automatically recompiled \nif they change -- you need to delete work area.\n        // But that was actually an existing bug -- .jsps are not dependent on \nthe .tag .jars so the work area needed deleting anyway.\n        // (Outstanding is to compile multiple .tags in one pass and so make \nthe process Much faster.)\n        boolean outDated;\n        if (isPackagedTagFile) outDated = ! new File(getClassFileName()).exists\n();\n        else outDated = jspCompiler.isOutDated();\n//        AjbLog.log(\"### Compiler.compile \" + jspUri + \" pkgTagFile \" + \nisPackagedTagFile + \" outDated \" + outDated + \" \" + getClassFileName());\n        if (outDated) {\n//     if (isPackagedTagFile || jspCompiler.isOutDated()) { // original code.\n//     ---------------- end AJB\n            try {\n                jspCompiler.removeGeneratedFiles();\n                jspLoader = null;\n                jspCompiler.compile();\n                jsw.setReload(true);\n                jsw.setCompilationException(null);\n            } catch (JasperException ex) {\n                // Cache compilation exception\n                jsw.setCompilationException(ex);\n                throw ex;\n            } catch (Exception ex) {\n                JasperException je = new JasperException(\n                            Localizer.getMessage(\"jsp.error.unable.compile\"),\n                            ex);\n                // Cache compilation exception\n                jsw.setCompilationException(je);\n                throw je;\n            }\n        }\n    }",
    "created": "2007-10-30 21:10 UTC",
    "fixes": [
      "551ffe0",
      "cc639cc"
    ]
  },
  {
    "id": "BUG-44282",
    "summary": "WebappClassLoader.findClass calls getClassLoader without privileges",
    "description": "When logging is in TRACE mode or lower,\norg.apache.catalina.loader.WebappClassLoader.findClass(String) calls\ngetClassLoader() without a privileged block.  With security enabled, this will\ncause a SecurityException if the RuntimePermission to getClassLoader is not granted.",
    "created": "2008-01-22 23:50 UTC",
    "fixes": [
      "948598d"
    ]
  },
  {
    "id": "BUG-44268",
    "summary": "Multiple registrations of same ServletContextListener class not possible",
    "description": "When I register the same class implementing ServletContextListener twice or more\nits' contextInitialized methods only gets called once.\n\nThe servlet specifications (2.4 and 2.5) say the conforming container has to \ncall the listeners in the same order they are registered in the deployment\ndescriptor.\nThe case that one listener class is registered twice is not mentioned\nexplicitly in the specification, though.\n\nExample:\n<listener>\n  <listener-class>test.ServletContextListener1</listener-class>\n</listener>\n<listener>\n  <listener-class>test.ServletContextListener2</listener-class>\n</listener>\n<listener>\n  <listener-class>test.ServletContextListener1</listener-class>\n</listener>\n\ntest.ServletContextListener1 and test.ServletContextListener2 get called,\nbut test.ServletContextListener1 does not get called again.\n\nApache Tomcat 5.5.25 has the same bug.",
    "created": "2008-01-18 08:42 UTC",
    "fixes": [
      "cdff09f"
    ]
  },
  {
    "id": "BUG-44223",
    "summary": "Tomcat ignores the \"javax.net.ssl.trustStoreType\" system property",
    "description": "Set up a SSL Connector with a keystore in JKS format:\n\n<Connector ... SSLEnabled=\"true\"\nkeystoreFile=\"tomcat.keystore\" keystoreType=\"JKS\">\n\nLet's say you need a custom truststore (e.g. for authenticating self-signed \nclient certificates), and that this truststore is also needed by some of your \nwebapps, not only Tomcat. The natural thing to do then is to configure this \ntruststore globally for the whole JVM, not in server.xml.\n\nLet's also assume this truststore is in a different format (e.g. PKCS#12). So \nbefore starting Tomcat, you do this:\n\nexport JAVA_OPTS=\"-Djavax.net.ssl.trustStore=trusted.keystore -\nDjavax.net.ssl.trustStoreType=PKCS12\"\n\nWell, it doesn't work. If you look at tomcat/logs/catalina.out, you will see a \nkeystore-related exception. Upon further debugging, you will discover the \nproblem is that Tomcat is trying to open the truststore as if it were in JKS \nformat, even though it is clearly specified as type PKCS12 in JAVA_OPTS above.",
    "created": "2008-01-14 04:24 UTC",
    "fixes": [
      "f9e41b8"
    ]
  },
  {
    "id": "BUG-43468",
    "summary": "HTMLManagerServlet NullPointerException listing context",
    "description": "Obtained the following NullPointerException, stack trace below\n\njava.lang.NullPointerException\n\torg.apache.catalina.manager.HTMLManagerServlet.list(HTMLManagerServlet.java:437)\n\torg.apache.catalina.manager.HTMLManagerServlet.doGet(HTMLManagerServlet.java:136)\n\nCode is:\n\nargs[11] = new Integer(context.getManager().getMaxInactiveInterval()/60);\n\nSeemingly the getManager() is returning null.",
    "created": "2007-09-24 18:46 UTC",
    "fixes": [
      "e14afee"
    ]
  },
  {
    "id": "BUG-43173",
    "summary": "Logging documentation says to put logging.properties in common/classes",
    "description": "In the java.util.logging section of the logging documentation there's the\nfollowing line:\n\n\"Example logging.properties file to be placed in common/classes:\"\n\nI think it should say:\n\"Example logging.properties contained in $CATALINA_HOME/conf:\"",
    "created": "2007-08-20 21:03 UTC",
    "fixes": [
      "f806ed1"
    ]
  },
  {
    "id": "BUG-43344",
    "summary": "Misspelling in if.jsp example",
    "description": "http://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk/webapps/examples/jsp/tagplugin/if.jsp\n\n--- if.jsp      (revision 574320)\n+++ if.jsp      (working copy)\n@@ -25,7 +25,7 @@\n     </br>\n     <a href=\"notes.html\">Plugin Introductory Notes<font <font color=\"#0000FF\"></a>\n     <br/>\n-    <a href=\"howto.html\">Brief Instructions for Wrieting Plugins<font\ncolor=\"#0000FF\"></a>\n+    <a href=\"howto.html\">Brief Instructions for Writing Plugins<font\ncolor=\"#0000FF\"></a>\n     <br/> <br/>\n     <hr>",
    "created": "2007-09-10 11:33 UTC",
    "fixes": [
      "6be0486"
    ]
  },
  {
    "id": "BUG-11117",
    "summary": "Coyote connector does not correctly deal with large PUT when using chunked transfer encoding",
    "description": "I've built a small test servlet (included below) that shows this behaviour.\n\nIf I upload data to tomcat (configured to use the HTTP/1.1 Coyote connector)\nusing a chunked transfer-encoding on a PUT, then the result (i.e. what I read\nusing the servlet's request.getInputStream() is corrupted.\n\nThis _only_ happens on large PUTs (it happens every time I tried it (about 10)\non a large PUT - I was testing with something around 700 kB, and another thing\nof about 1 MB, but does NOT always corrupt it in the same way. I did not see any\ncorruption on small files (~50 kB and smaller), though I didn't test this\nextensively.\n\nThe total length of the data read is exactly correct (712080 bytes in my first\ntest). At the first point of corruption in the file, a chunk header appears in\nthe output (\"\\r\\n1000\\r\\n\") followed by correct data from about 700 bytes later\non, then a second copy (in the correct place, I think) of the corrupt data (i.e.\ncorrect data, followed by the chunk header, followed by some data repeated, the\nsecond instance of which is in the correct place - so the first instance is\nbeing produced _instead_ of the correct data for that point in the input).\n\nTest servlet follows:\n\nimport java.io.*;\n\nimport javax.servlet.*;\nimport javax.servlet.http.*;\n\npublic class Test extends HttpServlet\n{\n\n    public void doPut(HttpServletRequest req, HttpServletResponse res)\n                throws ServletException, IOException\n    {\n        FileOutputStream fos = new FileOutputStream(\"/tmp/servlet-out\");\n\n        InputStream is = req.getInputStream();\n\n        byte buf[] = new byte[2000];\n        int ret;\n\n        while((ret = is.read(buf)) > 0) {\n            fos.write(buf, 0, ret);\n        }\n\n        fos.close();\n        is.close();\n\n        PrintWriter pw = res.getWriter();\n        pw.println(\"Done\");\n        pw.flush();\n        pw.close();\n    }\n}",
    "created": "2002-07-24 07:44 UTC",
    "fixes": [
      "1cc6641"
    ]
  },
  {
    "id": "BUG-43743",
    "summary": "Cannot jspc precompile jsps with nested .tag files",
    "description": "myjsp.jsp:  HELLO <tag1/>\ntag1.tag:  <tag2>\ntag2.tag:  WORLD\n\nCrashes (null pointer)  while trying to load tag2.class, called by  \nTagFileProcessor.loadTagFile.\n\nVery Initial analysis:-\nTagFileProcessor.loadTagFile creates wrapper, but ctxt.getTagFileJarUrl\n(tagFilePath) returns null for nested .tag.\nThus in JspCompilationContext.Compile  JspCCtx.isPackagedFile == false, so \noutDated test is wrong\nSo tag2.tag not compiled, thus class cannot be loaded.\n\nBut problem also appears if tags not packaged in a .jar, so there is more \ngoing on.\n\nWork around is to create dummy.jsp that calls the .tags in leaf first order \nso .class files are created.",
    "created": "2007-10-30 21:25 UTC",
    "fixes": [
      "98b8ba2"
    ]
  },
  {
    "id": "BUG-43839",
    "summary": "I think the implement is difference with the document in function CoyoteAdapter.postParseRequest",
    "description": "Hello,\nI think the document for context\n\"http://tomcat.apache.org/tomcat-6.0-doc/config/context.html\" describe\nthe configuration item \"cookies\" difference the implement.\nPlease think this case.\n1. In the same computer I start two tomcat, one is linsten 80, other\nlinsten 8080.\n2. The tomcat bind at 80, it set the cookies to true.\n3. The tomcat bind at 8080, it set the cookies to false. It will use the\nURL rewrite to post the jsessionid.\n4. First time I access the 80, it will return the JSESSIONID in cookie.\n5. Don't close the IE, the access with the 8080 without URL rewrite.\nWhat will happen. The tomcat linsten 8080 will use the jsession id of\n80. It very strange.\nSo I modify the source code for file.\n\"apache-tomcat-6.0.14-src\\java\\org\\apache\\catalina\\connector\\CoyoteAdapter.java\".\nChange the code at line 472 from\nparseSessionCookiesId(req, request);\nto\nif (((Context)request.getMappingData().context).getCookies())\nparseSessionCookiesId(req, request);\n\nIf I modify it in wrong way, I want to know how to resoluate the case\nthat I list previous. Please tell me why the praseSessionCookiesId don't\ncare about the configuration item \"cookies\" in \"Context\".\nThanks.\nMars Engle\n\n\n\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\npackage org.apache.catalina.connector;\n\nimport java.io.IOException;\n\nimport org.apache.catalina.CometEvent;\nimport org.apache.catalina.Context;\nimport org.apache.catalina.Globals;\nimport org.apache.catalina.Wrapper;\nimport org.apache.catalina.util.StringManager;\nimport org.apache.coyote.ActionCode;\nimport org.apache.coyote.Adapter;\nimport org.apache.juli.logging.Log;\nimport org.apache.juli.logging.LogFactory;\nimport org.apache.tomcat.util.buf.B2CConverter;\nimport org.apache.tomcat.util.buf.ByteChunk;\nimport org.apache.tomcat.util.buf.CharChunk;\nimport org.apache.tomcat.util.buf.MessageBytes;\nimport org.apache.tomcat.util.http.Cookies;\nimport org.apache.tomcat.util.http.ServerCookie;\nimport org.apache.tomcat.util.net.SocketStatus;\n\n/**\n * Implementation of a request processor which delegates the processing to a\n * Coyote processor.\n *\n * @author Craig R. McClanahan\n * @author Remy Maucherat\n * @version $Revision: 555304 $ $Date: 2007-07-11 17:28:52 +0200 (mer., 11 juil.\n2007) $\n */\n\npublic class CoyoteAdapter\n    implements Adapter \n {\n    private static Log log = LogFactory.getLog(CoyoteAdapter.class);\n\n    // -------------------------------------------------------------- Constants\n\n\n    public static final int ADAPTER_NOTES = 1;\n\n\n    protected static final boolean ALLOW_BACKSLASH = \n       \nBoolean.valueOf(System.getProperty(\"org.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH\",\n\"false\")).booleanValue();\n\n\n    // ----------------------------------------------------------- Constructors\n\n\n    /**\n     * Construct a new CoyoteProcessor associated with the specified connector.\n     *\n     * @param connector CoyoteConnector that owns this processor\n     */\n    public CoyoteAdapter(Connector connector) {\n\n        super();\n        this.connector = connector;\n\n    }\n\n\n    // ----------------------------------------------------- Instance Variables\n\n\n    /**\n     * The CoyoteConnector with which this processor is associated.\n     */\n    private Connector connector = null;\n\n\n    /**\n     * The match string for identifying a session ID parameter.\n     */\n    private static final String match =\n        \";\" + Globals.SESSION_PARAMETER_NAME + \"=\";\n\n\n    /**\n     * The string manager for this package.\n     */\n    protected StringManager sm =\n        StringManager.getManager(Constants.Package);\n\n\n    // -------------------------------------------------------- Adapter Methods\n\n    \n    /**\n     * Event method.\n     * \n     * @return false to indicate an error, expected or not\n     */\n    public boolean event(org.apache.coyote.Request req, \n            org.apache.coyote.Response res, SocketStatus status) {\n\n        Request request = (Request) req.getNote(ADAPTER_NOTES);\n        Response response = (Response) res.getNote(ADAPTER_NOTES);\n\n        if (request.getWrapper() != null) {\n            \n            boolean error = false;\n            boolean read = false;\n            try {\n                if (status == SocketStatus.OPEN) {\n                    if (response.isClosed()) {\n                        // The event has been closed asynchronously, so call end\ninstead of\n                        // read to cleanup the pipeline\n                        request.getEvent().setEventType(CometEvent.EventType.END);\n                        request.getEvent().setEventSubType(null);\n                    } else {\n                        try {\n                            // Fill the read buffer of the servlet layer\n                            if (request.read()) {\n                                read = true;\n                            }\n                        } catch (IOException e) {\n                            error = true;\n                        }\n                        if (read) {\n                           \nrequest.getEvent().setEventType(CometEvent.EventType.READ);\n                            request.getEvent().setEventSubType(null);\n                        } else if (error) {\n                           \nrequest.getEvent().setEventType(CometEvent.EventType.ERROR);\n                           \nrequest.getEvent().setEventSubType(CometEvent.EventSubType.CLIENT_DISCONNECT);\n                        } else {\n                           \nrequest.getEvent().setEventType(CometEvent.EventType.END);\n                            request.getEvent().setEventSubType(null);\n                        }\n                    }\n                } else if (status == SocketStatus.DISCONNECT) {\n                    request.getEvent().setEventType(CometEvent.EventType.ERROR);\n                   \nrequest.getEvent().setEventSubType(CometEvent.EventSubType.CLIENT_DISCONNECT);\n                    error = true;\n                } else if (status == SocketStatus.ERROR) {\n                    request.getEvent().setEventType(CometEvent.EventType.ERROR);\n                   \nrequest.getEvent().setEventSubType(CometEvent.EventSubType.IOEXCEPTION);\n                    error = true;\n                } else if (status == SocketStatus.STOP) {\n                    request.getEvent().setEventType(CometEvent.EventType.END);\n                   \nrequest.getEvent().setEventSubType(CometEvent.EventSubType.SERVER_SHUTDOWN);\n                } else if (status == SocketStatus.TIMEOUT) {\n                    if (response.isClosed()) {\n                        // The event has been closed asynchronously, so call end\ninstead of\n                        // read to cleanup the pipeline\n                        request.getEvent().setEventType(CometEvent.EventType.END);\n                        request.getEvent().setEventSubType(null);\n                    } else {\n                        request.getEvent().setEventType(CometEvent.EventType.ERROR);\n                       \nrequest.getEvent().setEventSubType(CometEvent.EventSubType.TIMEOUT);\n                    }\n                }\n\n               \nreq.getRequestProcessor().setWorkerThreadName(Thread.currentThread().getName());\n                \n                // Calling the container\n                connector.getContainer().getPipeline().getFirst().event(request,\nresponse, request.getEvent());\n\n                if (!error && !response.isClosed() &&\n(request.getAttribute(Globals.EXCEPTION_ATTR) != null)) {\n                    // An unexpected exception occurred while processing the\nevent, so\n                    // error should be called\n                    request.getEvent().setEventType(CometEvent.EventType.ERROR);\n                    request.getEvent().setEventSubType(null);\n                    error = true;\n                   \nconnector.getContainer().getPipeline().getFirst().event(request, response,\nrequest.getEvent());\n                }\n                if (response.isClosed() || !request.isComet()) {\n                    res.action(ActionCode.ACTION_COMET_END, null);\n                } else if (!error && read && request.getAvailable()) {\n                    // If this was a read and not all bytes have been read, or\nif no data\n                    // was read from the connector, then it is an error\n                    request.getEvent().setEventType(CometEvent.EventType.ERROR);\n                   \nrequest.getEvent().setEventSubType(CometEvent.EventSubType.IOEXCEPTION);\n                    error = true;\n                   \nconnector.getContainer().getPipeline().getFirst().event(request, response,\nrequest.getEvent());\n                }\n                return (!error);\n            } catch (Throwable t) {\n                if (!(t instanceof IOException)) {\n                    log.error(sm.getString(\"coyoteAdapter.service\"), t);\n                }\n                error = true;\n                return false;\n            } finally {\n                req.getRequestProcessor().setWorkerThreadName(null);\n                // Recycle the wrapper request and response\n                if (error || response.isClosed() || !request.isComet()) {\n                    request.recycle();\n                    request.setFilterChain(null);\n                    response.recycle();\n                }\n            }\n            \n        } else {\n            return false;\n        }\n    }\n    \n\n    /**\n     * Service method.\n     */\n    public void service(org.apache.coyote.Request req, \n    \t                org.apache.coyote.Response res)\n        throws Exception {\n\n        Request request = (Request) req.getNote(ADAPTER_NOTES);\n        Response response = (Response) res.getNote(ADAPTER_NOTES);\n\n        if (request == null) {\n\n            // Create objects\n            request = (Request) connector.createRequest();\n            request.setCoyoteRequest(req);\n            response = (Response) connector.createResponse();\n            response.setCoyoteResponse(res);\n\n            // Link objects\n            request.setResponse(response);\n            response.setRequest(request);\n\n            // Set as notes\n            req.setNote(ADAPTER_NOTES, request);\n            res.setNote(ADAPTER_NOTES, response);\n\n            // Set query string encoding\n            req.getParameters().setQueryStringEncoding\n                (connector.getURIEncoding());\n\n        }\n\n        if (connector.getXpoweredBy()) {\n            response.addHeader(\"X-Powered-By\", \"Servlet/2.5\");\n        }\n\n        boolean comet = false;\n        \n        try {\n\n            // Parse and set Catalina and configuration specific \n            // request parameters\n           \nreq.getRequestProcessor().setWorkerThreadName(Thread.currentThread().getName());\n            if (postParseRequest(req, request, res, response)) {\n                // Calling the container\n               \nconnector.getContainer().getPipeline().getFirst().invoke(request, response);\n\n                if (request.isComet()) {\n                    if (!response.isClosed() && !response.isError()) {\n                        if (request.getAvailable()) {\n                            // Invoke a read event right away if there are\navailable bytes\n                            if (event(req, res, SocketStatus.OPEN)) {\n                                comet = true;\n                                res.action(ActionCode.ACTION_COMET_BEGIN, null);\n                            }\n                        } else {\n                            comet = true;\n                            res.action(ActionCode.ACTION_COMET_BEGIN, null);\n                        }\n                    } else {\n                        // Clear the filter chain, as otherwise it will not be\nreset elsewhere\n                        // since this is a Comet request\n                        request.setFilterChain(null);\n                    }\n                }\n\n            }\n\n            if (!comet) {\n                response.finishResponse();\n                req.action(ActionCode.ACTION_POST_REQUEST , null);\n            }\n\n        } catch (IOException e) {\n            ;\n        } catch (Throwable t) {\n            log.error(sm.getString(\"coyoteAdapter.service\"), t);\n        } finally {\n            req.getRequestProcessor().setWorkerThreadName(null);\n            // Recycle the wrapper request and response\n            if (!comet) {\n                request.recycle();\n                response.recycle();\n            } else {\n                // Clear converters so that the minimum amount of memory \n                // is used by this processor\n                request.clearEncoders();\n                response.clearEncoders();\n            }\n        }\n\n    }\n\n\n    // ------------------------------------------------------ Protected Methods\n\n\n    /**\n     * Parse additional request parameters.\n     */\n    protected boolean postParseRequest(org.apache.coyote.Request req, \n                                       Request request,\n    \t\t                       org.apache.coyote.Response res, \n                                       Response response)\n            throws Exception {\n\n        // XXX the processor needs to set a correct scheme and port prior to\nthis point, \n        // in ajp13 protocols dont make sense to get the port from the connector..\n        // XXX the processor may have set a correct scheme and port prior to\nthis point, \n        // in ajp13 protocols dont make sense to get the port from the connector...\n        // otherwise, use connector configuration\n        if (! req.scheme().isNull()) {\n            // use processor specified scheme to determine secure state\n            request.setSecure(req.scheme().equals(\"https\"));\n        } else {\n            // use connector scheme and secure configuration, (defaults to\n            // \"http\" and false respectively)\n            req.scheme().setString(connector.getScheme());\n            request.setSecure(connector.getSecure());\n        }\n\n        // FIXME: the code below doesnt belongs to here, \n        // this is only have sense \n        // in Http11, not in ajp13..\n        // At this point the Host header has been processed.\n        // Override if the proxyPort/proxyHost are set \n        String proxyName = connector.getProxyName();\n        int proxyPort = connector.getProxyPort();\n        if (proxyPort != 0) {\n            req.setServerPort(proxyPort);\n        }\n        if (proxyName != null) {\n            req.serverName().setString(proxyName);\n        }\n\n        // Parse session Id\n        parseSessionId(req, request);\n\n        // URI decoding\n        MessageBytes decodedURI = req.decodedURI();\n        decodedURI.duplicate(req.requestURI());\n\n        if (decodedURI.getType() == MessageBytes.T_BYTES) {\n            // Remove any path parameters\n            ByteChunk uriBB = decodedURI.getByteChunk();\n            int semicolon = uriBB.indexOf(';', 0);\n            if (semicolon > 0) {\n                decodedURI.setBytes\n                    (uriBB.getBuffer(), uriBB.getStart(), semicolon);\n            }\n            // %xx decoding of the URL\n            try {\n                req.getURLDecoder().convert(decodedURI, false);\n            } catch (IOException ioe) {\n                res.setStatus(400);\n                res.setMessage(\"Invalid URI: \" + ioe.getMessage());\n                return false;\n            }\n            // Normalization\n            if (!normalize(req.decodedURI())) {\n                res.setStatus(400);\n                res.setMessage(\"Invalid URI\");\n                return false;\n            }\n            // Character decoding\n            convertURI(decodedURI, request);\n        } else {\n            // The URL is chars or String, and has been sent using an in-memory\n            // protocol handler, we have to assume the URL has been properly\n            // decoded already\n            decodedURI.toChars();\n            // Remove any path parameters\n            CharChunk uriCC = decodedURI.getCharChunk();\n            int semicolon = uriCC.indexOf(';');\n            if (semicolon > 0) {\n                decodedURI.setChars\n                    (uriCC.getBuffer(), uriCC.getStart(), semicolon);\n            }\n        }\n\n        // Set the remote principal\n        String principal = req.getRemoteUser().toString();\n        if (principal != null) {\n            request.setUserPrincipal(new CoyotePrincipal(principal));\n        }\n\n        // Set the authorization type\n        String authtype = req.getAuthType().toString();\n        if (authtype != null) {\n            request.setAuthType(authtype);\n        }\n\n        // Request mapping.\n        MessageBytes serverName;\n        if (connector.getUseIPVHosts()) {\n            serverName = req.localName();\n            if (serverName.isNull()) {\n                // well, they did ask for it\n                res.action(ActionCode.ACTION_REQ_LOCAL_NAME_ATTRIBUTE, null);\n            }\n        } else {\n            serverName = req.serverName();\n        }\n        connector.getMapper().map(serverName, decodedURI, \n                                  request.getMappingData());\n        request.setContext((Context) request.getMappingData().context);\n        request.setWrapper((Wrapper) request.getMappingData().wrapper);\n\n        // Filter trace method\n        if (!connector.getAllowTrace() \n                && req.method().equalsIgnoreCase(\"TRACE\")) {\n            Wrapper wrapper = request.getWrapper();\n            String header = null;\n            if (wrapper != null) {\n                String[] methods = wrapper.getServletMethods();\n                if (methods != null) {\n                    for (int i=0; i<methods.length; i++) {\n                        if (\"TRACE\".equals(methods[i])) {\n                            continue;\n                        }\n                        if (header == null) {\n                            header = methods[i];\n                        } else {\n                            header += \", \" + methods[i];\n                        }\n                    }\n                }\n            }                               \n            res.setStatus(405);\n            res.addHeader(\"Allow\", header);\n            res.setMessage(\"TRACE method is not allowed\");\n            return false;\n        }\n\n        // Possible redirect\n        MessageBytes redirectPathMB = request.getMappingData().redirectPath;\n        if (!redirectPathMB.isNull()) {\n            String redirectPath = redirectPathMB.toString();\n            String query = request.getQueryString();\n            if (request.isRequestedSessionIdFromURL()) {\n                // This is not optimal, but as this is not very common, it\n                // shouldn't matter\n                redirectPath = redirectPath + \";\" +\nGlobals.SESSION_PARAMETER_NAME + \"=\" \n                    + request.getRequestedSessionId();\n            }\n            if (query != null) {\n                // This is not optimal, but as this is not very common, it\n                // shouldn't matter\n                redirectPath = redirectPath + \"?\" + query;\n            }\n            response.sendRedirect(redirectPath);\n            return false;\n        }\n\n        // Parse session Id\n        if (((Context)request.getMappingData().context).getCookies())\n       \t    parseSessionCookiesId(req, request);\n\n        return true;\n    }\n\n\n    /**\n     * Parse session id in URL.\n     */\n    protected void parseSessionId(org.apache.coyote.Request req, Request request) {\n\n        ByteChunk uriBC = req.requestURI().getByteChunk();\n        int semicolon = uriBC.indexOf(match, 0, match.length(), 0);\n\n        if (semicolon > 0) {\n\n            // Parse session ID, and extract it from the decoded request URI\n            int start = uriBC.getStart();\n            int end = uriBC.getEnd();\n\n            int sessionIdStart = semicolon + match.length();\n            int semicolon2 = uriBC.indexOf(';', sessionIdStart);\n            if (semicolon2 >= 0) {\n                request.setRequestedSessionId\n                    (new String(uriBC.getBuffer(), start + sessionIdStart, \n                            semicolon2 - sessionIdStart));\n                // Extract session ID from request URI\n                byte[] buf = uriBC.getBuffer();\n                for (int i = 0; i < end - start - semicolon2; i++) {\n                    buf[start + semicolon + i] \n                        = buf[start + i + semicolon2];\n                }\n                uriBC.setBytes(buf, start, end - start - semicolon2 + semicolon);\n            } else {\n                request.setRequestedSessionId\n                    (new String(uriBC.getBuffer(), start + sessionIdStart, \n                            (end - start) - sessionIdStart));\n                uriBC.setEnd(start + semicolon);\n            }\n            request.setRequestedSessionURL(true);\n\n        } else {\n            request.setRequestedSessionId(null);\n            request.setRequestedSessionURL(false);\n        }\n\n    }\n\n\n    /**\n     * Parse session id in URL.\n     */\n    protected void parseSessionCookiesId(org.apache.coyote.Request req, Request\nrequest) {\n\n        // Parse session id from cookies\n        Cookies serverCookies = req.getCookies();\n        int count = serverCookies.getCookieCount();\n        if (count <= 0)\n            return;\n\n        for (int i = 0; i < count; i++) {\n            ServerCookie scookie = serverCookies.getCookie(i);\n            if (scookie.getName().equals(Globals.SESSION_COOKIE_NAME)) {\n                // Override anything requested in the URL\n                if (!request.isRequestedSessionIdFromCookie()) {\n                    // Accept only the first session id cookie\n                    convertMB(scookie.getValue());\n                    request.setRequestedSessionId\n                        (scookie.getValue().toString());\n                    request.setRequestedSessionCookie(true);\n                    request.setRequestedSessionURL(false);\n                    if (log.isDebugEnabled())\n                        log.debug(\" Requested cookie session id is \" +\n                            request.getRequestedSessionId());\n                } else {\n                    if (!request.isRequestedSessionIdValid()) {\n                        // Replace the session id until one is valid\n                        convertMB(scookie.getValue());\n                        request.setRequestedSessionId\n                            (scookie.getValue().toString());\n                    }\n                }\n            }\n        }\n\n    }\n\n\n    /**\n     * Character conversion of the URI.\n     */\n    protected void convertURI(MessageBytes uri, Request request) \n        throws Exception {\n\n        ByteChunk bc = uri.getByteChunk();\n        int length = bc.getLength();\n        CharChunk cc = uri.getCharChunk();\n        cc.allocate(length, -1);\n\n        String enc = connector.getURIEncoding();\n        if (enc != null) {\n            B2CConverter conv = request.getURIConverter();\n            try {\n                if (conv == null) {\n                    conv = new B2CConverter(enc);\n                    request.setURIConverter(conv);\n                } else {\n                    conv.recycle();\n                }\n            } catch (IOException e) {\n                // Ignore\n                log.error(\"Invalid URI encoding; using HTTP default\");\n                connector.setURIEncoding(null);\n            }\n            if (conv != null) {\n                try {\n                    conv.convert(bc, cc);\n                    uri.setChars(cc.getBuffer(), cc.getStart(), \n                                 cc.getLength());\n                    return;\n                } catch (IOException e) {\n                    log.error(\"Invalid URI character encoding; trying ascii\");\n                    cc.recycle();\n                }\n            }\n        }\n\n        // Default encoding: fast conversion\n        byte[] bbuf = bc.getBuffer();\n        char[] cbuf = cc.getBuffer();\n        int start = bc.getStart();\n        for (int i = 0; i < length; i++) {\n            cbuf[i] = (char) (bbuf[i + start] & 0xff);\n        }\n        uri.setChars(cbuf, 0, length);\n\n    }\n\n\n    /**\n     * Character conversion of the a US-ASCII MessageBytes.\n     */\n    protected void convertMB(MessageBytes mb) {\n\n        // This is of course only meaningful for bytes\n        if (mb.getType() != MessageBytes.T_BYTES)\n            return;\n        \n        ByteChunk bc = mb.getByteChunk();\n        CharChunk cc = mb.getCharChunk();\n        int length = bc.getLength();\n        cc.allocate(length, -1);\n\n        // Default encoding: fast conversion\n        byte[] bbuf = bc.getBuffer();\n        char[] cbuf = cc.getBuffer();\n        int start = bc.getStart();\n        for (int i = 0; i < length; i++) {\n            cbuf[i] = (char) (bbuf[i + start] & 0xff);\n        }\n        mb.setChars(cbuf, 0, length);\n\n    }\n\n\n    /**\n     * Normalize URI.\n     * <p>\n     * This method normalizes \"\\\", \"//\", \"/./\" and \"/../\". This method will\n     * return false when trying to go above the root, or if the URI contains\n     * a null byte.\n     * \n     * @param uriMB URI to be normalized\n     */\n    public static boolean normalize(MessageBytes uriMB) {\n\n        ByteChunk uriBC = uriMB.getByteChunk();\n        byte[] b = uriBC.getBytes();\n        int start = uriBC.getStart();\n        int end = uriBC.getEnd();\n\n        // URL * is acceptable\n        if ((end - start == 1) && b[start] == (byte) '*')\n          return true;\n\n        int pos = 0;\n        int index = 0;\n\n        // Replace '\\' with '/'\n        // Check for null byte\n        for (pos = start; pos < end; pos++) {\n            if (b[pos] == (byte) '\\\\') {\n                if (ALLOW_BACKSLASH) {\n                    b[pos] = (byte) '/';\n                } else {\n                    return false;\n                }\n            }\n            if (b[pos] == (byte) 0) {\n                return false;\n            }\n        }\n\n        // The URL must start with '/'\n        if (b[start] != (byte) '/') {\n            return false;\n        }\n\n        // Replace \"//\" with \"/\"\n        for (pos = start; pos < (end - 1); pos++) {\n            if (b[pos] == (byte) '/') {\n                while ((pos + 1 < end) && (b[pos + 1] == (byte) '/')) {\n                    copyBytes(b, pos, pos + 1, end - pos - 1);\n                    end--;\n                }\n            }\n        }\n\n        // If the URI ends with \"/.\" or \"/..\", then we append an extra \"/\"\n        // Note: It is possible to extend the URI by 1 without any side effect\n        // as the next character is a non-significant WS.\n        if (((end - start) >= 2) && (b[end - 1] == (byte) '.')) {\n            if ((b[end - 2] == (byte) '/') \n                || ((b[end - 2] == (byte) '.') \n                    && (b[end - 3] == (byte) '/'))) {\n                b[end] = (byte) '/';\n                end++;\n            }\n        }\n\n        uriBC.setEnd(end);\n\n        index = 0;\n\n        // Resolve occurrences of \"/./\" in the normalized path\n        while (true) {\n            index = uriBC.indexOf(\"/./\", 0, 3, index);\n            if (index < 0)\n                break;\n            copyBytes(b, start + index, start + index + 2, \n                      end - start - index - 2);\n            end = end - 2;\n            uriBC.setEnd(end);\n        }\n\n        index = 0;\n\n        // Resolve occurrences of \"/../\" in the normalized path\n        while (true) {\n            index = uriBC.indexOf(\"/../\", 0, 4, index);\n            if (index < 0)\n                break;\n            // Prevent from going outside our context\n            if (index == 0)\n                return false;\n            int index2 = -1;\n            for (pos = start + index - 1; (pos >= 0) && (index2 < 0); pos --) {\n                if (b[pos] == (byte) '/') {\n                    index2 = pos;\n                }\n            }\n            copyBytes(b, start + index2, start + index + 3,\n                      end - start - index - 3);\n            end = end + index2 - index - 3;\n            uriBC.setEnd(end);\n            index = index2;\n        }\n\n        uriBC.setBytes(b, start, end);\n\n        return true;\n\n    }\n\n\n    // ------------------------------------------------------ Protected Methods\n\n\n    /**\n     * Copy an array of bytes to a different position. Used during \n     * normalization.\n     */\n    protected static void copyBytes(byte[] b, int dest, int src, int len) {\n        for (int pos = 0; pos < len; pos++) {\n            b[pos + dest] = b[pos + src];\n        }\n    }\n\n\n}",
    "created": "2007-11-11 19:35 UTC",
    "fixes": [
      "7196ac0",
      "5be0421"
    ]
  },
  {
    "id": "BUG-43758",
    "summary": "java.lang.NullPointerException from org.apache.jasper.compiler.ServletWriter.printMultiLn() on validation of JSPX with empty <jsp:scriptlet> element",
    "description": "Provided a JSPX with empty jsp:scriptlet element:\n\n<jsp:root xmlns:jsp=\"http://java.sun.com/JSP/Page\"\nxmlns=\"http://www.w3.org/1999/xhtml\" version=\"2.0\">\n<jsp:scriptlet></jsp:scriptlet>\n<html>\n<head><title>Simple jspx page</title></head>\n<body>Place content here</body>\n</html>\n</jsp:root>\n\nValidated this with Jasper using ant task, similar to one described in\nhttp://tomcat.apache.org/tomcat-4.1-doc/jasper-howto.html (adjusted to Tomcat 6,\nof course). Got the trace:\n\njava.lang.NullPointerException\n\tat org.apache.jasper.compiler.ServletWriter.printMultiLn(ServletWriter.java:169)\n\tat org.apache.jasper.compiler.Generator$GenerateVisitor.visit(Generator.java:883)\n\tat org.apache.jasper.compiler.Node$Scriptlet.accept(Node.java:915)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2386)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2397)\n\tat org.apache.jasper.compiler.Node$JspRoot.accept(Node.java:566)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2386)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2392)\n\tat org.apache.jasper.compiler.Node$Root.accept(Node.java:489)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)\n\tat org.apache.jasper.compiler.Generator.generate(Generator.java:3374)\n\tat org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:210)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:306)\n\tat org.apache.jasper.JspC.processFile(JspC.java:1007)\n\tat org.apache.jasper.JspC.execute(JspC.java:1156)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)\n\tat org.apache.tools.ant.TaskAdapter.execute(TaskAdapter.java:134)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:357)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:385)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1298)\n\tat\norg.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1181)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:698)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:199)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat com.intellij.rt.ant.execution.AntMain2.main(AntMain2.java:17)\n\nWithout <jsp:scriptlet></jsp:scriptlet> there is no problem.",
    "created": "2007-10-31 11:58 UTC",
    "fixes": [
      "61ce1a3"
    ]
  },
  {
    "id": "BUG-43775",
    "summary": "The tomcat6.exe in source download in tar.gz is broken (ok in zip)",
    "description": "Hi,\n\nI observed that following files in the source download apache-tomcat-6.0.14-\nsrc.tar.gz \n\n   apache-tomcat-6.0.14-src/res/procrun/tomcat6.exe\n   apache-tomcat-6.0.14-src/res/procrun/tomcat6w.exe\n\ndo not work.  However, the same files in apache-tomcat-6.0.14-src.zip do work \nproperly.\n\nOn Linux I expended the zip file in apache-tomcat-6.0.14-src-zip and tar.gz in \napache-tomcat-6.0.14-src then diffed the content:\n\nbash-3.1$ diff -bBr --brief apache-tomcat-6.0.14-src apache-tomcat-6.0.14-src-\nzip\nFiles apache-tomcat-6.0.14-src/native/connector/os/win32/logmessages.bin and \napache-tomcat-6.0.14-src-zip/native/connector/os/win32/logmessages.bin differ\nFiles apache-tomcat-6.0.14-src/res/procrun/amd64/tomcat6.exe and apache-tomcat-\n6.0.14-src-zip/res/procrun/amd64/tomcat6.exe differ\nFiles apache-tomcat-6.0.14-src/res/procrun/amd64/tomcat6w.exe and apache-\ntomcat-6.0.14-src-zip/res/procrun/amd64/tomcat6w.exe differ\nFiles apache-tomcat-6.0.14-src/res/procrun/ia64/tomcat6.exe and apache-tomcat-\n6.0.14-src-zip/res/procrun/ia64/tomcat6.exe differ\nFiles apache-tomcat-6.0.14-src/res/procrun/ia64/tomcat6w.exe and apache-tomcat-\n6.0.14-src-zip/res/procrun/ia64/tomcat6w.exe differ\nFiles apache-tomcat-6.0.14-src/res/procrun/tomcat6.exe and apache-tomcat-\n6.0.14-src-zip/res/procrun/tomcat6.exe differ\nFiles apache-tomcat-6.0.14-src/res/procrun/tomcat6w.exe and apache-tomcat-\n6.0.14-src-zip/res/procrun/tomcat6w.exe differ\nFiles apache-tomcat-6.0.14-\nsrc/webapps/docs/architecture/requestProcess/requestProcess.pdf and apache-\ntomcat-6.0.14-src-\nzip/webapps/docs/architecture/requestProcess/requestProcess.pdf differ\nFiles apache-tomcat-6.0.14-\nsrc/webapps/docs/architecture/startup/serverStartup.pdf and apache-tomcat-\n6.0.14-src-zip/webapps/docs/architecture/startup/serverStartup.pdf differ\nFiles apache-tomcat-6.0.14-src/webapps/docs/tribes/leader-election-initiate-\nelection.dia and apache-tomcat-6.0.14-src-zip/webapps/docs/tribes/leader-\nelection-initiate-election.dia differ\nFiles apache-tomcat-6.0.14-src/webapps/docs/tribes/leader-election-message-\narrives.dia and apache-tomcat-6.0.14-src-zip/webapps/docs/tribes/leader-\nelection-message-arrives.dia differ\n\nYou will also observe that the 2 pdf in the tar.gz will not open without an \nerror whereas the same files in the zip will open properly.\n\nI wonder if the problem starts in the dist.xml Ant script <target \nname=\"package-src-tgz\">\n\n<fixcrlf srcdir=\"${tomcat.dist}/src\" \nexcludes=\"**/*.jar,**/*.gif,**/*.bmp,**/*.jpg,**/*.ico,**/*.war\" eol=\"lf\"/>\n\nThe exclude list should probably exclude also: pdf and exe (also .dia \nand .bin?)\n\nWhat do you think?\n\nKind Regards,\nFred",
    "created": "2007-11-01 12:58 UTC",
    "fixes": [
      "5c8c055"
    ]
  },
  {
    "id": "BUG-43800",
    "summary": "Severe error with native dll and SSL",
    "description": "I have configuration where where Tomcat loads the SSL connector correctly when\nthe native library is not installed, but has an error when the native library is\nadded to the classpath.\n\nConfiguration is a fresh install with this added to server.xml:\n\t<Connector port=\"8443\" protocol=\"HTTP/1.1\" SSLEnabled=\"true\"\n               maxThreads=\"10\" scheme=\"https\" secure=\"true\"\n               clientAuth=\"true\" sslProtocol=\"TLS\"\n               keystoreFile=\"C:\\SmartHealth\\SmartdevelopmentSSLStore\"\n               keystorePass=\"W0Lv3r1n3\"\n               truststoreFile=\"C:\\SmartHealth\\truststore\"\n               truststorePass=\"changeit\"/>\n\nError is:\n\n7/11/2007 10:07:07 org.apache.catalina.core.AprLifecycleListener init\nINFO: Loaded Apache Tomcat Native library 1.1.10.\n7/11/2007 10:07:07 org.apache.catalina.core.AprLifecycleListener init\nINFO: APR capabilities: IPv6 [false], sendfile [true], accept filters [false],\nrandom [true].\n7/11/2007 10:07:08 org.apache.coyote.http11.Http11AprProtocol init\nINFO: Initializing Coyote HTTP/1.1 on http-8080\n7/11/2007 10:07:08 org.apache.coyote.http11.Http11AprProtocol init\nSEVERE: Error initializing endpoint\njava.lang.Exception: No Certificate file specified\n\tat org.apache.tomcat.jni.SSLContext.setCertificate(Native Method)\n\tat org.apache.tomcat.util.net.AprEndpoint.init(AprEndpoint.java:684)\n\tat org.apache.coyote.http11.Http11AprProtocol.init(Http11AprProtocol.java:121)\n\tat org.apache.catalina.connector.Connector.initialize(Connector.java:1059)\n\tat org.apache.catalina.core.StandardService.initialize(StandardService.java:677)\n\tat org.apache.catalina.core.StandardServer.initialize(StandardServer.java:792)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:518)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:538)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:260)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:412)\n7/11/2007 10:07:08 org.apache.catalina.startup.Catalina load\nSEVERE: Catalina.start\nLifecycleException:  Protocol handler initialization failed:\njava.lang.Exception: No Certificate file specified\n\tat org.apache.catalina.connector.Connector.initialize(Connector.java:1061)\n\tat org.apache.catalina.core.StandardService.initialize(StandardService.java:677)\n\tat org.apache.catalina.core.StandardServer.initialize(StandardServer.java:792)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:518)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:538)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:260)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:412)\n7/11/2007 10:07:08 org.apache.catalina.startup.Catalina load\nINFO: Initialization processed in 1864 ms\n7/11/2007 10:07:08 org.apache.catalina.core.StandardService start\nINFO: Starting service Catalina\n7/11/2007 10:07:08 org.apache.catalina.core.StandardEngine start\nINFO: Starting Servlet Engine: Apache Tomcat/6.0.14\n7/11/2007 10:07:10 org.apache.coyote.http11.Http11AprProtocol start\nINFO: Starting Coyote HTTP/1.1 on http-8080\n7/11/2007 10:07:10 org.apache.coyote.http11.Http11AprProtocol start\nSEVERE: Error starting endpoint\njava.lang.Exception: Socket bind failed: [730048] Only one usage of each socket\naddress (protocol/network address/port) is normally permitted.  \n\tat org.apache.tomcat.util.net.AprEndpoint.init(AprEndpoint.java:612)\n\tat org.apache.tomcat.util.net.AprEndpoint.start(AprEndpoint.java:717)\n\tat org.apache.coyote.http11.Http11AprProtocol.start(Http11AprProtocol.java:151)\n\tat org.apache.catalina.connector.Connector.start(Connector.java:1132)\n\tat org.apache.catalina.core.StandardService.start(StandardService.java:531)\n\tat org.apache.catalina.core.StandardServer.start(StandardServer.java:710)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:566)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)\n7/11/2007 10:07:10 org.apache.catalina.startup.Catalina start\nSEVERE: Catalina.start: \nLifecycleException:  service.getName(): \"Catalina\";  Protocol handler start\nfailed: java.lang.Exception: Socket bind failed: [730048] Only one usage of each\nsocket address (protocol/network address/port) is normally permitted.  \n\tat org.apache.catalina.connector.Connector.start(Connector.java:1139)\n\tat org.apache.catalina.core.StandardService.start(StandardService.java:531)\n\tat org.apache.catalina.core.StandardServer.start(StandardServer.java:710)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:566)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)\n7/11/2007 10:07:10 org.apache.catalina.startup.Catalina start\nINFO: Server startup in 2449 ms",
    "created": "2007-11-06 15:09 UTC",
    "fixes": [
      "a36d340"
    ]
  },
  {
    "id": "BUG-43840",
    "summary": "Unexpected behaviour when GenericPrincipal is serialized using the SerializablePrincipal in a cluster.",
    "description": "The method 'getUserPrincipal()' in the GenericPrincipal class returns itself or\na provided Principal if possible. This is also the return value of the\nrequest.getUserPrincipal() method. This works fine in a non-clustered environment.\n\nHowever the behaviour of this method changes when the GenericPrincipal is\nserialized by the SerializablePrincipal class. In the initial node of a cluster\nthe request.getUserPrincipal() method behaves normally. However after the\nprincipal is serialized to another node it no longer contains the internal\nPrincipal object, so the same method call will now return a different object.\n\nI think a solution could be:\n\n1) If there exists an internal userPrincipal AND it is Serializable then\nserialize it along with the other properties of GenericPrincipal.\n\n2) Recreate it at the other end if it is available in the object stream.\n\nIn this manner users with custom Principal objects that implement\njava.io.Serializable will have predictable results from the\nrequest.getUserPrincipal method across nodes in a cluster.\n\nI'd appreciate your thoughts on this.\n\nThanks,\nAshley",
    "created": "2007-11-11 20:12 UTC",
    "fixes": [
      "c0e0dba"
    ]
  },
  {
    "id": "BUG-43868",
    "summary": "MBeanServer invoke issue",
    "description": "Impossible to invoke \"removeRole\" or other MBean methods and \"setAttribute\" by\nMBeanServer cause of the same bug in ManagedBean.java at both lines 545\n(getSetter method) and 604 (getInvoke method):\n        object = this;\nMust be replace by:\n        object = bean;\n\nFortunately getGetter method is correct.",
    "created": "2007-11-15 01:26 UTC",
    "fixes": [
      "ccadbbc"
    ]
  },
  {
    "id": "BUG-43914",
    "summary": "HTTP spec violation when generating HTTP redirects for folders without trailing slash",
    "description": "Copy the attached static.war into $CATALINA_HOME/webapps. Then start the server \nand paste this HTTP request in netcat:\n\nGET /static/name%20with%20spaces HTTP/1.1\nUser-Agent: Jakarta Commons-HttpClient/3.0\nHost: localhost:8080\n\nTomcat will answer with the following HTTP redirect:\n\nHTTP/1.1 302 Moved Temporarily\nServer: Apache-Coyote/1.1\nLocation: http://localhost:8080/static/name with spaces/\nTransfer-Encoding: chunked\nDate: Tue, 20 Nov 2007 13:46:12 GMT\n\nObserve the Location: header. It has raw unencoded spaces in the URL which is \nin clear violation of the HTTP specification.",
    "created": "2007-11-20 05:53 UTC",
    "fixes": [
      "e452200"
    ]
  },
  {
    "id": "BUG-43909",
    "summary": "EL EvaluationContext wrapper hides locale",
    "description": "org.apache.el.lang.EvaluationContext doesn't pass locale to the wrapped\nELContext as does org.apache.jasper.el.ELContextWrapper. This prohibits using of\nthe locale for it's original purpose.",
    "created": "2007-11-19 23:06 UTC",
    "fixes": [
      "fdb170e"
    ]
  },
  {
    "id": "BUG-43944",
    "summary": "org.apache.el.lang.ELArithmetic.coerce throws MissingResourceException for key el.convert",
    "description": "The class org.apache.el.lang.ELArithmetic\nhas the following code snippet:\n\nthrow new IllegalArgumentException(MessageFactory.get(\"el.convert\", obj, \nobjType));\n\nBut the key \"el.convert\" doesn't exist in \"org.apache.el.Messages\". As a \nresult, I'm receiving the exception:\njava.util.MissingResourceException: Can't find resource for bundle \njava.util.PropertyResourceBundle, key el.convert\n\tat java.util.ResourceBundle.getObject(ResourceBundle.java:325)\n\tat java.util.ResourceBundle.getString(ResourceBundle.java:285)\n\tat org.apache.el.util.MessageFactory.getArray(MessageFactory.java:67)\n\tat org.apache.el.util.MessageFactory.get(MessageFactory.java:47)\n\tat org.apache.el.lang.ELArithmetic.coerce(ELArithmetic.java:367)\n\tat org.apache.el.lang.ELArithmetic.add(ELArithmetic.java:238)\n\tat org.apache.el.parser.AstPlus.getValue(AstPlus.java:24)\n\tat org.apache.el.ValueExpressionImpl.getValue\n(ValueExpressionImpl.java:186)",
    "created": "2007-11-22 19:23 UTC",
    "fixes": [
      "c228054"
    ]
  },
  {
    "id": "BUG-44088",
    "summary": "Cannot expire session via html manager webapp",
    "description": "The html manager webapp done not work correctly when clicking the expire\nsessions button. The idle param is missing from the form.\n\nThe following html shows this bug...\n\n<form method=\"POST\" action=\"/manager/html/expire?path=/\">\n  <small>\n  &nbsp;<input type=\"submit\" value=\"Expire sessions\">&nbsp;with idle\n&ge;&nbsp;<input type=\"text\" name=\"expire\" size=\"5\" value=\"30\">&nbsp;minutes&nbsp;\n  </small>\n  </form>\n\nThe name of the text input should be idle.",
    "created": "2007-12-17 15:14 UTC",
    "fixes": [
      "df2b1e6"
    ]
  },
  {
    "id": "BUG-43236",
    "summary": "Response.setCharacterEncoding() fails after Response.getWriter() and Response.reset()",
    "description": "The class org.apache.catalina.connector.Response\n\nresets the internal hold coyoteResponse and outputBuffer during reset():\n\n    public void reset() {\n        if (included)\n            return;     // Ignore any call from an included servlet\n        coyoteResponse.reset();\n        outputBuffer.reset();\n    }\n\nbut if anyone has already set the characterEncoding (e.g. to UTF-8) and already\ngot the writer, than all following invocations of request.setCharacterEncoding()\nwill do nothing, because the internal save flag for usingWriter is not reseted.\nThis is very annoying, because the coyoteResponse.reset(), resets the\ncharacterEncoding to iso8859-1. So I have no change to change/reset the\ncharaterEncoding to UTF-8.\nI'll think if you reset the response, you should also reset the usingWriter flag\nor add another special flag, that works with this circumstances.",
    "created": "2007-08-29 03:56 UTC",
    "fixes": [
      "71bd193"
    ]
  },
  {
    "id": "BUG-43241",
    "summary": "ServletContext.getResourceAsStream()  does not follow API specs for Path",
    "description": "Say for example, you have a file style.css deployed in your context. The call to\nServletContext.getResourceAsStream(\"style.css\") returns an input stream. This is\nnot correct behavior.\n\nThe spec (2.3) says:\n\n> The path must be specified according to \n> the rules given in getResource. \n\ngetResource() says:\n\n> The path must begin with a \"/\" and is interpreted \n> as relative to the current context root.\n\nMy reading of these two things is that getResourceAsStream(\"style.css\") should\nreturn null, not an input stream to the file.\n\nI got bit on this because my app behavior changed (broke) when ran on the\ncurrent version of WebSphere.",
    "created": "2007-08-29 12:54 UTC",
    "fixes": [
      "8f91433"
    ]
  },
  {
    "id": "BUG-44041",
    "summary": "WebappClassLoader duplicate class definition under high Load if hasExternalRepositories is true",
    "description": "I am using Tomcat Sysdeo Plugin combined with their DevLoader.\nThis class extends Tomcat WebappClassLoader to add external repositories through:\nWebappClassLoader#addRepository\n\nUnder high load this exception occurs if a Servlet or JSP calls:\n\t\t\tClass clazz =\nThread.currentThread().getContextClassLoader().loadClass(\"<Class Name>\");\n\n\njava.lang.LinkageError: duplicate class definition:\ncom/ubikingenierie/bug/ClassLoadedDynamically\n\tat java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:260)\n\tat java.net.URLClassLoader.access$100(URLClassLoader.java:56)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:195)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n\tat\norg.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:890)\n\tat\norg.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1329)\n\tat\norg.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1208)\n\tat com.ubikingenierie.servlet.BasicServlet.service(BasicServlet.java:27)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:803)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:269)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)\n\tat\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n\tat\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:174)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:544)\n\tat\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:151)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:874)\n\tat\norg.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)\n\tat\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)\n\tat\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)\n\tat\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689)\n\tat java.lang.Thread.run(Thread.java:595)\n\n\nPhilippe.\nhttp://www.ubik-ingenierie.com",
    "created": "2007-12-07 13:55 UTC",
    "fixes": [
      "e74295f"
    ]
  },
  {
    "id": "BUG-43594",
    "summary": "setenv.sh/setenv.bat  seems a better candidate for CATALINA_BASE",
    "description": "In my opinion, setenv.sh/setenv.bat  seems a better candidate for CATALINA_BASE.\nAnd I'm canvassing for opinions that agree or disagree.\n\nIn terms of rationale, I think those that understand the concept of having a\nseparate CATALINA_BASE/CATALINA_HOME will see the obvious rationale there.\nsetenv.sh/setenv.bat is the container of settings for a Tomcat instance, so you\nshould be able to have different settings for different Tomcat instances\ndeployed against one installed version of Tomcat.\n\nI will attach a patch that implements this.",
    "created": "2007-10-10 16:44 UTC",
    "fixes": [
      "709bb3e"
    ]
  },
  {
    "id": "BUG-43611",
    "summary": "autodeployment with unpackWARs=\"true\" does not work, when a context for that war file exists in server.xml",
    "description": "if a context for the war file exists in server.xml, the manager uploads the new\n.war file, but does not expand it, if the necessary directory does not exist,\nand if the directory exists, it is not overwritten, so you see the old application.\n\nsee server.xml\n\n<Host name=\"xxx\" appBase=\"webapps\" unpackWARs=\"true\">\n        <Context path=\"/yyy\">\n...\n\nif I don't have a context for yyy in server.xml, autodeploy works as expected.\n\nEven if you say, remove context from the manager application, it is always there\nin the application view, you can't remove it.\n\nAnd finally, it never cleans up the work directory for the application yyy,\nwhich I guess, is just a subsequent error of the above behaviour.",
    "created": "2007-10-12 05:15 UTC",
    "fixes": [
      "ffbbe88"
    ]
  },
  {
    "id": "BUG-43622",
    "summary": "compression / minCompressionSize attribute not properly implemented",
    "description": "2 of the compression related attributes for the http connector are:\n\ncompression = on | off | force | <integer val>\nThe documentation states that integer val will be implemented as:\ncompression=\"on\" and minCompressionSize = <integer val>\n\nminCompressionSize = <integer val>\n(The documentation for 5.5.12 doesnt mention this at all, but read this in the\nserver.xml)\n\nThe problem is that the documenation gives the impression that only setting\ncompression=\"some integer val\" is sufficient, however the way the code is\nwritten, the value of \"minCompressionSize\" always overrides the value specified\nin the \"compression\" field. Even if minCompressionSize isnt set, it will still\nget the default value of 2048 and override whatever value was there in the\n\"compression\" field.\n\nI looked at the implementation of the http11 connector and found the following\ncode that might be the culprit:\n\nIn org.apache.coyote.http11.Http11BaseProtocol.Http11ConnectionHandler.init\n    processor.setCompression( proto.compression );\n    processor.setCompressionMinSize( proto.compressionMinSize);\n\nsince the \"setCompressionMinSize\" is called after compressionMinSize, its value\nwill override the value read from compression atttribute.\n\n\nI have looked at the code for Tomcat 6.0 also, and the problems appears to still\nbe present.",
    "created": "2007-10-15 03:51 UTC",
    "fixes": [
      "d1d0619"
    ]
  },
  {
    "id": "BUG-43757",
    "summary": "Improper parsing of response.sendRedirect() in JSP source",
    "description": "Tomcat is throwing a java.lang.illegalStateException due to an attempted\nresponse.sendRedirect() after the time for such matters has come and gone...\nBut, this appears to be a symptom of bad .jsp parsing at runtime.\n\n==========================\n\norg.apache.jasper.JasperException: Exception in JSP: /buslog.jsp:42\n\n39: // if (session.getAttribute(\"isAuth\") == null) {\n40: //     session.setAttribute(\"messageToUser\",\"Authentication failed.\");\n41: //        you.shouldNotParseThis();\n42: //     response.sendRedirect(\"./index.jsp\");\n43: // }\n44: \n45: // if (session.getAttribute(\"isAuth\") != null) {\n\n==============================\n\nThese lines are commented out in the source, and should not conceivably cause a\nruntime error. Changing \"response.sendRedirect(...)\" to\n\"response.sendAbendOMG(...)\" suppresses the error. I am willing to provide the\ncomplete source if necessary.\n\nBuild and execution environments are NetBeans 5.5.1 with bundled Tomcat 5.5.17.",
    "created": "2007-10-31 11:55 UTC",
    "fixes": [
      "eb87635"
    ]
  },
  {
    "id": "BUG-43957",
    "summary": "service.bat doesn't configure logging like the Windows installer",
    "description": "If Tomcat is unpacked from the zip file and started manually, all the log files\nspecified in logging.properties are created - admin.DATE.log, catalina.DATE.log,\nand so on.\n\nIf Tomcat is installed using the Windows Service Installer, and the service is\nstarted, the log files are also created correctly.\n\nHowever, if Tomcat is unpacked from the zip file and installed as a service\n(using 'service install'), and the service is started, the log files aren't\ncreated. This is due to two JVM options that aren't set up -\njava.util.logging.manager and java.util.logging.config.file.\n\nFor consistency, service.bat should set these options, like the Windows\ninstaller does. The attached patch fixes this.",
    "created": "2007-11-25 12:49 UTC",
    "fixes": [
      "51fa863"
    ]
  },
  {
    "id": "BUG-43706",
    "summary": "Fix a litmus warning for WebdavServlet",
    "description": "The litmus WebDAV compliance test suite produces a couple of warnings in its\n'copymove' group of tests. This is the output on tomcat6 trunk:\n\n$ env TESTS=\"copymove\" litmus http://localhost:8080/webdav/ \n-> running `copymove':\n 0. init.................. pass\n 1. begin................. pass\n 2. copy_init............. pass\n 3. copy_simple........... WARNING: COPY to new resource didn't give 201\n    ...................... pass (with 1 warning)\n 4. copy_overwrite........ pass\n 5. copy_cleanup.......... pass\n 6. copy_coll............. pass\n 7. move.................. WARNING: MOVE to new resource didn't give 201\n    ...................... pass (with 1 warning)\n 8. move_coll............. pass\n 9. move_cleanup.......... pass\n10. finish................ pass\n<- summary for `copymove': of 11 tests run: 11 passed, 0 failed. 100.0%\n-> 2 warnings were issued.\n\nWith my patch the warnings are gone:\n\n$ env TESTS=\"copymove\" litmus http://localhost:8080/webdav/ \n-> running `copymove':\n 0. init.................. pass\n 1. begin................. pass\n 2. copy_init............. pass\n 3. copy_simple........... pass\n 4. copy_overwrite........ pass\n 5. copy_cleanup.......... pass\n 6. copy_coll............. pass\n 7. move.................. pass\n 8. move_coll............. pass\n 9. move_cleanup.......... pass\n10. finish................ pass\n<- summary for `copymove': of 11 tests run: 11 passed, 0 failed. 100.0%",
    "created": "2007-10-26 07:03 UTC",
    "fixes": [
      "324387d"
    ]
  },
  {
    "id": "BUG-43887",
    "summary": "StandardWrapper.registerJMX() doesn't log exceptions correctly",
    "description": "I was getting some rather unhelpful error messages when trying to deploy a\nweb.xml that included illegal servlet names. I tracked them down to this part of\n/org/apache/catalina/core/StandardWrapper.java:\n\n        } catch( Exception ex ) {\n            log.info(\"Error registering servlet with jmx \" + this);\n        }\n\nThis should probably be changed to:\n\n            log.info(\"Error registering servlet with jmx \" + ex);\n\nSame thing for the catch block ten lines below this one.\n\n\nI first noticed this in 5.5.23, but this code is still present in 6.0 trunk.",
    "created": "2007-11-16 15:31 UTC",
    "fixes": [
      "9314e5b"
    ]
  },
  {
    "id": "BUG-43893",
    "summary": "WebdavServlet returns incorrect values for the \"href\" property when it is mapped with / url prefix, instead of /*",
    "description": "Deploy the attached WAR file under a vanilla installation of Tomcat 6.0.14, \nthen send the following WebDAV request (I simply pasted it in netcat, maybe \ntelnet will work too if you don't have netcat):\n\nPROPFIND /webdav/file.txt HTTP/1.1\nContent-Type: text/xml; charset=utf-8\nUser-Agent: Jakarta Commons-HttpClient/3.0\nHost: localhost:8080\nDepth: 0\n\nDon't forget to press enter twice at the end. Observe the result:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<multistatus xmlns=\"DAV:\"><response><href>/webdav/file.txt/file.txt</href>\n<propstat><prop><creationdate>2007-11-18T07:42:14Z</creationdate>\n<displayname><![CDATA[file.txt]]></displayname>\n<getlastmodified>Sun, 18 Nov 2007 07:42:14 GMT</getlastmodified>\n<getcontentlength>0</getcontentlength>\n<getcontenttype>text/plain</getcontenttype>\n<getetag>W/\"0-1195371734000\"</getetag>\n<resourcetype/><source></source>\n<supportedlock><lockentry><lockscope><exclusive/></lockscope><locktype><write/\n></locktype></lockentry><lockentry><lockscope><shared/></\nlockscope><locktype><write/></locktype></lockentry></supportedlock>\n</prop>\n<status>HTTP/1.1 200 OK</status>\n</propstat>\n</response>\n</multistatus>\n\nNote in particular the incorrect value in <href>/webdav/file.txt/file.txt</\nhref>, paths are being duplicated.\n\nThis wouldn't usually be a big problem as many WebDAV clients don't rely so \nmuch on this \"href\" value, but the Apache slide-webdavlib client library relies \non it and breaks if it's incorrect, so any WebDAV enabled applications using \nthis library will not work with Tomcat 6. That's the only reason I marked this \nbug as major, apologies if it's a wrong classification.",
    "created": "2007-11-18 00:04 UTC",
    "fixes": [
      "3c61f9b"
    ]
  },
  {
    "id": "BUG-43702",
    "summary": "Class Files Have Unnecessarily Long Names when Using SimpleTags",
    "description": "I have been using Tomcat 5.5.7 (though I have checked this on the\nlatest 5.5 and 6.0 releases too) and had some problems with very\nlong class file names when using the SimpleTag interface for a\ncustom tag in a JSP document (the XML representation).\n\nFrom my reading of the code in Jasper, and my observation of the files\non my disk, if I have a JSP file \"WebContent/mypages/MyPage.jspx\",\nthen a class file named \"work/org/apache/jsp/mypages/MyPage_jspx.class\"\nwill be generated by Jasper.\n\nIf I use the SimpleTag interface for one of my custom tags on that\nJSP, a \"helper\" class (an inner class of the \"MyPage_jspx\" class) is\nalso generated. The naming convention appends \"Helper\" to the \"outer\"\nclass name to create the inner class name resulting in a class file\nnamed \"work/org/apache/jsp/mypages/MyPage_jspx$MyPage_jspxHelper.class\".\n\nAs there is only one \"helper\" class required, it could just be named\n\"Helper\", instead of \"MyPage_jspxHelper\". The \"outer\" class provides\na namespace that is duplicated unnecessarily in the name of the inner\nclass. Another alternative would be to generate this as an independent\nclass instead of an inner class (they could reside in the same source\nfile).\n\nThis may not seem to be a particularly important issue, but it becomes\na real problem if the name of the JSP is very long. We generate JSP\nfiles from other sources that often use very long names (the names\nare chosen by our customers, so we do not have a lot of control over\nhow long they can get). We have recently started to use the SimpleTag\ninterface to try to reduce the size of the Java classes generated by\nJasper (the generated code is more compact, as there is less code needed\nto handle return values, etc.) However, we quickly found that if a\ndeveloper's project directory was deeply nested on the file system\n(i.e., the path to the \"work\" directory) and/or the JSPs had long names\n(some names were as long as 96 characters) that the filesystem path\nlength limit on Windows was exceeded and we got \"class not found\"\nerrors from Tomcat at run-time for classes that clearly existed on the\nfilesystem. I have seen these errors before in other circumstances and\nthey are caused when the path length limit is exceeded.\n\nA trivial change to the Jasper code generator to avoid replicating the\nname of the \"outer\" class in the name of the inner \"helper\" class would\ngo a long way to alleviating this problem. I cannot think of any reason\nwhy this would not be a useful improvement to Jasper. It is a one line\nchange to the constructor of the \"org.apache.jasper.compiler.Generator\"\nclass where the FragmentHelperClass object is created (and probably in\nsome other area where references to this helper are generated into the\nservlet code).\n\nOther improvements to the compactness of the generated code could also\nbe made by more extensive use of \"import\" statements, but that would\nprobably not have any effect on the size of the \".class\" file after\ncompilation (or would it?).\n\nFor our part, we have had to stop using the SimpleTag interface for\nour custom tags, and have to start investigating a way of truncating\nlong JSP file names to avoid being caught out by Jasper's verbosity\nand the Windows path length limit.\n\nShould I report this issues separately against Tomcat 6?",
    "created": "2007-10-26 03:17 UTC",
    "fixes": [
      "5142153"
    ]
  },
  {
    "id": "BUG-43453",
    "summary": "ClassCastException at org.apache.catalina.core.StandardContext.findStatusPage(int)",
    "description": "StandardContext.java reads\n\n    public String findStatusPage(int status) {\n        return ((String) statusPages.get(new Integer(status)));\n    }\n\nThis is wrong and it should be\n\n    public String findStatusPage(int status) {\n        return ((ErrorPage) statusPages.get(new Integer(status))).getLocation();\n    }\n\nRegards,\n  lg",
    "created": "2007-09-23 13:50 UTC",
    "fixes": [
      "73b5e41"
    ]
  },
  {
    "id": "BUG-41797",
    "summary": "CNFE/NPE thrown from function mapper when externalizing",
    "description": "ClassNotFoundException is thrown from function mapper when it is (re)mapping a\ngiven class/method name pair back to method instance. This may happen due to\nserialization.\n\nPatch is simply to replace used Class.forName with ReflectionUtil.forName \n\njava.lang.ClassNotFoundException: \n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:200)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:164)\n\tat\norg.apache.el.lang.FunctionMapperImpl$Function.getMethod(FunctionMapperImpl.java:147)\n\tat\norg.apache.el.lang.FunctionMapperImpl.resolveFunction(FunctionMapperImpl.java:53)\n\tat org.apache.el.parser.AstFunction.getValue(AstFunction.java:71)\n\tat org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:186)\n\tat com.sun.facelets.el.TagValueExpression.getValue(TagValueExpression.java:71)",
    "created": "2007-03-09 01:08 UTC",
    "fixes": [
      "4b17634",
      "4461a96"
    ]
  },
  {
    "id": "BUG-42831",
    "summary": "Permissions aren't set correctly on $CATALINA_HOME/bin/version.sh",
    "description": "-rw-r--r--   1 root  admin     784 May  4 21:42 version.sh\nshould be -rwxr-xr-x\n\nOS, above, should be \"All Unix,\" but it's not an option.\nVersion, above, should be 6.0.13, but it's not an option.",
    "created": "2007-07-07 03:56 UTC",
    "fixes": [
      "4aa093e"
    ]
  },
  {
    "id": "BUG-39013",
    "summary": "Incorrect use of docBase from XML Context file deployment",
    "description": "I created a folder called \"webapps-war\" within the Tomcat installation directory\n(CATALINA_HOME). The host's default appBase is \"webapps\" in this directory.\n\nWhat I wanted to do is use the XML Context file deployment method, i.e. put my\nxml file into conf/catalina/localhost (in my case) and specify the docBase to\nlook for the war in ${catalina.home}/webapps-war/myapp.\n\nBut just because the name starts with \"webapps\", it misinterprets the docBase\nsetting and I get in tomcat.log:\n\"A docBase C:\\tomcat-5.5.16\\webapps-war\\myapp inside the host appBase has been\nspecified, and will be ignored\"\nand then my deployment fails.\n\nOn the other hand, if I name my folder \"somethingelse\" instead of \"webapps-war\",\nit works like a charm.\n\nSo not a big problem (trivial workaround) but would be nicer if the rule was\nperfectly implemented. And that would have saved me hours trying to figure out\nwhat was wrong in my deployment!...\n\nIf my investigation is correct, the problem can be traced back to\norg.apache.catalina.startup.HostConfig and below is my suggested change against\nthe download from SVN done today (17 March). I'm not an expert on the catalina\nsource, so it would need another pair of eyes and some testing before you can\nsay this is the resolution of this problem. The proposed solution is simply to\nmake sure the string comparaisons includes a trailing \"/\" after the default appBase.\n\nQuestions on the suggested resolution:\nI'm not sure in particular if you can use \"/\" as the directory separator for all\nplatform of if you'd need to use something like\nSystem.getProperty(\"file.separator\")?\nWould there be other places where this applies?\nIs there a compelling reason why this can't be done like that?\n\nDIFF FILE against $Revision: 386336 $ $Date: 2006-03-16 14:13:00 +0000 (Thu, 16\nMar 2006) $\nCompare:\n(<)D:\\work-bak\\tomcat\\container\\catalina\\src\\share\\org\\apache\\catalina\\startup\\HostConfig.java\n(45038 bytes)\n   with:\n(>)D:\\work-bak\\tomcat\\container\\catalina\\src\\share\\org\\apache\\catalina\\startup\\HostConfig.java.changed\n(44596 bytes)\n\n592c592\n<                 if\n(!docBase.getCanonicalPath().startsWith(appBase().getAbsolutePath())) {\n---\n>                 if\n(!docBase.getCanonicalPath().startsWith(appBase().getAbsolutePath() + \"/\")) {\n995,996c995,996\n<                             if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath()))\n<                                     ||\n(current.getAbsolutePath().startsWith(configBase().getAbsolutePath()))) {\n---\n>                             if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath() + \"/\"))\n>                                     ||\n(current.getAbsolutePath().startsWith(configBase().getAbsolutePath() + \"/\"))) {\n1035,1036c1035,1036\n<                         if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath()))\n<                             ||\n(current.getAbsolutePath().startsWith(configBase().getAbsolutePath()))) {\n---\n>                         if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath() + \"/\"))\n>                             ||\n(current.getAbsolutePath().startsWith(configBase().getAbsolutePath() + \"/\"))) {\n1052,1053c1052,1053\n<                         if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath()))\n<                             ||\n((current.getAbsolutePath().startsWith(configBase().getAbsolutePath())\n---\n>                         if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath() + \"/\"))\n>                             ||\n((current.getAbsolutePath().startsWith(configBase().getAbsolutePath() + \"/\")",
    "created": "2006-03-17 13:07 UTC",
    "fixes": [
      "872420c"
    ]
  },
  {
    "id": "BUG-30949",
    "summary": "After Failed Include, Request and Response not Unwrapped",
    "description": "In org.apache.catalina.core.ApplicationDispatcher.doInclude(ServletRequest \nrequest, ServletResponse response), after invoke() is called to perform the \ninclude, the request and response objects are normally unwrapped.  However, if \na ServletException or IOException is thrown, the unwrapping does not take place.\n\nThis leads to problems in environments in which cross context includes are \nbeing performed.  For example, \n\n1.  Web App A performs an include to a Servlet in Web App B\n2.  The Servlet in Web App B throws a ServletException\n3.  Web App A catches the ServletException and attempts to forward to an error \njsp.\n\nStep 3 above will fail due to the fact that the request has not been \nunwrapped.  The active request will contain the ServletContext of web app B and \nthe jsp file will not be found.",
    "created": "2004-08-30 23:54 UTC",
    "fixes": [
      "4dd22a5"
    ]
  },
  {
    "id": "BUG-43175",
    "summary": "typo of web-app_2_4.xsd and web-app_2_5.xsd",
    "description": "Hi,\n\nI noticed that some xml schema files have some typos.\n\nRegards,\n\nIndex: /tc6.0.x/trunk/java/javax/servlet/resources/web-app_2_4.xsd\n===================================================================\n--- /tc6.0.x/trunk/java/javax/servlet/resources/web-app_2_4.xsd\t(revision 566663)\n+++ /tc6.0.x/trunk/java/javax/servlet/resources/web-app_2_4.xsd\t(working copy)\n@@ -15,7 +15,6 @@\n   See the License for the specific language governing permissions and\n   limitations under the License.\n -->\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <xsd:schema xmlns=\"http://www.w3.org/2001/XMLSchema\"\n \t    targetNamespace=\"http://java.sun.com/xml/ns/j2ee\"\n \t    xmlns:j2ee=\"http://java.sun.com/xml/ns/j2ee\"\nIndex:\nC:/eclipse_workspaces/tomcat_trunk/tomcat6/java/javax/servlet/resources/web-app_2_5.xsd\n===================================================================\n--- /tc6.0.x/trunk/java/javax/servlet/resources/web-app_2_5.xsd\t(revision 566663)\n+++ /tc6.0.x/trunk/java/javax/servlet/resources/web-app_2_5.xsd\t(working copy)\n@@ -15,7 +15,6 @@\n   See the License for the specific language governing permissions and\n   limitations under the License.\n -->\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <xsd:schema xmlns=\"http://www.w3.org/2001/XMLSchema\"\n     targetNamespace=\"http://java.sun.com/xml/ns/javaee\"\n     xmlns:javaee=\"http://java.sun.com/xml/ns/javaee\"\n@@ -474,14 +473,14 @@\n         <xsd:attribute name=\"id\" type=\"xsd:ID\" />\n     </xsd:complexType>\n     <!-- **************************************************** -->\n-    <xsd:simpleType name=\"&#31414;?http-methodType&#31414;?\">\n+    <xsd:simpleType name=\"http-methodType\">\n         <xsd:annotation>\n             <xsd:documentation>\n                 A HTTP method type as defined in HTTP 1.1 section 2.2.\n             </xsd:documentation>\n         </xsd:annotation>\n-        <xsd:restriction base=\"&#31414;?xsd:token&#31414;?\">\n-            <xsd:pattern value=\"&#31414;?[\\p{L}-[\\p{Cc}\\p{Z}]]+&#31414;?\" />\n+        <xsd:restriction base=\"xsd:token\">\n+            <xsd:pattern value=\"[\\p{L}-[\\p{Cc}\\p{Z}]]+\" />\n         </xsd:restriction>\n \n     </xsd:simpleType>",
    "created": "2007-08-21 06:50 UTC",
    "fixes": [
      "a80a6dd"
    ]
  },
  {
    "id": "BUG-43216",
    "summary": "ACTIVITY_CHECK does not work correctly when Tomcat is restarted",
    "description": "Hi,\n\nI noticed that org.apache.catalina.session.StandardSession.ACTIVITY_CHECK does\nnot work correctly because the StandardSession#accessCount will be set as -1\nwhen Tomcat is restarted and session is loaded from the SESSION.ser file.\n\nStandardManager#doLoad() calls session.endAccess() and this method execute 2 things.\n * set isNew = false\n * decrement accessCount\n\nI think isNew attribute is already set by session.readObjectData(ois) in\nStandardManager#doLoad(),\nand accessCount is already set as 0.\n\nIMHO, it is not necessary calling session.endAccess() in the doLoad().\n\nHere is a patch.\n\nIndex: /tc6.0.x/trunk/java/org/apache/catalina/session/StandardManager.java\n===================================================================\n--- /tc6.0.x/trunk/java/org/apache/catalina/session/StandardManager.java\n(revision 569774)\n+++ /tc6.0.x/trunk/java/org/apache/catalina/session/StandardManager.java\n(working copy)\n@@ -395,7 +395,6 @@\n                     session.setManager(this);\n                     sessions.put(session.getIdInternal(), session);\n                     session.activate();\n-                    session.endAccess();\n                 }\n             } catch (ClassNotFoundException e) {\n               log.error(sm.getString(\"standardManager.loading.cnfe\", e), e);",
    "created": "2007-08-26 09:28 UTC",
    "fixes": [
      "9c37a01"
    ]
  },
  {
    "id": "BUG-43102",
    "summary": "Invalid DTD - mbeans-descriptors.dtd",
    "description": "This causes the following output on startup:\n13/08/2007 14:25:22 org.apache.tomcat.util.digester.Digester fatalError\nSEVERE: Parse Fatal Error at line 17 column 6: The processing instruction \ntarget matching \"[xX][mM][lL]\" is not allowed.\norg.xml.sax.SAXParseException: The processing instruction target matching \"[xX]\n[mM][lL]\" is not allowed.\n\nThe <?xml prologue has to be the first thing in the file, cannot be preceded by \na comment.\n\nThis error was introduced in rev 56210 - this is the only dtd file affected as \nit the only one with the <?xml instruction.",
    "created": "2007-08-12 21:27 UTC",
    "fixes": [
      "3b196f6"
    ]
  },
  {
    "id": "BUG-37326",
    "summary": "No error reported when <jsp:include> has non-existent target",
    "description": "I'm not sure this is a bug - might be expected behaviour - I'm not expert in \nthis area.  Have tried to ascertain what should be happening, by reading the \nservlet/JSP spec docs and parts of the TC source code, but I'm still not quite \nsure.  I posted to tomcat-user twice seeking help on this (no responses).\n\nThe problem that I'm seeing is that when a JSP page includes one or more JSP \nfragments using <jsp:include> actions, but the fragment files don't exist, the \nincluding JSP page is returned to the browser without the fragments included.  \nIt's as if the including JSP ignores the missing fragments and continues being \nprocessed.  The including page is returned with SC of 200, as if there is no \nproblem. Nothing is written to any log file to indicate the problem.\n\nI would have expected this to return an exception or a 404, but neither \nhappens.  Is this the expected behaviour?  As it stands, a webapp bug like \nthis could go unnoticed for quite some time.  Normally TC is good at bringing \nbugs like this to the developer's attention.\n\nSee attached war for simple example.  First discovered on 5.5.9, verified same \nbehaviour on 5.5.12, both based on fresh TC installs.\n\nI appreciate that once the including JSP has written the part of its response \nbefore the include, the response could already be committed depending on \nbuffer size, so calling sendError() will cause an IllegalStateException.  \nAlso, may not be possible to return an error page at this point, again because \nthe response is already committed...?  Perhaps though an exception could be \nlogged?  Or, perhaps (?)the including page's processing should be stopped, \nrather than allowing it to continue.\n\nSome other info: I only discovered that I had omitted the fragment files from \nmy warfile when I first started TC from NetBeans rather than from TC batch \nscripts.  When I did this, the missing fragments are then reported with SC \n404.  As far as I can tell, it seems that the addition of the NetBeans \nHTTPMonitorFilter to conf/web.xml is what causes the 404 to be reported where \nit was previously silent.  Have drawn a blank on why this might be.\n\nFor more info (my posts to tc-user) see also: http://marc.theaimsgroup.com/?\nl=tomcat-user&m=113034098008166&w=2",
    "created": "2005-11-01 22:59 UTC",
    "fixes": [
      "54ff82d"
    ]
  },
  {
    "id": "BUG-42944",
    "summary": "plus sign in url-pattern in servlet-mapping does not work",
    "description": "Hi all,\n\nI had servlet-mappings that contain plus signs (they were created by JspC), e.g.:\n\n    <servlet-mapping>\n      <servlet-name>org.apache.jsp.suchergebnis_005fbu_002bbb_jsp</servlet-name>\n      <url-pattern>/suchergebnis_bu+bb.jsp</url-pattern>\n    </servlet-mapping>\n\nThis mapping does not work (the referred class is present)! When I change the\noriginal file names of the JSPs such that the plus signs are replaced by a minus\nsigns the following mapping results:\n\n    <servlet-mapping>\n      <servlet-name>org.apache.jsp.suchergebnis_005fbu_002dbb_jsp</servlet-name>\n      <url-pattern>/suchergebnis_bu-bb.jsp</url-pattern>\n    </servlet-mapping>\n\nNow the mapping works.\n\nTherefore I assume that there is a bug in handling servlet mappings with plus\nsigns in their url pattern.",
    "created": "2007-07-20 09:32 UTC",
    "fixes": [
      "44e36ea"
    ]
  },
  {
    "id": "BUG-42979",
    "summary": "Fixed JSP and Servlet  for  CVE-2007-1355 are not included in the sample.war",
    "description": "The JSP and Servlet which are part of the sample application are not updated in\nthe war file. The sample.war file still contains the old files. So this security\nhole still exists in the latest tomcat distribution.",
    "created": "2007-07-26 07:24 UTC",
    "fixes": [
      "8b17e7e"
    ]
  },
  {
    "id": "BUG-41722",
    "summary": "role-link tag in web.xml can not  be omitted.",
    "description": "The application with follwing web.xml can not be deployed.\n---\n    <servlet>\n      <servlet-name>sample</servlet-name>\n      <servlet-class>sample.TheServlet</servlet-class>\n      <security-role-ref>\n        <role-name>users</role-name>\n      </security-role-ref>\n    </servlet>\n\n    <servlet-mapping>\n    ....\n    </servlet-mapping>\n\n    <security-role>\n      <role-name>users</role-name>\n     </security-role>\n---\n\"java.lang.IllegalArgumentException: Can't convert argument: null\" occurred.\n\nThe Specification says:\n---\nThe security-role-ref element declares the security role reference in a\ncomponent\u2019s or in a deployment component\u2019s code.\nIt consists of an optional description, the security role name\nused in the code(role-name), and an optional link to a security role(role-link).\n---\n<role-link> is optional.",
    "created": "2007-02-28 01:00 UTC",
    "fixes": [
      "ba25bfb"
    ]
  },
  {
    "id": "BUG-42314",
    "summary": "Jasper output no details with compilation error in specific case.",
    "description": "Jasper output no details when Jasper cannot find\nmappings between generated servlet code (with mistakes)\nand former JSP.\nOne example JSP is the following. \n(The imported class in the JSP is not found.)\n---\n<%@\n  page import = \"not.exist.class\"\n%>\n---",
    "created": "2007-05-02 01:13 UTC",
    "fixes": [
      "6c6ad83"
    ]
  },
  {
    "id": "BUG-42547",
    "summary": "Same env-entry (web.xml) and ResourceLink (context) names causes NPE",
    "description": "Having the following in web.xml:\n\n  <env-entry>\n    <env-entry-name>testIt</env-entry-name>\n    <env-entry-type>java.lang.String</env-entry-type>\n    <env-entry-value>test</env-entry-value>\n  </env-entry>\n\nand the following in your context descriptor:\n\n  <ResourceLink name=\"testIt\"\n                global=\"testIt\"\n                type=\"java.lang.String\"/>\n\ncauses an NPE on context load.\n\njava.lang.NullPointerException\n\tat\norg.apache.catalina.deploy.NamingResources.addEnvironment(NamingResources.java:188)\n\t\nThis assumes you have an entry for 'testIt' in the <GlobalNamingResources>\nsection of server.xml to link to.\n\nThis worked in 5.5.20. No longer works in 5.5.23.",
    "created": "2007-05-30 11:29 UTC",
    "fixes": [
      "53add24"
    ]
  },
  {
    "id": "BUG-42643",
    "summary": "Duplicate JSP function mapper variables",
    "description": "When we deploy ~20 or so web apps at a time, we invariably end up with an app or\ntwo on each server that has compilation errors due to code generated like this:\n\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_1;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_2;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_3;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_4;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_5;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_6;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_7;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_1;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_2;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_3;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_4;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_5;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_6;\nstatic private org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_7;\n\nThis looks like it might be as simple as unsynchronized access to the static\n'currFunc' in ELFunctionMapper, but I'm far from an expert on this code and\nunfortunately lack the time to become one. :)\n\nThis only appears to happen when we mass-deploy apps, and we can resolve it by\ndeleting the generated .java file and manually restarting the affected app.",
    "created": "2007-06-12 07:34 UTC",
    "fixes": [
      "5b65cf4"
    ]
  },
  {
    "id": "BUG-42497",
    "summary": "304 response should consistently include ETag header",
    "description": "According to the HTTP spec, if a server includes an ETag header when it sends a\nfile, it must also include the ETag when it sends a 304 (not-modified) response\nfor that file. Tomcat does not do this for static files - if you request a\nstatic file and get a 200 response, the response has an ETag header; but if you\nget a 304 resopnse, the ETag is omitted.\n\nTo reproduce:\n- In a browser, request a static file from Tomcat (e.g. http://localhost/tomcat.gif)\n- Make sure you get a 200 response (force reload or clear browser cache)\n- Examine the response headers (using a browser plugin or whatever) - note that\nthere is an ETag header\n- Request the same file again, getting a 304 (not-modified) response from Tomcat\n- Examine the response headers - note there is no ETag\nThe 304 response should include an ETag header, because the 200 response had one.\n\nSpec reference: RFC 2616 section 10.3.5 says:\n\"304 Not Modified\n[...]\nThe response MUST include the following header fields:\n[...]\n      - ETag and/or Content-Location, if the header would have been sent\n        in a 200 response to the same request\"",
    "created": "2007-05-23 09:00 UTC",
    "fixes": [
      "0114b2d"
    ]
  },
  {
    "id": "BUG-39425",
    "summary": "catalina.policy & precompiled jsps",
    "description": "Precompiled JSPs needs following additional permission if running with\nsecuritymanager:\npermission java.util.PropertyPermission\n\"org.apache.jasper.runtime.BodyContentImpl.LIMIT_BUFFER\", \"read\";\n\nPlease add this line in the sample policy file (catalina.policy) or change the\ncode in org.apache.jasper.runtime.BodyContentImpl:\n   private static final boolean LIMIT_BUFFER = \nBoolean.valueOf(System.getProperty(\"org.apache.jasper.runtime.BodyContentImpl.LIMIT_BUFFER\",\n\"false\")).booleanValue();",
    "created": "2006-04-27 09:03 UTC",
    "fixes": [
      "e32e38b"
    ]
  },
  {
    "id": "BUG-42436",
    "summary": "service-qname and soap-header not parsed correctly",
    "description": "The service-qname and soap-header elements are type j2ee:xsdQNameType according\nto the schema at:\nhttps://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk/java/javax/servlet/resources/j2ee_web_services_client_1_1.xsd\n\nUsing this schema, an example soap-header element might look like:\n<soap-header xmlns:myns=\"http://myns.org\">myns:extra-header</soap-header>\n\nHowever Tomcat's digester expects a soap-header element to look like:\n<soap-header>\n  <namespaceURI>http://myns.org</namespaceURI>\n  <localpart>extra-header</localpart>\n</soap-header>\nwhich is from a previous webservice DTD, I think.\n\nWhen the digester processes a web.xml that uses the correct form of\n<soap-header> it produces this stack trace:\nMay 16, 2007 10:18:08 AM org.apache.tomcat.util.digester.Digester endElement\nSEVERE: End event threw exception\njava.lang.IllegalArgumentException: Can't convert argument: null\n        at\norg.apache.tomcat.util.IntrospectionUtils.convert(IntrospectionUtils.java:976)\n        at\norg.apache.tomcat.util.digester.CallMethodRule.end(CallMethodRule.java:523)\n        at org.apache.tomcat.util.digester.Rule.end(Rule.java:229)\n        at org.apache.tomcat.util.digester.Digester.endElement(Digester.java:1058)\n        at\ncom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:633)\n\n\n<service-qname> elements that use the correct form do not produce a stacktrace\nbut they are not processed correctly.",
    "created": "2007-05-16 09:19 UTC",
    "fixes": [
      "23c6dbb",
      "7638a3f"
    ]
  },
  {
    "id": "BUG-39875",
    "summary": "RealmBase#init() needs cleanup",
    "description": "In RealmBase#init():\n\n<quote>\n    public void init() {\n        this.containerLog = container.getLogger();\n        if( initialized && container != null ) return;\n        \n        initialized=true;\n        if( container== null ) {\n</quote>\n\nIf the container is null, then a NPE will occurs.\nThe container is not null, then the if block is no longer needed.\n\nThe first line is changed at revision r372854.\nhttp://svn.apache.org/viewvc/tomcat/container/tc5.5.x/catalina/src/share/org/apache/catalina/realm/RealmBase.java?r1=371686&r2=372854",
    "created": "2006-06-23 11:15 UTC",
    "fixes": [
      "0ea4c7c"
    ]
  },
  {
    "id": "BUG-42438",
    "summary": "Duplicate JSP temp variable declaration when jsp:attribute used in conjunction with custom tags",
    "description": "Here is an example of the bug in its most primitive form:\n\nWEB-INF/jsp/test.jsp:\n===================================\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%>\n<%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %>\n\n<jsp:element name=\"a\">\n    <jsp:attribute name=\"href\">http://www.apache.org</jsp:attribute>\n</jsp:element>\n\n<t:test />\n\n<c:if test=\"${true}\">it's true!</c:if>\n===================================\n\nWEB-INF/tags/test.tag:\n===================================\n<%@ tag pageEncoding=\"UTF-8\" body-content=\"scriptless\" %>\ndo nothing\n===================================\n\nWEB-INF/tagPlugins.xml:\n===================================\n<tag-plugins>\n    <tag-plugin>\n      <tag-class>org.apache.taglibs.standard.tag.rt.core.IfTag</tag-class>\n      <plugin-class>org.apache.jasper.tagplugins.jstl.core.If</plugin-class>\n    </tag-plugin>\n</tag-plugins>\n===================================\n\nOnce you run this through Jasper, you will get the following java code:\n===================================\npackage org.apache.jsp.WEB_002dINF.jsp;\n\nimport javax.servlet.*;\nimport javax.servlet.http.*;\nimport javax.servlet.jsp.*;\n\npublic final class test_jsp extends org.apache.jasper.runtime.HttpJspBase\n    implements org.apache.jasper.runtime.JspSourceDependent {\n\n  private static java.util.List _jspx_dependants;\n\n  static {\n    _jspx_dependants = new java.util.ArrayList(1);\n    _jspx_dependants.add(\"/WEB-INF/tags/test.tag\");\n  }\n\n  private org.apache.jasper.runtime.TagHandlerPool _jspx_tagPool_c_if_test;\n\n  public Object getDependants() {\n    return _jspx_dependants;\n  }\n\n  public void _jspInit() {\n    _jspx_tagPool_c_if_test =\norg.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());\n  }\n\n  public void _jspDestroy() {\n    _jspx_tagPool_c_if_test.release();\n  }\n\n  public void _jspService(HttpServletRequest request, HttpServletResponse response)\n        throws java.io.IOException, ServletException {\n\n    JspFactory _jspxFactory = null;\n    PageContext pageContext = null;\n    HttpSession session = null;\n    ServletContext application = null;\n    ServletConfig config = null;\n    JspWriter out = null;\n    Object page = this;\n    JspWriter _jspx_out = null;\n    PageContext _jspx_page_context = null;\n\n\n    try {\n      _jspxFactory = JspFactory.getDefaultFactory();\n      response.setContentType(\"text/html;charset=UTF-8\");\n      pageContext = _jspxFactory.getPageContext(this, request, response,\n      \t\t\tnull, true, 8192, true);\n      _jspx_page_context = pageContext;\n      application = pageContext.getServletContext();\n      config = pageContext.getServletConfig();\n      session = pageContext.getSession();\n      out = pageContext.getOut();\n      _jspx_out = out;\n\n      String _jspx_temp0 = \"http://www.apache.org\";\n      out.write(\"<\" + \"a\" + \" href=\\\"\" + _jspx_temp0 + \"\\\"\" + \"/>\");\n      if (_jspx_meth_t_test_0(_jspx_page_context))\n        return;\nboolean _jspx_temp0=\n((java.lang.Boolean)\norg.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(\"${true}\",\njava.lang.Boolean.class, (PageContext)_jspx_page_context, null,\nfalse)).booleanValue();\nif (_jspx_temp0){\n      out.write(\"it's true!\");\n}\n    } catch (Throwable t) {\n      if (!(t instanceof SkipPageException)){\n        out = _jspx_out;\n        if (out != null && out.getBufferSize() != 0)\n          out.clearBuffer();\n        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);\n      }\n    } finally {\n      if (_jspxFactory != null) _jspxFactory.releasePageContext(_jspx_page_context);\n    }\n  }\n\n  private boolean _jspx_meth_t_test_0(PageContext _jspx_page_context)\n          throws Throwable {\n    PageContext pageContext = _jspx_page_context;\n    JspWriter out = _jspx_page_context.getOut();\n    //  t:test\n    org.apache.jsp.tag.web.test_tag _jspx_th_t_test_0 = new\norg.apache.jsp.tag.web.test_tag();\n    _jspx_th_t_test_0.setJspContext(_jspx_page_context);\n    _jspx_th_t_test_0.doTag();\n    return false;\n  }\n}\n===================================\n\nScan that code for the temp variable named _jspx_temp0.  Notice that there is\none String with that name and one boolean with that name.  Thus, this results in\na java compilation error once you ultimately try to compile the page:\n===================================\nCompiling 2 source files to c:\\work\\marzen\\tmp\\jspc\\classes\nc:\\work\\marzen\\tmp\\jspc\\src\\org\\apache\\jsp\\WEB_002dINF\\jsp\\test_jsp.java:61:\n_jspx_temp0 is already defined in\n_jspService(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)\nboolean _jspx_temp0=\n        ^\nc:\\work\\marzen\\tmp\\jspc\\src\\org\\apache\\jsp\\WEB_002dINF\\jsp\\test_jsp.java:63:\nincompatible types\nfound   : java.lang.String\nrequired: boolean\nif (_jspx_temp0){\n    ^\nNote: c:\\work\\marzen\\tmp\\jspc\\src\\org\\apache\\jsp\\WEB_002dINF\\jsp\\test_jsp.java\nuses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n2 errors\n===================================\n\nThe problem is caused by the fact that the Node.NamedAttribute constructor\ndirectly uses JspUtil.nextTemporaryVariableName() to generate a variable name. \nI *believe* that if the variable was initialized just-in-time in the getter,\nthat the problem would be solved.\n\nThe flow goes like this:\n\n1) When compiling test.jsp, Compiler.generateJava() calls\nJspUtil.resetTemporaryVariableName() to reset the temp variable name\n\n2) The test.jsp file gets parsed immediately thereafter, thus creating a\nvariable with name _jspx_temp0 for the \"href\" attribute\n\n3) Shortly thereafter, tag files are loaded, which means that the test.tag file\nwill be recompiled, thus resulting in JspUtil.resetTemporaryVariableName() being\ninvoked again (thus setting the variable back to 0).\n\n4) Since test.tag doesn't do anything to cause a temporary variable name to be\nrecreated, the temp variable name remains at 0.\n\n5) Upon returning to the compilation of the test.jsp, the If tag plugin is used\nto create yet another variable name with name _jspx_temp0, hence the conflict.\n\nI think step 2 is the root of the problem.  If the NamedAttribute didn't get a\ntemporary variable name assigned in the constructor and instead generated it\njust-in-time in the getter, then this issue wouldn't exist since the \"href\"\nattribute variable name would be created only after first compiling all of the\ntag files.\n\nI still think that the logic in the compilation is a bit strange given that the\nJSP will use temporary variable names starting at whatever point the last\ncompiled tag file left off at.  I think that issue could be resolved by moving\nthe JspUtil.resetTemporaryVariableName() call in Compiler.generateJava() down\nafter the call to loadTagFiles().  Note that you would probably also want to\ncall JspUtil.resetTemporaryVariableName() in the ctxt.isPrototypeMode()\nscenario.  Here is the diff that I would propose for Compiler.java based on the\n5.5.20 codebase:\n\n===================================\n150,152d149\n<             // Reset the temporary variable counter for the generator.\n<             JspUtil.resetTemporaryVariableName();\n<\n157a155,156\n>                 // Reset the temporary variable counter for the generator.\n>                 JspUtil.resetTemporaryVariableName();\n179a179,181\n>             // Reset the temporary variable counter for the generator.\n>             JspUtil.resetTemporaryVariableName();\n>\n===================================\n\n\nHere is the diff I would propose for Node.java:\n===================================\n1791d1790\n<             temporaryVariableName = JspUtil.nextTemporaryVariableName();\n1837a1837,1839\n>             if(temporaryVariableName==null) {\n>                 temporaryVariableName = JspUtil.nextTemporaryVariableName();\n>             }\n===================================",
    "created": "2007-05-16 17:43 UTC",
    "fixes": [
      "5e188bc"
    ]
  },
  {
    "id": "BUG-42444",
    "summary": "Potential NullPointerException in org.apache.catalina.valves.AccessLogValve",
    "description": "In the class AccessLogValve.RequestElement in the method addElement there is an\naccess of the form: request.getProtocol(), even though the variable request is\nknown to be 'null' which will cause a NullPointerException.\n\nPatch below:\n---\n\nIndex:\nF:/Workspace/Apache2/tomcat6/java/org/apache/catalina/valves/AccessLogValve.java\n===================================================================\n---\nF:/Workspace/Apache2/tomcat6/java/org/apache/catalina/valves/AccessLogValve.java\t(revision\n538877)\n+++\nF:/Workspace/Apache2/tomcat6/java/org/apache/catalina/valves/AccessLogValve.java\t(working\ncopy)\n@@ -1035,7 +1035,7 @@\n                 buf.append(request.getProtocol());\n             } else {\n                 buf.append(\"- - \");\n-                buf.append(request.getProtocol());\n+                // buf.append(request.getProtocol());\n             }\n         }\n     }",
    "created": "2007-05-17 08:15 UTC",
    "fixes": [
      "776736f"
    ]
  },
  {
    "id": "BUG-42401",
    "summary": "RUNNING.txt has wrong info about required Java environment",
    "description": "From the file RUNNING.txt I can read:\n\n\"Out of the box, Tomcat 5.5 requires the Java 2 Standard Edition Runtime\nEnvironment (JRE) version 5.0 or later.\"\n\nAnd later in the same file also:\n\n\"\n=============================\nRunning With JRE 5.0 Or Later\n=============================\n\n(1) Download and Install the J2SE Runtime Environment (JRE)\n\n(1.1) Download the Java 2 Standard Edition Runtime Environment (JRE),\n      release version 5.0 or later, from http://java.sun.com/j2se.\n\n(1.2) Install the JRE according to the instructions included with the\n      release.\n\n(1.3) Set an environment variable named JAVA_HOME to the pathname of\n      the directory into which you installed the JRE, e.g. c:\\j2sdk5.0\n      or /usr/local/java/j2sdk5.0.\n\"\n\nSo a JRE should be enough, although the path examples at step 1.3 mention JDK\ninstallation paths.\n\n\nHowever, when using the installed JRE and setting the value of JAVA_HOME to its'\npath \"C:\\Program Files\\Java\\jre1.5.0_11\", when I run bin\\startup.bat I get the\nmessage:\n\n\"\nC:\\dev\\apache-tomcat-5.5.23\\bin>startup.bat\nThe JAVA_HOME environment variable is not defined correctly\nThis environment variable is needed to run this program\nNB: JAVA_HOME should point to a JDK not a JRE\n\"\n\nSo, as a matter of fact I need indeed a JDK although the docs state the\ncontrary. :-/",
    "created": "2007-05-11 19:34 UTC",
    "fixes": [
      "a175efa"
    ]
  },
  {
    "id": "BUG-42361",
    "summary": "POST content type incorrect for multipart forms after login",
    "description": "When using a form with a custom encoding (e.g. \"multipart/form-data\"), the\ncontent type is not restored after a redirect to a login page (auth-method = FORM).\n\nTo reproduce:\n- A page that POSTs using multipart/form-data encoding (or anything other than\napplication/x-www-form-urlencoded) to a result page that is protected by a login\npage (auth-method=FORM) is invoked.\n- Even though the multipart POST data exists (verified by reading input stream\nof request from result page) the content type of the request is always\n\"application/x-www-form-urlencoded\".  \n- This only happens when redirected to the login page first.  It does not happen\nif already logged in.",
    "created": "2007-05-08 16:06 UTC",
    "fixes": [
      "637acc5"
    ]
  },
  {
    "id": "BUG-42309",
    "summary": "Request: support for NIO in Embedded Tomcat",
    "description": "in org.apache.catalina.startup.Embedded there is no direct API to create an NIO\nconnector. This would be very helpful for all applications which use tomcat in\nembedded mode and require the CometProcessor.",
    "created": "2007-05-01 02:03 UTC",
    "fixes": [
      "9546005"
    ]
  },
  {
    "id": "BUG-42071",
    "summary": "If a JSP throws an UnavailableException twice, an IllegalStateException occurs.",
    "description": "If a JSP throws an UnavailableException twice, an IllegalStateException occurs.\n\nfirst access:\nJSP throws UnavailableException.\n\nsecond access:\nIf the JSP throws an UnavailableException again then an IllegalStateException\noccurs and Tomcat returns status code:500 to the client.\n\nThe problem is not that the IllegalStateException occurs.\nThe problem is that the JSP can be called even though it cannot be used.",
    "created": "2007-04-08 17:49 UTC",
    "fixes": [
      "508f513"
    ]
  },
  {
    "id": "BUG-41869",
    "summary": "Should EL (Expression Language) expressions result in the TagData.REQUEST_TIME_VALUE object?",
    "description": "I have a custom tag with attributes defined in the TLD file as allowing run-\ntime expression values, meaning:\n\n  <rtexprvalue>true</rtexprvalue>\n\n\nI also have a TagExtraInfo class that I am using to validate the values \nprovided.\n\nInside my TagExtraInfo sub-class I have code such as this:\n\n   Object attr = data.getAttribute(\"groupSize\");\n \n   if ( attr != null &&\n        !attr.equals(TagData.REQUEST_TIME_VALUE)\n   {\n \nand so on.   When, in my JSP, I provide attribute values such as \"<%= 10 * 14 \n%\" (JSP scriplet) I do indeed get the TagData.REQUEST_TIME_VALUE object back \non this call.\n\nHowever, when I instead have an EL value, something like \"${groupSizeValue}\", \nI do not received the REQUEST_TIME_VALUE distinguished object back.  I receive \na String object, containing the text \"${groupSizeValue}\".  Is this the correct \nbehavior?  Everything I have read (books, Google searches, etc.) seems to \npoint me in the thinking that this is a bug.\n\n\nFrom looking at the tomcat 5.5.20 and 5.5.23 source code, I see where the \nJspAttribute (nested class of Node) is created.  In the Validator class, line \n1117, is the creation for this object passing the constant \"false\" for \nthe \"expr\" argument (5th argument to the 1st ctor of this class).  I believe \nit is line 1117 that would be getting executed since the if statement \npreceding this is:\n\n   if (el.containsEL() && !pageInfo.isELIgnored()) {\n \n \nSo, my question is, why would an EL expression when EL is not being ignored be \nconsidered not an expression?",
    "created": "2007-03-16 12:43 UTC",
    "fixes": [
      "9d0ec06"
    ]
  },
  {
    "id": "BUG-41990",
    "summary": "several mime types missing from conf/web.xml",
    "description": "conf/web.xml\n\nplease add:\n\n    <mime-mapping>\n        <extension>wmv</extension>\n        <mime-type>video/x-ms-wmv</mime-type>\n    </mime-mapping>",
    "created": "2007-03-29 17:56 UTC",
    "fixes": [
      "dfd1416"
    ]
  },
  {
    "id": "BUG-42025",
    "summary": "Incorrect documentation in RemoteAddrValve/RemoteHostValve",
    "description": "The documentation page at http://tomcat.apache.org/tomcat-5.5-\ndoc/config/valve.html says:\n\n\"The syntax for regular expressions is different than that for 'standard' \nwildcard matching. Tomcat uses the Jakarta Regexp library. Please consult the \nRegexp documentation for details of the expressions supported.\"\n\nThis is incorrect. In reality, the standard Java regexp package java.util.regex \nis used. The syntax is slightly different than Jakarta Regexp. In particular, \nthe matches() method is used by RemoteAddrValve/RemoteHostValve, which attempts \nto match the entire region against the pattern. \n\nE.g. I expected\n<Valve allow=\"^127\\.\" ...\nto match localhost addresses. But this doesn't work, I must write \n<Valve allow=\"127\\.0\\.0\\.\\d\" ...\nbecause the *entire* region is matched with java.util.regex. (Note the lack of \nanchor.)\n\n(While I'm reporting this as a documentation issue, it could also be viewed as \na feature regression since region matches were previously supported, as far as \nI can tell.)\n\nNOTE: I'm logging this problem against 5.5, but it also exists in the 6.0 \ndocumentation.",
    "created": "2007-04-02 16:22 UTC",
    "fixes": [
      "77ba62e"
    ]
  },
  {
    "id": "BUG-42039",
    "summary": "Tomcat doesn't output the stack trace of UnavailableException.",
    "description": "When UnavailableException is thrown from the Servlet:init, Tomcat doesn't output\nthe stack trace of UnavailableException.\n\nThe cause of problem is lost.\n\nTomcat should output the stack trace at the \"invoke\" method of\nStandardWrapperValue.",
    "created": "2007-04-03 16:54 UTC",
    "fixes": [
      "c3d2ce4"
    ]
  },
  {
    "id": "BUG-42119",
    "summary": "request.getCharacterEncoding misparses charset=UTF-8; xyz=3",
    "description": "(This bug is also present in Coyote source 6.0.10.)\n\nIf there is an HTTP header\n Content-Type: text/abc; charset=UTF-8; xyz=3\nrequest.getCharacterEncoding() returns \"UTF-8; xyz=3\" but Tomcat 4.1.24 returns\n\"UTF-8\".\n\nIn Tomcat 4.1.24, request.getCharacterEncoding uses parseCharacterEncoding\ndefined in\n \njakarta-tomcat-4.1.24-src/catalina/src/share/org/apache/catalina/util/RequestUtil.java\n\nand it correctly handles the case of other Content-Type parameters.\n\nIn Tomcat 5.5.23, however, request.getCharacterEncoding uses\ngetCharsetFromContentType defined in \nfrom\napache-tomcat-5.5.23-src/connectors/util/java/org/apache/tomcat/util/http/ContentType.java\n\nwhich does not search for a possible terminating semicolon in the charset, thus\nerroneously including additional characters in the charset.\n\nThe code in 5.5.23 has a comment begins\n     // Basically return everything after \";charset=\"\n\nPlease consider using the code from 4.1.24\n\nThis problem showed up when Content-Type was multipart/mixed and a client\nspecified a charset parameter to Content-Type; however, it will occur in any\nContent-Type where charset is specified and is not the last parameter.",
    "created": "2007-04-13 12:01 UTC",
    "fixes": [
      "4cf171a"
    ]
  },
  {
    "id": "BUG-42072",
    "summary": "The call of the jspDestroy method violates it about the Java Servlet Specification 2.4, SRV.2.3.2.1.",
    "description": "When a JSP is accessed for a second time, the jspDestroy method is called even\nif a ServletException is thrown from the init method of the class that extends\nHttpJspPage.\n\nThis violates the Java Servlet Specification 2.4, SRV.2.3.2.1.",
    "created": "2007-04-08 18:07 UTC",
    "fixes": [
      "3d27771"
    ]
  },
  {
    "id": "BUG-41747",
    "summary": "error in ant task description",
    "description": "Wrong description of ant task 'deploy': Instead of\n   ... war=\"${build}${path}.war\"/>\nshould be written\n   ... war=\"file:${build}${path}.war\"/>",
    "created": "2007-03-02 06:08 UTC",
    "fixes": [
      "e4569e6"
    ]
  },
  {
    "id": "BUG-41752",
    "summary": "Wrong message on exception in MemoryRealm",
    "description": "When Digester read tomcat-user.xml file and exception is throw, then is created\nnew LifecycleException. As first parameter of this Exception is message string.\nThis string is hardcoded to \"memoryRealm.readXml\", so I thing that log message\nwill be wrong too!\n\nI think that there must be used StringManager.\n\nactual implementation:\n\nDigester digester = getDigester();\ntry {\n  synchronized (digester) {\n    digester.push(this);\n    digester.parse(file);\n  }\n} \ncatch (Exception e) {\n  throw new LifecycleException(\"memoryRealm.readXml\", e);\n} \nfinally {\n  digester.reset();\n}\n\n\nfixed:\n\nDigester digester = getDigester();\ntry {\n  synchronized (digester) {\n    digester.push(this);\n    digester.parse(file);\n  }\n} \ncatch (Exception e) {\n  throw new LifecycleException(sm.getString(\"memoryRealm.readXml\"), e);\n} \nfinally {\n  digester.reset();\n}",
    "created": "2007-03-02 16:28 UTC",
    "fixes": [
      "e33b67a"
    ]
  },
  {
    "id": "BUG-41655",
    "summary": "Some variable informations are not output in some languages.",
    "description": "I noticed that some variable informations are not output to the log in some \nlocales.\n\nIt is because the variable informations has not been described to the \nproperties file, though the value is given by the argument of \nStringManager#getString. \n\n-org.apache.catalina.startup.LocalStrings_fr.properties\n                             LocalStrings_es.properties\n                             LocalStrings_ja.properties\n key:\n    contextConfig.applicationParse  ... {0} not exists.\n    contextConfig.tldEntryException ... {2} not exists.\n    contextConfig.tldFileException  ... {1} not exists.\n    contextConfig.tldJarException   ... {1} not exists.\n\n-org.apache.jasper.resources.LocalStrings_ja.properties\n key:\n    jsp.error.bad.scratch.dir  ... {0} not exists.\n\nI hope for them to be written in the properties files to debug applications \neasily.",
    "created": "2007-02-19 04:44 UTC",
    "fixes": [
      "4d3f6a8"
    ]
  },
  {
    "id": "BUG-41666",
    "summary": "If-Unmodified-Since failure",
    "description": "The If-Unmodified-Since header doesn't work enoughly.\n\nfailed case:\n The If-Unmodified-Since header value: 1000000(milliseconds)\n The lastModified value of target resource: 1001000(milliseconds)\n\nIn this case, the response's status code should be SC_PRECONDITION_FAILED,\nbut the result is not so.\n\ncaused by:\nIn DefaultServlet#checkIfUnmodifiedSince:\n    if ( lastModified > (headerValue + 1000)) {\n\nI think it should be:\n    if ( lastModified >= (headerValue + 1000)) {",
    "created": "2007-02-21 01:44 UTC",
    "fixes": [
      "9ac3428"
    ]
  },
  {
    "id": "BUG-41739",
    "summary": "The servlet with the value 0 in <load-on-startup> tag must be loaded at first.",
    "description": "Servlet 2.4 specification says:\n---\nIf the value is a positive integer or 0, the container must load\nand initialize the servlet as the application is deployed. \nThe container must guarantee that servlets marked with lower integers\nare loaded before servlets marked with higher integers.\n---\nI think the servlet with value 0 in <load-on-startup> tag must be loaded at the \nfirst.\n\nHowever, Tomcat loads the servlet at the last.",
    "created": "2007-03-01 06:09 UTC",
    "fixes": [
      "01d38a5"
    ]
  },
  {
    "id": "BUG-41608",
    "summary": "The log level is different at same messages.",
    "description": "I suggest a little message improvement.\n\nThe log level is different at same messages.\nThe message \"Servlet.service() for servlet {0} threw exception\" is \noutput in eight places, but the message level is not same.\n\n--org.apache.catalina.core.ApplicationDispatcher#invoke\n...\nwrapper.getLogger().error(sm.getString(\"applicationDispatcher.serviceException\",\n    wrapper.getName()), e);\n...\nwrapper.getLogger().error(sm.getString(\"applicationDispatcher.serviceException\",\n    wrapper.getName()), e);\n...\nwrapper.getLogger().error(sm.getString(\"applicationDispatcher.serviceException\",\n    wrapper.getName()), rootCause);\n...\nwrapper.getLogger().error(sm.getString(\"applicationDispatcher.serviceException\",\n    wrapper.getName()), e);\n\n\n--org.apache.catalina.core.StandardWrapperValve#invoke\ncontainer.getLogger().warn(sm.getString(\"standardWrapper.serviceException\",\n    wrapper.getName()), e);\n...\ncontainer.getLogger().warn(sm.getString(\"standardWrapper.serviceException\",\n    wrapper.getName()), e);\n...\ncontainer.getLogger().error(sm.getString(\"standardWrapper.serviceException\",\n    wrapper.getName()), rootCause);\n...\ncontainer.getLogger().error(sm.getString(\"standardWrapper.serviceException\",\n    wrapper.getName()), e);\n\nAre there any reasons for using getLogger().warn()?\nI think it would be better that all of them use getLogger().error(...).",
    "created": "2007-02-13 21:45 UTC",
    "fixes": [
      "8ba8334"
    ]
  },
  {
    "id": "BUG-39088",
    "summary": "StandardWrapper getRootCause() infinite loop",
    "description": "The \"// Extra aggressive rootCause finding\" in StandardWrapper.java is an\nunderstatement.  It causes an infinite loop in certain cases.  For example, the\nsemantics of the following exception class are that getRootCause() returns the\none and only root cause of the exception chain, which in this case can be the\nexception itself.  It is not derived from ServletException, thus is not bound to\nreturn null at the end of the chain as ServletException does.  Its not safe to\nuse reflection to call an arbitrary method of an arbitrary Exception class, just\nbecause it happens to have the same name as the method in ServletException.\n\npublic class MyException \n   extends Exception\n{\n   public MyException(Throwable cause) {\n      this.cause = cause;\n   }\n   Throwable cause;\n   public Throwable getCause() {\n      return cause;\n   }\n   public Throwable getRootCause() {\n      if (cause instanceof VCOMException) {\n         return ((VCOMException) exception).getRootCause();\n      }\n      return cause == null ? this : cause;\n   }\n}",
    "created": "2006-03-23 21:02 UTC",
    "fixes": [
      "20f7a87"
    ]
  },
  {
    "id": "BUG-39572",
    "summary": "fixes to use CompressionFilter in WebSphere app server",
    "description": "There are a couple of small bugs in the compression filter classes that are\ntriggered by using the filter in WebSphere 5.1 or 6. Here are patches.\n\n- CompressionResponseStream should not compress the output stream if the\nresponse has been committed (because then it cannot write the Content-Encoding:\ngzip header, and the browser displays the compressed output as-is)\n- CompressionServletResponseWrapper causes a NullPointerException if you flush\nbefore writing anything",
    "created": "2006-05-12 22:28 UTC",
    "fixes": [
      "f06d41f"
    ]
  },
  {
    "id": "BUG-41265",
    "summary": "JspServlet's checkInterval parameter cannot be set to 0 implicitly",
    "description": "conf\\web.xml's JspServlet init parameters include 'checkInterval', whose value\nis explained as follows:\n  If development is false and checkInterval is greater than zero, background\ncompilations are enabled.\n\nIf I add the following parameters one would think the background compilations\nwould be disabled (the value is not greater than zero).\n\n        <init-param>\n            <param-name>checkInterval</param-name>\n            <param-value>0</param-value>\n        </init-param>\n        <init-param>\n            <param-name>development</param-name>\n            <param-value>false</param-value>\n        </init-param>\n\nHowever, the value is changed to 300 and the following warning is outputted:\nDec 30, 2006 7:13:57 PM org.apache.jasper.EmbeddedServletOptions <init>\nWARNING: Warning: Invalid value for the initParam checkInterval. Will use the\ndefault value of \"300\" seconds\n\nAccording to the comment in web.xml \"0\" was a valid value. Either the comment or\nthe validity check is wrong. Or my understanding of them.",
    "created": "2006-12-30 02:34 UTC",
    "fixes": [
      "39fe247"
    ]
  },
  {
    "id": "BUG-40526",
    "summary": "tomcat 5.5.17 catalina.bat - dropped support for JPDA_OPTS environment variable",
    "description": "We have upgraded from tomcat 4.1.18 to 5.5.17, and have found that our \nsystem start up process on Windows can no longer set jpda debugger \noptions on the tomcat java command line.\n\nThis occurs because the 5.5.17 catalina.bat file no longer supports \nthe environment variable $JPDA_OPTS, which our start up process used \nto use to place jpda information. What is interesting is that \ncatalina.sh STILL supports JPDA_OPTS. So we have this problem on windows only.\n\nIs this an intentional change?\n\nThe above comment was sent to tomcate users list. Mark Thomas responded:\n\nNot that I can tell. If you care to create a patch and submit it to bugzilla \nI'll take a look.\n\nI have made the fix, and I am sending it for approval. I have a zip file with \nthe correction, and the output of a diff -u on the original and corrected \nversion of the catalina.bat and the catalina.sh scripts. I do not see on this \nbug entry page any place to attach this zip file. Please let me know how I can \nsend the changes to the community.\n\nBelow is a summary of changes made:\n\nChanges include revised catalina.sh and catalina.bat files supporting \nJPDA_OPTS (supported in tomcat 4.1.18), and support for a new JPDA_SUSPEND.\n\ncatalina.sh changes:\n\n1. Documented JPDA_OPTS in the script (this was missing) \n\n2. Added support for JPDA_SUSPEND environment variable. If not specified, it \ndefaults to \"n\" (backward compatible).\n\ncatalina.bat changes: \n\n1. Added back support for JPDA_OPTS. I basically re-implemented as it was in \ntomcat 4.1.18. Note that its only implemented in the non-security execution \nbranch (this is how it was in tomcat 4.1.18).\n\n2. Documented JPDA_OPTS in the script.\n\n3. Added support for JPDA_SUSPEND environment variable. If not specified, it \ndefaults to \"n\" (backward compatible).",
    "created": "2006-09-16 14:38 UTC",
    "fixes": [
      "815e19e"
    ]
  },
  {
    "id": "BUG-40524",
    "summary": "request.getAuthType() returns different string from HttpServletRequest.CLIENT_CERT_AUTH",
    "description": "using inspect:\n\nrequest.getAuthType()\n  (java.lang.String) CLIENT-CERT\n\t \nHttpServletRequest.CLIENT_CERT_AUTH\n   (java.lang.String) CLIENT_CERT\n\napi says they should be the same object (== should work)",
    "created": "2006-09-16 01:49 UTC",
    "fixes": [
      "dc33554"
    ]
  },
  {
    "id": "BUG-41217",
    "summary": "SingleSignOn Cookie does not honor https access: Login Information Disclosure",
    "description": "When using the SingleSignOn Valve\n(org.apache.catalina.authenticator.SingleSignOn) via https the Cookie\nJSESSIONIDSSO is transmitted without the \"secure\" attribute, resulting in it\nbeing transmitted to any content that is - by purpose or error - requested via\nhttp from the same server. \n\nAs the content of the SSO-Cookie is confidential (it will lead to automatically\nlogged in sessions in other contexts - https or non-https) this should never happen.\n\nSorry to have no patch. I've not installed the complete source distribution in\nmy development environment, but it seems the points to change are \norg.apache.catalina.authenticator.AuthenticatorBase.register(...), the code of\ninterest being (from 5.5.30 source distribution)\n\n            Cookie cookie = new Cookie(Constants.SINGLE_SIGN_ON_COOKIE, ssoId);\n            cookie.setMaxAge(-1);\n            cookie.setPath(\"/\");\n            hres.addCookie(cookie);\n\nAs hres is an org.apache.catalina.HttpRequest, and I've looked through the code\nto find org.apache.catalina.Request.setSecure() but no ...isSecure() (though\nthis is mentioned in the Javadoc for ...setSecure()) I suppose there needs to be\nanother change to provide isSecure on Request or HttpRequest, but this is\ndifficult to tell only from the editor.\nIf isSecure() was there, there'd be a \n            cookie.setSecure(hres.isSecure()) \nmissing in the statements above...",
    "created": "2006-12-20 05:13 UTC",
    "fixes": [
      "11b9c92"
    ]
  },
  {
    "id": "BUG-41327",
    "summary": "Jasper does'nt display the full path of the file in a 404 Not found  error page",
    "description": "When you try accessing a non-existent jsp page in a webapp, tomcat(jasper)\ndoesnt display the full path of the file which was not found in the browser. \nexample:\nAccessing a non-existent jsp page say a.jsp with this url\nhttp://localhost:8080/jsp-examples/a.jsp would return a 404 Not Found error page\nwhich displays \"/a.jsp not found\".\n\nRather it should be \"/jsp-examples/a.jsp not found\".",
    "created": "2007-01-09 00:32 UTC",
    "fixes": [
      "3a6225a"
    ]
  },
  {
    "id": "BUG-41051",
    "summary": "Keystore alias shouldn't be case sensitive",
    "description": "The \"alias\" attribute of the non-APR SSL connector seems to be case-sensitive.\nIf I specify \"classServer\" for the alias I get:\n\n28-Nov-2006 1:03:18 AM org.apache.tomcat.util.net.PoolTcpEndpoint acceptSocket\nSEVERE: Endpoint [SSL: ServerSocket[addr=0.0.0.0/0.0.0.0,port=0,localport=443]]\nignored exception: java.net.SocketException: SSL handshake\nerrorjavax.net.ssl.SSLException: No available certificate or key corresponds to\nthe SSL cipher suites which are enabled.\njava.net.SocketException: SSL handshake errorjavax.net.ssl.SSLException: No\navailable certificate or key corresponds to the SSL cipher suites which are enabled.\n\tat\norg.apache.tomcat.util.net.jsse.JSSESocketFactory.acceptSocket(JSSESocketFactory.java:113)\n\tat\norg.apache.tomcat.util.net.PoolTcpEndpoint.acceptSocket(PoolTcpEndpoint.java:407)\n\tat\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:70)\n\tat\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n\tat java.lang.Thread.run(Unknown Source)\n\n   Whereas if I use an alias of \"classserver\" (all lowercase) it works just\nfine. To make matters worse, the keystore was generated with an alias\n\"classServer\" so the lowercase is actually incorrect, and when you hit a webpage\nthrough SSL the certificate will indeed show \"classServer\" using camel-casing.\n\n   My guess is that this indicates some sort of Tomcat or JDK bug.\njava.security.Keystore.setCertificateEntry() will actually throw an exception if\none tries storing two keys whose aliases only differ by casing, which is why I\nsay the alias has to be treated as case-insensitive.\n\n   If it isn't fixable, this behavior should at least be documented in the SSL\n\"howto\" document beside the bold lettering which reminds readers that passwords\nare case-sensitive.",
    "created": "2006-11-27 22:15 UTC",
    "fixes": [
      "b23b029"
    ]
  },
  {
    "id": "BUG-41074",
    "summary": "Output of tag \"jsp:plugin\" is not conform to XHTML.",
    "description": "The jsp comiler outputs all tag required for an object in upper case letters. \nTo be conform with XHTML lower case is required, but all tags are hard coded in \nthe generator.",
    "created": "2006-11-29 05:35 UTC",
    "fixes": [
      "5f9c18d"
    ]
  },
  {
    "id": "BUG-40581",
    "summary": "Symbolic links not (re)followed when application is reloaded",
    "description": "When the path of the docBase of an application contains a symbolic link Tomcat\nstill consider the initial targeted folder after a reload.\n\nEx:\nwhen file system first contains:\n/foo/myApp_version1 (dir)\n/foo/myApp -> /foo/myApp_version1 (symbolic link)\n\nTomcat is started and then application myApp is stopped. Symbolic link is\nchanged to point to myApp_version2:\n/foo/myApp_version1 (dir)\n/foo/myApp_version2 (dir)\n/foo/myApp -> /foo/myApp_version2 (symbolic link)\n\nand finally application myApp is started. The problem is that the displayed web\napplication is still the one contained in /foo/myApp_version1 (the initially\ntargeted folder)and not the one contained in /foo/myApp_version2.",
    "created": "2006-09-22 12:29 UTC",
    "fixes": [
      "5448766"
    ]
  },
  {
    "id": "BUG-41089",
    "summary": "JspFactoryImpl has SPEC_VERSION = \"2.0\"",
    "description": "org.apache.jasper.runtime.JspFactoryImpl has \n\nprivate static final String SPEC_VERSION = \"2.0\";\n\nShould be:\n\nprivate static final String SPEC_VERSION = \"2.1\";",
    "created": "2006-11-30 10:12 UTC",
    "fixes": [
      "514256e"
    ]
  },
  {
    "id": "BUG-41008",
    "summary": "POST request ignores command line parameters",
    "description": "example:\n<form method=\"POST\" action=\"test.exe?test1\"><input type=\"hidden\"\nvalue=\"test2\"><input type=\"submit\"></form>\n\nthis code does invoke the test.exe without passing the test1 command line parameter\n\nthe example works in apache httpd and ms iis\n\nfix:\n\nCGIServlet.java\n\n           if (!\"GET\".equals(req.getMethod()) && !\"POST\".equals(req.getMethod()) &&\n                    !\"HEAD\".equals(req.getMethod()))\n                return;",
    "created": "2006-11-21 09:20 UTC",
    "fixes": [
      "b70962f"
    ]
  },
  {
    "id": "BUG-40999",
    "summary": "Unable to manage truststoreFile, truststorePass, truststoreType",
    "description": "It is impossible to manage of some attributes needed to confiure SSL connection\nusing JMX. Connector section in server.xml file may define truststoreFile,\ntruststorePass, truststoreType attributes to configure SSL connection. But these\nattributes are not available via JMX interface. \nFirst I have found that there is not description of these attributes in \n(%SRC_ROOT%\\container\\catalina\\src\\share\\org\\apache\\catalina\\connector\\mbeans-descriptors.xml)\nfile.\n \nAs result these attributes are not available to manage SSL connection using\nTomcat Administration Application.",
    "created": "2006-11-19 01:41 UTC",
    "fixes": [
      "195daaa"
    ]
  },
  {
    "id": "BUG-38198",
    "summary": "When using context xml definitions standalone file, tomcat wrongly uses the file name instead the context path definition",
    "description": "When deploying an application in Tomcat 5.5 (been observed in 5.5.8 but not in  \n5.0.30), using a context definition xml file, such as  \n<TOMCAT_CONF>/Catalina/hostname/myapp.xml, tomcat ignores the context path  \ndefinition in the XML file (i.e. <context path=\"/some/path\">) and instead uses  \nthe file name (i.e. \"myapp\" in this case) as the path.  \n  \nThis makes it impossible to create complex server configurations where  \napplications are hosted not under the root of the server, in addition to being  \nconfusing, counter-intuitive and just plain wrong.  \n \nThe behavior should be reverted to how it was handled under tomcat 5.0.",
    "created": "2006-01-09 16:24 UTC",
    "fixes": [
      "45b245f"
    ]
  },
  {
    "id": "BUG-40901",
    "summary": "listings page does not escape XML characters",
    "description": "On Solaris you can have a file or directory name called \"<b>xxx\" or \"<i>yyy\".\nUsing Tomcat's listings feature, you get a directory listing with the file name\nin bold or italics.\n\nI am not familiar with Javascript or cross-site scripting security problems, but\nI believe Tomcat escapes XML characters like \">\" and \"<\" to prevent client\nbrowsers to interpret HTML codes that are not intended to be interpreted as such\nfor the default error page.\nI think the same should be done for listings, or a warning should be added to\nthe documentation not to use it if you have no control over the file/directory\nnames you list.",
    "created": "2006-11-05 20:38 UTC",
    "fixes": [
      "cb2c655"
    ]
  },
  {
    "id": "BUG-40929",
    "summary": "Misleading comments in StandardClassLoader",
    "description": "Sometime during the Tomcat 5 development, the StandardClassLoader in\norg.apache.catalina.loader package was stripped down, and is now just a\nURLClassLoader.\n\nI work with code that extends the StandardClassLoader (we use the automatic\nreloading of jar files), and during an upgrade from tomcat 4 to tomcat 5.5 found\ndifficultly trying to figure out what had happened to the code.  I ended up\nhaving to install SVN and do a svn log to figure out why the code was removed.\n\nWhen the code was stripped down, the comments in the java file (and therefore in\nthe javadoc api) remained identical, so the javadoc api for the class is very\nmisleading.  For instance, the comments say that the class implements Reloader,\nwhen it in fact does not.\n\nThe class comments should be updated to reflect the state of the code.\n\nI can't see this as being very high priority, but it would likely be an easy to\nfix for people whom are in the code regularly, and it would make the javadoc\nmuch more readable for people that extend the StandardClassLoader for their own\npurposes.",
    "created": "2006-11-08 14:23 UTC",
    "fixes": [
      "6009702"
    ]
  },
  {
    "id": "BUG-40860",
    "summary": "Tomcat loses request parameters",
    "description": "Hi,\n\nI\u2019m having a problem with parameters loses in tomcat. It\u2019s an intermittent\nproblem. That occurs when I do some ajax\u2019s request and then I do one or more\nform submissions. \n\nI put the tomcat in debug mode and  I observed the class CoyoteAdapter \u2013 the\nmethod service(). There exists a request variable (CoyoteRequest type) that has\na protected variable requestParametersParsed that is a flag to parse or not\nparse the parameters of a post or get. In the end of the method exists a\n\u2018finally\u2019 clause that force the request variable to do a recycle. The recycle\nforces the requestParametersParsed variable to change to false. Then in the next\nutilization of the class the parameters will be parsed again. \n\nThe problem that I\u2019ve found is in some situations (as described at the start)\nthe requestParametersParsed variable is true and the parameters are not parsed. \n\nThe consequence of this is that in my servlet when I ask request.getParameter(\u2026)\nand it returns null but in my query string or in my post data has the parameter.\nThe prove of that is when I ask request.getQueryString() and it returns a not\nempty string with my parameter.\n\nEx:\n\nrequest.getQueryString() = servlet?param=x\nrequest.getParameter(\u2018param\u2019) = null\n\n\nSee a pierce of the method service of CoyoteAdapter:\n \n    public void service(Request req, Response res)\n        throws Exception {\n\n\u2026\n        try {\n\n            // Parse and set Catalina and configuration specific\n            // request parameters\n            if ( postParseRequest(req, request, res, response) ) {\n                // Calling the container\n                connector.getContainer().invoke(request, response);\n            }\n\n\u2026\n        } finally {\n            // Recycle the wrapper request and response\n            request.recycle();\n            response.recycle();\n        }\n\n    }\n\nAt line \u201cif postParseRequest(\u2026\u201d the request. requestParametersParsed must be\nfalse but in some situations it is true!\n\nI cant find the cause of the problem but I found the problem. To resolve my\nproblem I put a request.recycle(); before the line to force the\nrequestParametersParsed  variable to false.\nI don\u2019t want to have a tomcat modified by me. Its not good. \n\nSee the post\nhttp://mail-archives.apache.org/mod_mbox/tomcat-dev/200601.mbox/%3C43D11EAA.1090905@amazon.com.br%3E\nHe is having the same problem.\n\nThanks\n\nThiago",
    "created": "2006-11-01 04:29 UTC",
    "fixes": [
      "e713e77"
    ]
  },
  {
    "id": "BUG-37509",
    "summary": "ClassLoaderLogManager remove '\\n' at the end of logging.properties values",
    "description": "The method ClassLoaderLogManager.replace(String) that is in charge of replacing\nsystem properties at the begining of the property also modify the end of the\nproperty due to a call to trim.\n\nThis implies that Logger/Handler/Formatter that relies on properties endding\nwith some spases (including '\\n') will have a different behaviour with JDK\nLogManger and tomcat ClassLoaderLogManager\n\na modified verstion of this method could be:\n\n    protected String replace(String str) {\n// start modification    \t\n//        String result = str.trim();  // commented out\n    \t\n    \tint len = str.length();\n    \tint st = 0;\n    \twhile ((st < len) && (str.charAt(st) <= ' ')) {\n    \t    st++;\n    \t}\n    \tString result = (st > 0) ? str.substring(st) : str;\n// end modification        \n        \n        if (result.startsWith(\"${\")) {\n            int pos = result.indexOf('}');\n            if (pos != -1) {\n                String propName = result.substring(2, pos);\n                String replacement = System.getProperty(propName);\n                if (replacement != null) {\n                    result = replacement + result.substring(pos + 1);\n                }\n            }\n        }\n        return result;\n    }",
    "created": "2005-11-15 18:22 UTC",
    "fixes": [
      "a6d6962"
    ]
  },
  {
    "id": "BUG-40844",
    "summary": "JDBCRealm.getPassword throws NullPointerException",
    "description": "JDBCRealm.getPassword throws NullPointerException\n\nI'm using tomcat 5.5.20 with postgresql-8.1-407.jdbc3.jar and postgresql-8.1.4\non Ubuntu Dapper. Authenticating two users simultaneously with HTTP DIGEST\ncauses sometimes the following errors and a 401 Unauthorized reply:\n\n30.10.2006 14:24:54 org.apache.catalina.realm.JDBCRealm getPassword\nSEVERE: Exception performing authentication\norg.postgresql.util.PSQLException: ERROR: invalid message format\n        at\norg.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:1525)\n        at\norg.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1309)\n        at\norg.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:188)\n        at\norg.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:452)\n        at\norg.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:354)\n        at\norg.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:258)\n        at org.apache.catalina.realm.JDBCRealm.getPassword(JDBCRealm.java:546)\n        at org.apache.catalina.realm.RealmBase.getDigest(RealmBase.java:1156)\n        at org.apache.catalina.realm.RealmBase.authenticate(RealmBase.java:365)\n        at\norg.apache.catalina.authenticator.DigestAuthenticator.findPrincipal(DigestAuthenticator.java:282)\n        at\norg.apache.catalina.authenticator.DigestAuthenticator.authenticate(DigestAuthenticator.java:175)\n        at\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n        at\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)\n        at\norg.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)\n        at\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\n        at\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:595)\n30.10.2006 14:24:54 org.apache.catalina.connector.CoyoteAdapter service\nSEVERE: An exception or error occurred in the container during the request\nprocessing\njava.lang.NullPointerException\n        at org.apache.catalina.realm.JDBCRealm.getPassword(JDBCRealm.java:568)\n        at org.apache.catalina.realm.JDBCRealm.getPrincipal(JDBCRealm.java:594)\n        at org.apache.catalina.realm.RealmBase.authenticate(RealmBase.java:398)\n        at\norg.apache.catalina.authenticator.DigestAuthenticator.findPrincipal(DigestAuthenticator.java:282)\n        at\norg.apache.catalina.authenticator.DigestAuthenticator.authenticate(DigestAuthenticator.java:175)\n        at\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n        at\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)\n        at\norg.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)\n        at\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\n        at\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:595)",
    "created": "2006-10-30 06:25 UTC",
    "fixes": [
      "be9d523"
    ]
  },
  {
    "id": "BUG-34956",
    "summary": "Tomcat should enforce the requirements from servlet 2.4 specification SRV.8.2",
    "description": "Tomcat should enforce the requirements from servlet 2.4 specification SRV.8.2\n\nSRV.8.2 Using a Request Dispatcher\n\n\"To use a request dispatcher, a servlet calls either the include method or\nforward method of the RequestDispatcher interface. The parameters to these\nmethods can be either the request and response arguments that were passed in via\nthe service method of the Servlet interface, or instances of subclasses of the\nrequest and response wrapper classes that have been introduced for version 2.3\nof the specification. In the latter case, the wrapper instances must wrap the\nrequest or response objects that the container passed into the service method.\nThe Container Provider must ensure that the dispatch of the request to a target\nservlet occurs in the same thread of the same VM as the original request\"\n\nJustification:\n==============\nThe absense of this enforcement leads to software beeing developed not following\nthe specification. The software cannot be deployed later on a container which\nconforms to the above paragraph and hence must be changed before deployment.\nThis somehow contradicts the idea of having a standards based infrastructure.",
    "created": "2005-05-18 14:47 UTC",
    "fixes": [
      "22d1ad7"
    ]
  },
  {
    "id": "BUG-40817",
    "summary": "servlet-cgi throws index out of bounds exception on certain cgi",
    "description": "First, servlets-cgi.jar needs to exist and the servlet must be mapped:\nfor example:\n <servlet-mapping>\n   <servlet-name>cgi</servlet-name>\n   <url-pattern>*.pl</url-pattern>\n </servlet-mapping>\n\nTest perl cgi script:\n #!/usr/bin/perl\n print \"Content-type: text/plain\", \"\\n\\n\";\n print \"Hello world, from Perl\\n\";\n\nOne perl script is placed in www-root (\"/test.pl\") and the other in any\nsubfolder (\"/test/test.pl\" or \"/cgi-bin/test.pl\", etc.)\n\nThe cgi script in the subfolder will run fine.\nThe cgi script in the www-root will generate an exception:\njava.lang.StringIndexOutOfBoundsException: String index out of range: -1\n\tjava.lang.String.substring(String.java:1768)\n\tjava.lang.String.substring(String.java:1735)\n\torg.apache.catalina.servlets.CGIServlet$CGIEnvironment.findCGI(CGIServlet.java:948)\n\torg.apache.catalina.servlets.CGIServlet$CGIEnvironment.setCGIEnvironment(CGIServlet.java:1015)\n\torg.apache.catalina.servlets.CGIServlet$CGIEnvironment.<init>(CGIServlet.java:766)\n\torg.apache.catalina.servlets.CGIServlet.doGet(CGIServlet.java:584)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:689)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\n\nThe problem is this line (line 948 in CGIServlet.java):\n\ncginame =              \ncurrentLocation.getParent().substring(webAppRootDir.length())+ File.separator +\nname;\n\nThe problem is that webAppRootDir is 1 char longer than\ncurrentLocation.getParent() because webAppRootDir ends with a File.separator (in\nthis case, a \"/\").  And removing the extra File.separator from webAppRootDir\nwill result in a different String related exception elsewhere.\n\nAnd here's a fix that works:\n\ncginame = (currentLocation.getParent() + \nFile.separator).substring(webAppRootDir.length()) + name;\n\n(If necessary, the fix can be made more adaptive by checking to see if it really\ndoes have a File.separator at the end and if not...add it...otherwise, let it\nbe, etc.)\n\n(on a side note, I have one more bug to fix; the ENV_VAR \"SCRIPT_FILENAME\" isn't\ndefined as it should be [required for PHP4/5] but I'll submit a different\nbug/fix for that.)",
    "created": "2006-10-25 20:02 UTC",
    "fixes": [
      "6d274b4"
    ]
  },
  {
    "id": "BUG-40823",
    "summary": "Specifying default context w/empty path outside of server.xml",
    "description": "The documentation (http://tomcat.apache.org/tomcat-5.5-\ndoc/config/context.html) encourages users to define their context's outside of \nthe server.xml file to enable hot-deployments.  The documentation also \nsays \"If you specify a context path of an empty string (\"\"), you are defining \nthe default web application for this Host, which will process all requests not \nassigned to other Contexts\"  Unfortunately, unless the context is defined \ninside the server.xml file, Tomcat doesn't recognize the empty string path \nvalue.  The workaround suggested on the user mailing list was:\nTo specify the default app, you must first delete the existing webapps/ROOT \ndirectory, then install your app in webapps/ROOT (or webapps/ROOT.war) or put \nyour <Context> element in conf/[engine]/[host]/ROOT.xml.\n\nThis bug is to request the documentation be updated to include the \ninstructions for specifying the default context when it's defined physically \noutside of the server.xml file.  \n\nThe dev mailing list indicated this is also how Tomcat 6 works.",
    "created": "2006-10-26 13:05 UTC",
    "fixes": [
      "3c78f46"
    ]
  },
  {
    "id": "BUG-37439",
    "summary": "Virtual Host selection across Services?",
    "description": "I have a TC 5.5 fronted by Apache2/mod_jk.\nTwo SSL sites on different ips, one for users, one for admins. The admin one is\napache password protected. Each apache ip virtual host uses a different worker\nto talk to TC on a different port in a different service. for example\n\n<Service name=\"User\">\n <Connector scheme=\"https\" secure=\"true\" address=\"127.0.0.1\" port=\"10004\"\ndebug=\"0\" useURIValidationHack=\"false\" protocol=\"AJP/1.3\"/>\n <Engine name=\"Standalone\" defaultHost=\"User\" debug=\"0\">\n  <Host name=\"User\" debug=\"0\" appBase=\"webapps/SomethingUser\" unpackWARs=\"false\">\n   <Context blahblah/>\n  </Host>\n </Engine>\n</Service>\n\n<Service name=\"Admin\">\n <Connector scheme=\"https\" secure=\"true\" address=\"127.0.0.1\" port=\"10005\"\ndebug=\"0\" useURIValidationHack=\"false\" protocol=\"AJP/1.3\"/>\n <Engine name=\"Standalone\" defaultHost=\"Admin\" debug=\"0\">\n  <Host name=\"Admin\" debug=\"0\" appBase=\"webapps/SomethingAdmin\" unpackWARs=\"false\">\n   <Context blahblah/>\n  </Host>\n </Engine>\n</Service>\n\nThe problem, and it may be intended behavior, is that if you connect to ip1 and\nspoof your Host header as 'Admin', apache correctly routes the request (jk in\ndebug says it connects via 10004) to TC via the User worker, but then TC appears\nto match the virtual host name in a different service and serves admin content\ngetting around Apache's password protection.\nVia browsing a lot of bugs tonight I'm aware of the useIPVHost element which I\ncould probably use to lock each host to the host apache intended, but this can't\nbe intended behaviour. Can it? Across Service tags? Why would you ever need more\nthan one service or connector then?\n\nHopefully at the very least this will spur a note in the docs. if it is\nintended, as this is potentially dangerous. LMK if you need anything else to\nreproduce.",
    "created": "2005-11-10 07:03 UTC",
    "fixes": [
      "598f14d"
    ]
  },
  {
    "id": "BUG-37458",
    "summary": "Datarace on org.apache.catalina.loader.WebappClassLoader",
    "description": "In findClassInternal, it is possible that entry.manifest is set to null by \nanother thread right before calling definePackage(packageName, entry.manifest, \nentry.codeBase).",
    "created": "2005-11-10 21:34 UTC",
    "fixes": [
      "79631bb"
    ]
  },
  {
    "id": "BUG-39436",
    "summary": "Duplicate and Incorrect MIME Type for SVG",
    "description": "Tomcat has multiple entries for the SVG MIME Type (such as it is), including the\ndefunct \"image/svg-xml\".\n\nPlease correct it so that .svg and .svgz are both listed with the correct MIME\nType (\"image/svg+xml\") and remove the duplicate, incorrect reference to\n\"image/svg-xml\".",
    "created": "2006-04-27 21:12 UTC",
    "fixes": [
      "c166907"
    ]
  },
  {
    "id": "BUG-40771",
    "summary": "Can't read POST data from within a filter or valve",
    "description": "I was attempting to create a Filter or Valve that could be placed in front of an\nAxis web service that would handle security according to the WS-Security\nspecification. That turned out to be a rabbit trail, but I did find and fix a\nbug that I discovered along the way. \n\nI ran into problems reading POST data (the web service request) from the\norg.apache.catalina.connector.Request object exposed in the Filter/Valve\ninterfaces. This is a chunk of code in a prototype Valve that didn't work:\n\nprivate ByteChunk getPOSTBody(Request request)\n      throws IOException\n  {\n    ByteChunk retval = new ByteChunk(request.getContentLength());\n    ByteChunk body = new ByteChunk(request.getContentLength());\n\n    int bytesRead;\n    do\n    {\n      bytesRead = request.getCoyoteRequest().doRead(body);\n      retval.append(body);\n    }\n    while (bytesRead >= 0) ;\n\n    //puts the data back into the pipe.\n    request.getCoyoteRequest().action\n        (ActionCode.ACTION_REQ_SET_BODY_REPLAY, retval);\n\n    return retval;\n  }\n\nThis code works as designed, however the problem occurs later on when Axis\nattempted to parse the web service request. I don't remember the exact Axis\nerror, but I was able to track the problem down to a bug in the\norg.apache.coyote.http11.filters.SavedRequestInputFilter class. The doRead\nmethod was not properly implemented to return a -1 when appropriate.\n\nHere is my modified version of the doRead method:\n\npublic int doRead(ByteChunk chunk, org.apache.coyote.Request request)\n            throws IOException {\n        int writeLength = 0;\n        \n        if (chunk.getLimit() > 0 && chunk.getLimit() < input.getLength()) {\n            writeLength = chunk.getLimit();\n        } else {\n        \twriteLength = input.getLength();\n        }\n        if(input.getOffset()>= input.getEnd())\n            return -1;\n\n        input.substract(chunk.getBuffer(), 0, writeLength);\n        chunk.setOffset(0);\n        chunk.setEnd(writeLength);\n        \n        return writeLength;    \n    }\n\n\nThis bug won't show up unless someone tries to use a filter/valve to do\nsomething with web services. That's not too likely because that's what we have\nSOAPHandlers for.",
    "created": "2006-10-16 16:08 UTC",
    "fixes": [
      "17eecdb"
    ]
  },
  {
    "id": "BUG-39724",
    "summary": "Bug on StandardPipeline.removeValve(Valve valve) for T5.5.16+",
    "description": "I run into this problem with T5 when tring to add/remove/add a valve to the\nstandard engine. -For what I understand an empty pipeline has:\nbasic = StandardEngineValve (For example);\nfirst = null;\n\n-If you add a valve you will get\nbasic = StandardEngineValve\nfirst = myValve (with myValve.next = StandardEngineValve)\n\n-If you remove the valve you will get\nbasic =StandardEngineValve\nfirst = StandardEngineValve\nNote that StandardEngineValve is in first too here.\n\n-If I try to add a new valve given the actual code in  addValve the valve will\nnot be added because (see the **) current = basic and current.getNext() = null;\n\naddValve(Valve valve) {\n \n       // Add this Valve to the set associated with this Pipeline\n       if (first == null) {\n           first = valve;\n           valve.setNext(basic);\n       } else {\n           Valve current = first;\n           while (current != null) {\n**                if (current.getNext() == basic) {\n                   current.setNext(valve);\n                   valve.setNext(basic);\n                   break;\n               }\n               current = current.getNext();\n           }\n       }\n\n   }",
    "created": "2006-06-05 14:01 UTC",
    "fixes": [
      "b18c29e"
    ]
  },
  {
    "id": "BUG-40528",
    "summary": "missing error message localisations",
    "description": "The following two error messages are used in JspRuntimeLibrary.java, but are missing from org/apache/\njasper/resources/LocalStrings.properties.\n\nGoogle gave me two values that seem to be about right:\n\njsp.error.beans.property.conversion=Unable to convert string \\\"{0}\\\" to class \\\"{1}\\\" for attribute \\\"{2}\\\": \n{3}\nsp.error.beans.propertyeditor.notregistered=Property Editor not registered with the \nPropertyEditorManager",
    "created": "2006-09-17 03:50 UTC",
    "fixes": [
      "d3f8ad3"
    ]
  },
  {
    "id": "BUG-29727",
    "summary": "JNDI env-entry not reload when context reloaded",
    "description": "If environment entries are changed in web.xml, and the application context is \nrestarted, the values in the JNDI context are the old values.\n\nIf the environment entries are changed via the Tomcat 'admin' interface, then \nthe values provided to the context are correct.\n\nThe following code is can be used to check the environment:\n\n        try {\n            InitialContext ic = new InitialContext();\n            NamingEnumeration enum = ic.listBindings(\"java:comp/env\");\n\n            while (enum.hasMore()) {\n                Binding binding = (Binding) enum.next();\n                jndi.setProperty(binding.getName(), \"\" + binding.getObject());\n                System.out.println(\"jndi setting: \" + binding.getName() + \"=\" \n+ binding.getObject());\n            }\n        } catch (NamingException e) {\n            System.err.println(\"unable to read JNDI settings, \" + e);\n        }\n\n\nThe web.xml fragment looks as follows:\n\n\t<env-entry>\n\t\t<env-entry-name>DatabaseURL</env-entry-name>\n\t\t<env-entry-value>jdbc:hsqldb:hsql://localhost</env-entry-value>\n\t\t<env-entry-type>java.lang.String</env-entry-type>\n\t</env-entry>",
    "created": "2004-06-21 22:56 UTC",
    "fixes": [
      "1a5e6e7"
    ]
  },
  {
    "id": "BUG-40518",
    "summary": "The message key \"requestListenerValve.requestInit\" has not be referred to correctly.",
    "description": "The bug is:\n\nAn illegal message is output to the log when the listener application that \nimplements ServletRequestListener interface throws RuntimeException from the \nrequestInitialized method or the requestDestroyed method.\n\nmessage: \"Cannot find message associated with key \nrequestListenerValve.requestInit\"\n\ncause: The key exists in the properties \nfile \"org.apache.catalina.valves.LocalStrings.properties\", but the logic refers \nother properties file \"org.apache.catalina.core.LocalStrings.properties\"",
    "created": "2006-09-15 09:13 UTC",
    "fixes": [
      "fda223a"
    ]
  },
  {
    "id": "BUG-34399",
    "summary": "Undeploying fails when context defined in server.xml & server fails to stop",
    "description": "Steps to reproduce: \n \n1. autodeploy a web application by defining its context in server.xml \n2. start the Tomcat server \n3. use the Tomcat Manager to undeploy the application \n \nYou will get the \"OK - Undeployed application at context path /WebApplication\" \nmessage, but the application will NOT be undeployed, it will be only stopped. \n \nIf you try to stop the server after that, it will fail! \n \nI have used the shared installation (CATALINA_BASE dir), but I guess this \nwon't work for standalone Tomcat isntallation either.",
    "created": "2005-04-11 16:32 UTC",
    "fixes": [
      "9dd8a23"
    ]
  },
  {
    "id": "BUG-34509",
    "summary": "tag names that are xml:Name but not java identifier are not accepted",
    "description": "According to the JSP 2.0 specification, custom tag prefix and name should be \nof the type XML:Name. However, for Tomcat 5.5.8, if the name is not a legal \njava identifier, then a compilation error occurs. For instance, Tomcat won't \naccept Da~te`T#ag as a legal name for the Tag.",
    "created": "2005-04-19 00:45 UTC",
    "fixes": [
      "823101d"
    ]
  },
  {
    "id": "BUG-33356",
    "summary": "Incorrect parsing of tag attributes",
    "description": "I get a org.apache.jasper.JasperException: with the error: \"The function string \nmust be used with a prefix when a default namespace is not specified\" when \ntrying to compile the following within a JSP page:\n\n<foo:set var=\"bar\" value=\"this $ is a { silly string (\"/>\n\n\"foo\" is our own tablib, it seems that Jasper seems to think that the string \nprovided to the value attribute contains some JSP/EL which it does not.\n\nIf I change the page to be:\n\n<c:set var=\"bar\" value=\"this $ is a { silly string (\"/>\n\nThen I do not get this error. However I need to use my own taglib.\nIn the foo.tld file, the \"value\" attribute of \"set\" has rtexprvalue=true.\nIf I set this to false then the problem goes away. However I noticed that c.tld \nin standard.jar also has rtexprvalue=true for the \"value\" attribute of \"set\". \nWhy the difference in behaviour ? We also wish to have rtexprvalue=true.",
    "created": "2005-02-02 14:55 UTC",
    "fixes": [
      "b55e9c2"
    ]
  },
  {
    "id": "BUG-31804",
    "summary": "setParent() is not called on nested tags in a tag file (.tagx)",
    "description": "Hi, everybody.\n\nSuppose I have a tag file (.tagx to be precise). I have some custom tags of mine \nincluded in that tag file. If I override setParent() in such a custom tag, then \nI see, that it's invoked with \"null\" parameter. Custom tag is a \"Classic\" tag \n(extends TagSupport).\n\nSimplified example: This tag file is called \"submit.tagx\"\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jsp:root xmlns:jsp=\"http://java.sun.com/JSP/Page\" xmlns:custom=\"http://my.com/\ntags-html\" version=\"2.0\" >\n\n    <jsp:directive.tag body-content=\"empty\"/>\n    <jsp:directive.attribute name=\"action\" required=\"true\" rtexprvalue=\"true\"/>\n    <jsp:directive.attribute name=\"label\" required=\"true\" rtexprvalue=\"true\"/>\n\n    <custom:submit action=\"${action}\" label=\"${label}\" name=\"submitButton\" />\n\n</jsp:root>\n\nIn debug output from setParent(Tag) of custom:submit I see, that it's called \nwith \"null\" value.\n\nIf, instead of custom:submit, I put there another custom tag, which follows \nSimpleTagSupport model, then setParent(JspTag) is not called at all!!!\n\nI would expect a reference to something, representing translated class of Tag \nFile (submit.tagx) is passed.\n\nAs the result, tag nesting tree is broken. \n\nI need to access Struts html:form tag, which is the embracing tag from my inner \n<custom:submit> tag to obtain form name, but this is not possible.\n\n<nested:form action=\"/Action\">\n   <ctrl:submit action=\"save\" label=\"Save\"/>\n</nested:form>\n\n(where ctrl:submit is submit.tagx)",
    "created": "2004-10-20 16:26 UTC",
    "fixes": [
      "2d6d717"
    ]
  },
  {
    "id": "BUG-38713",
    "summary": "java.io.IOException: tmpFile.renameTo(classFile) failed when compiling new JSP (upon redeploy)",
    "description": "[http-8080-Processor24 ERROR 26902165 DispatcherServlet.serviceWrapper()] -\nCould not complete request\norg.apache.jasper.JasperException: Unable to compile class for JSP\n        at\norg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:565)\n        at\norg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:293)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:291)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:241)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at\norg.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)\n        at\norg.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)\n        at\norg.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)\n        at\norg.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)\n        at\norg.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:97)\n        at\norg.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250)\n        at\norg.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:928)\n        at\norg.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:705)\n        at\norg.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:625)\n        at\norg.springframework.web.servlet.FrameworkServlet.serviceWrapper(FrameworkServlet.java:386)\n        at\norg.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:346)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n        at\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\n        at\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)\n        at\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\n        at\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:595)\n[http-8080-Processor24 ERROR 26902165 [wirelessapp].invoke()] -\nServlet.service() for servlet wirelessapp threw exception\njava.io.IOException: tmpFile.renameTo(classFile) failed\n        at\norg.apache.jasper.compiler.SmapUtil$SDEInstaller.install(SmapUtil.java:245)\n        at org.apache.jasper.compiler.SmapUtil.installSmap(SmapUtil.java:164)\n        at\norg.apache.jasper.compiler.AntCompiler.generateClass(AntCompiler.java:267)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:288)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:267)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:255)\n        at\norg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:556)\n        at\norg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:293)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:291)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:241)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at\norg.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)\n        at\norg.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)\n        at\norg.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)\n        at\norg.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)\n        at\norg.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:97)\n        at\norg.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250)\n        at\norg.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:928)\n        at\norg.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:705)\n        at\norg.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:625)\n        at\norg.springframework.web.servlet.FrameworkServlet.serviceWrapper(FrameworkServlet.java:386)\n        at\norg.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:346)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n        at\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\n        at\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)\n        at\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\n        at\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:595)",
    "created": "2006-02-20 08:08 UTC",
    "fixes": [
      "c7f0f60"
    ]
  },
  {
    "id": "BUG-39704",
    "summary": "context with privileged=\"true\" do not setup properly inner loaders",
    "description": "Tomcat 5.5.17. When specifying in TOMCAT/conf/context.xml a loader tag, context\nwith privileged=\"true\" are not properly setup.\n\nFor example with this TOMCAT/conf/context.xml:\n[quote]\n<!-- The contents of this file will be loaded for each web application -->\n<Context>\n    <!-- Default set of monitored resources -->\n    <WatchedResource>WEB-INF/web.xml</WatchedResource>\n    <!-- * ADD THIS *  -->\n\t <Loader />\n    <!-- Uncomment this to disable session persistence across Tomcat restarts-->\n    <!--\n    <Manager pathname=\"\" />\n    -->\n\n</Context>\n[/quote]\n\ngives the following error at startup:\nERROR Exception starting filter BalancerFilter -\norg.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3604)\njava.lang.NoClassDefFoundError: org/apache/tomcat/util/digester/Digester\n\tat org.apache.webapp.balancer.RulesParser.createDigester(RulesParser.java:65)\n\tat org.apache.webapp.balancer.RulesParser.<init>(RulesParser.java:43)\n\tat org.apache.webapp.balancer.BalancerFilter.init(BalancerFilter.java:79)\n\tat\norg.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:223)\n\tat\norg.apache.catalina.core.ApplicationFilterConfig.setFilterDef(ApplicationFilterConfig.java:304)\n\tat\norg.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:77)\n\tat org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3600)\n\tat org.apache.catalina.core.StandardContext.start(StandardContext.java:4193)\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:759)\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:739)\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)\n\tat org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:904)\n\tat org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:867)\n\tat org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:474)\n\tat org.apache.catalina.startup.HostConfig.start(HostConfig.java:1122)\n\tat org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:310)\n\tat\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1021)\n\tat org.apache.catalina.core.StandardHost.start(StandardHost.java:718)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1013)\n\tat org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)\n\tat org.apache.catalina.core.StandardService.start(StandardService.java:450)\n\tat org.apache.catalina.core.StandardServer.start(StandardServer.java:709)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:551)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:294)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:432)\nERROR Error filterStart -\norg.apache.catalina.core.StandardContext.start(StandardContext.java:4194)\nERROR Context [/balancer] startup failed due to previous errors -\norg.apache.catalina.core.StandardContext.start(StandardContext.java:4215)\n\nNote that this is a default install w/o any custom webapps just with the empty\nloader tag added.\n\nIt seems that the digester rules do not handle this case appropriately.",
    "created": "2006-06-02 09:48 UTC",
    "fixes": [
      "9930ead"
    ]
  },
  {
    "id": "BUG-39592",
    "summary": "SSI does not correctly process HEAD request",
    "description": "Hello,\n\nI think there is a small bug in Tomcat 5.0 and 5.5 (at least I could see it already with many versions of \nTomcat).\n\nI use SSI \n          org.apache.catalina.ssi.SSIServlet\n\nand\n\n     <param-name>isVirtualWebappRelative</param-name>\n          <param-value>1</param-value>\n\n\nAll my pages (*.html) are processed by the SSI\n        <url-pattern>*.html</url-pattern>\n\nIf there is a normal GET request, SSI compiles a page and everything is just OK.\n\nHowever, for  the HEAD request to the same page (there is no need to compile the page) the SSI still \ntries to do it and generates a number of exceptions (see enclosed).\n\nThis error is not critical but overloads my catalina.out file. I do not think that it is difficult to fix it.\n\nI already reported this error to tomcat-dev, but decided to create a formal \"bug\" report at ASF Bugzilla \nto see if it was already fixed or not. This is not a big error, but it is annoying.\n\nThanks!\n\nWith the best regards,\nIgor Tetko\n\n*****\n\nApr 28, 2006 11:26:45 AM org.apache.catalina.core.ApplicationContext log\nSEVERE: #include--Couldn't include file: styles.html\njava.io.IOException: Couldn't find file: /incl/styles.html\n        at org.apache.catalina.ssi.SSIServletExternalResolver.getFileText(SSIServletExternalResolver.java:\n537)\n        at org.apache.catalina.ssi.SSIMediator.getFileText(SSIMediator.java:155)\n        at org.apache.catalina.ssi.SSIInclude.process(SSIInclude.java:44)\n        at org.apache.catalina.ssi.SSIProcessor.process(SSIProcessor.java:146)\n        at org.apache.catalina.ssi.SSIServlet.processSSI(SSIServlet.java:221)\n        at org.apache.catalina.ssi.SSIServlet.requestHandler(SSIServlet.java:187)\n        at org.apache.catalina.ssi.SSIServlet.doGet(SSIServlet.java:123)\n        at javax.servlet.http.HttpServlet.doHead(HttpServlet.java:270)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:706)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)\n        at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:574)\n        at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:499)\n        at org.apache.catalina.ssi.SSIServletExternalResolver.getFileText(SSIServletExternalResolver.java:\n519)\n        at org.apache.catalina.ssi.SSIMediator.getFileText(SSIMediator.java:155)\n        at org.apache.catalina.ssi.SSIInclude.process(SSIInclude.java:44)\n        at org.apache.catalina.ssi.SSIProcessor.process(SSIProcessor.java:146)\n        at org.apache.catalina.ssi.SSIServlet.processSSI(SSIServlet.java:221)\n        at org.apache.catalina.ssi.SSIServlet.requestHandler(SSIServlet.java:187)\n        at org.apache.catalina.ssi.SSIServlet.doGet(SSIServlet.java:123)\n        at javax.servlet.http.HttpServlet.doHead(HttpServlet.java:270)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:706)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n        at org.apache.catalina.valves.FastCommonAccessLogValve.invoke\n(FastCommonAccessLogValve.java:495)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)\n        at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection\n(Http11BaseProtocol.java:664)\n        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\n        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt\n(LeaderFollowerWorkerThread.java:80)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:613)",
    "created": "2006-05-16 17:40 UTC",
    "fixes": [
      "0f9844c"
    ]
  },
  {
    "id": "BUG-40053",
    "summary": "documentation of shared lib location is inconsistent",
    "description": "http://tomcat.apache.org/tomcat-5.5-doc/appdev/deployment.html:\nthe shared lib is said to be in $CATALINA_HOME/shared\n\nhttp://tomcat.apache.org/tomcat-5.5-doc/appdev/deployment.html\nthe shared lib is said to be in $CATALINA_BASE/shared/\n\n\"All unpacked classes and resources in $CATALINA_BASE/shared/classes, as well as\nclasses and resources in JAR files under $CATALINA_BASE/shared/lib,...\"\n\n$CATALINA_BASE/shared/ is correct, therefore \nhttp://tomcat.apache.org/tomcat-5.5-doc/appdev/deployment.html\nshould be corrected.",
    "created": "2006-07-16 20:35 UTC",
    "fixes": [
      "df639cb"
    ]
  },
  {
    "id": "BUG-39689",
    "summary": "Tomcat Server Side Includes (SSI) do not work with single quotes",
    "description": "In http://httpd.apache.org/docs/2.0/en/mod/mod_include.html (apache 2.0 SSI\ndocumentation) you can read:\n\n\"The value [of an attribute value] will often be enclosed in double quotes, but\nsingle quotes (') and backticks (`) are also possible.\"\n\nTomcat SSI support is suposed to implement the same SSI directives as Apache.\nUnfortunately, it is not possible to enclose attribute values in single quotes.\n\nThank you very much for reading this bug report.",
    "created": "2006-05-31 07:46 UTC",
    "fixes": [
      "8ed77be"
    ]
  },
  {
    "id": "BUG-39865",
    "summary": "Not able to open Openoffice files",
    "description": "I am using tomcat 5.5. When I use to open the openoffice files (.odp, .odb, \netc.,) files the files are not opening and just appearing a small ican in the \ntop lesthand corner of the Internet Explorer browser.\n\nPlease help to fix this issue\n\n\nThanks\n\nregards\nkumar",
    "created": "2006-06-22 14:59 UTC",
    "fixes": [
      "2ba5e6a"
    ]
  },
  {
    "id": "BUG-39769",
    "summary": "Wrong class loader when the myServlet.destroy() called if myServlet is in the T5 shared directory",
    "description": "Hi all,\n\n  My web app needs to have Thread.currentThread().getContextClassLoader() always\nright.  When the application is unload it seem not be the case. \n\nMy classes are under the T5's shared directory (so all my\nservlet.getClass().getClassLoader() == the shared classloader i.e.:\nStandardCalssLoader.\n\nMy understanding is that when executing the code in my web app\nThread.currentThread().getContextClassLoader() should always give the\nWebappLoader used in the StandardContext.\n\nThe problem occurs in StandardWrapper.unload()  before calling the\nservlet.destroy() method\n\n....\n        ClassLoader oldCtxClassLoader =\n            Thread.currentThread().getContextClassLoader();\n        ClassLoader classLoader = instance.getClass().getClassLoader();\n\n        PrintStream out = System.out;\n        if (swallowOutput) {\n            SystemLogHandler.startCapture();\n        }\n\n        // Call the servlet destroy() method\n        try {\n            instanceSupport.fireInstanceEvent\n              (InstanceEvent.BEFORE_DESTROY_EVENT, instance);\n\n            Thread.currentThread().setContextClassLoader(classLoader);\n            if( System.getSecurityManager() != null) {\n                SecurityUtil.doAsPrivilege(\"destroy\",\n                                           instance);\n                SecurityUtil.remove(instance);                          \n            } else {\n                instance.destroy();\n            }\n\n....\n\nIn the code, the INSTANCE variable is my servlet and it have been loaded by the\nSHARED classloader.  So the classloader set in the thread is not the right one.\n It Should be the classloader related to StandardContext.getLoader()\n\nThis problem occurs when I try to close my T5 dos windows and I suppose will\noccurs when I will uninstall any webApp from my T5.\n\nI notice the problem in T5 5.5.16 but I verified and it's the same code in\n5.5.17.  So probably the problem is still there\n\n\nBest Regards\n/David Gagnon",
    "created": "2006-06-09 20:09 UTC",
    "fixes": [
      "276e5ac"
    ]
  },
  {
    "id": "BUG-39752",
    "summary": "Tomcat 5.5.17 SSI ignores request for .shtml",
    "description": "I followed the instructions for enabling Tomcat to process SSI requests \n(rename files, uncomment servlet and servlet mapping in web.xml) but I cannot \nget Tomcat 5.5.17 to serve up the page.  It ignores the request entirely and \nseems to return nothing.\n\nI've been using this functionality in 5.5.9 with no problems.  I have both \nversions of Tomcat installed locally on my development machine and the files \nthat are processed in 5.5.9 are not processed in 5.5.17.  I've also tried to \nmodify a separate machine running 5.5.15 and get the same behavoir as 5.5.17.",
    "created": "2006-06-07 15:54 UTC",
    "fixes": [
      "9149320"
    ]
  }
]